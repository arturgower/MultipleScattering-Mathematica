(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    219045,       4143]
NotebookOptionsPosition[    217524,       4091]
NotebookOutlinePosition[    217887,       4107]
CellTagsIndexPosition[    217844,       4104]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../src/MultipleScattering2D.wl\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemoryInUse", "[", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "useful", " ", "function", " ", "when", " ", "using", " ", "many", " ", 
    RowBox[{"scatterers", "!"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<MultipleScattering2D`*\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7191264418094*^9, 3.719126442402156*^9}, {
   3.719130081156681*^9, 3.71913010983748*^9}, {3.7191311970615*^9, 
   3.7191311987768593`*^9}, 3.719141147916902*^9, {3.7192287061537523`*^9, 
   3.7192287064091473`*^9}}],

Cell[BoxData["504636208"], "Output",
 CellChangeTimes->{{3.719228699081126*^9, 3.719228706640774*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AttenuationFromListFrequency\"\>", ",", "\<\"CombineWaves\"\>",
    ",", "\<\"ConvolutionTest\"\>", 
   ",", "\<\"CylindricalWaveFromCoefficients\"\>", 
   ",", "\<\"DrawScatterers\"\>", ",", "\<\"ExportListCylindricalWave\"\>", 
   ",", "\<\"ExportListFrequency\"\>", ",", "\<\"ExportListWaves\"\>", 
   ",", "\<\"FrequencyFromScatterers\"\>", ",", "\<\"GenerateParticles\"\>", 
   ",", "\<\"ImportBoundaryFrequency\"\>", 
   ",", "\<\"ImportListCylindricalWave\"\>", 
   ",", "\<\"ImportListFrequency\"\>", ",", "\<\"ImportListWaves\"\>", 
   ",", "\<\"ListCylindricalWaveDueToImpulse\"\>", 
   ",", "\<\"ListenersOutsideScatterers\"\>", ",", "\<\"ListPlotSequence\"\>",
    ",", "\<\"ListWavesDueToImpulse\"\>", 
   ",", "\<\"MultipleScatteringCoefficients\"\>", ",", "\<\"OutWave\"\>", 
   ",", "\<\"PlotCylindricalWave\"\>", 
   ",", "\<\"rng\[Omega]FourierOffset\"\>", 
   ",", "\<\"ScatteringCoefficientOperator\"\>", 
   ",", "\<\"SetParametersAndReturnOptions\"\>", 
   ",", "\<\"SingleScattererCoefficientsFromImpulse\"\>", 
   ",", "\<\"StatsFromParticles\"\>", ",", "\<\"TotalWave\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.719228699081126*^9, 3.719228706657095*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two body multiple scattering", "Chapter",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
  3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
  3.662743890385994*^9}, {3.6627439285072517`*^9, 3.6627439351816053`*^9}, {
  3.719151177710041*^9, 3.719151183790825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
    "Calculate", " ", "the", " ", "response", " ", "for", " ", "a", " ", 
     "given", " ", "frequency", " ", "and", " ", "position"}], ";"}], 
   "Subsubsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"radius", " ", "of", " ", "the", " ", "scatterers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radius", "=", "0.1"}], ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "max", " ", "number", " ", "of", " ", "hankel", " ", "functions", " ", 
    "per", " ", "scatterer"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"angular", " ", "frequency"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]s", " ", "=", " ", 
    RowBox[{"{", "6.", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<PrintChecks\>\"", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "will", " ", "activate", " ", "different", " ", "checks", " ", "for", 
         " ", "different", " ", "functions"}], ",", " ", 
        RowBox[{"but", " ", "is", " ", 
         RowBox[{"slow", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\"\<SourceWave\>\"", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "#2", " ", 
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"chose", " ", "a", " ", "plane", " ", "wave"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Dirchlett\>\""}]}], 
     RowBox[{"(*", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Neumann\>\""}], 
      "*)"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Position", " ", "of", " ", "the", " ", "scatterers", " ", "and", " ", 
    RowBox[{"listeners", "/", "recievers"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", ".3"}], ",", ".4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", ".4"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listeners", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "0."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Calcualted", " ", "scatterd", " ", "wave"}], "*)"}], 
  "         "}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"k1", ",", "r2", ",", "r1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "r1"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "r2"}], "}"}], "}"}]}], "}"}], " ", "=", " ", 
    RowBox[{"FrequencyFromScatterers", "[", 
     RowBox[{
     "listeners", ",", " ", "Xs", ",", "radius", ",", " ", "N0", ",", 
      "\[Omega]s", ",", 
      RowBox[{"Unevaluated", "@", "options"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"where", " ", "k1"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"\[Omega]s", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "and", " ", "ri", " ", "is", " ", 
     "the", " ", "response", " ", "measured", " ", "at", " ", 
     RowBox[{"listeners", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Note", " ", "often", " ", "if", " ", "an", " ", "option", " ", "is", " ",
      "chosen", " ", "to", " ", "be", " ", "default"}], ",", " ", 
    RowBox[{"it", " ", "is", " ", "added", " ", "to", " ", "your", " ", 
     RowBox[{"options", ".", " ", "For"}], " ", "example", " ", 
     "\"\<MaxFrequency\>\"", " ", "below"}]}], 
   "*)"}]}], "\[IndentingNewLine]", "options", "\[IndentingNewLine]"}], \
"Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.6627438886731377`*^9}, {3.662743977526123*^9, 3.6627440109501047`*^9}, {
   3.662744149910984*^9, 3.66274424760734*^9}, {3.662744763806871*^9, 
   3.6627447643580437`*^9}, {3.662744813082358*^9, 3.662744813210886*^9}, {
   3.662883138285207*^9, 3.662883138440536*^9}, 3.6628831807746353`*^9, {
   3.6628832258119392`*^9, 3.662883236285036*^9}, {3.662883809286693*^9, 
   3.662883809470682*^9}, {3.662884441654792*^9, 3.662884478559091*^9}, 
   3.662884517590742*^9, {3.662885762159151*^9, 3.662885764551669*^9}, {
   3.662885855899521*^9, 3.662885863444744*^9}, 3.6628862945906487`*^9, {
   3.662886345365781*^9, 3.66288642514789*^9}, {3.662886539392873*^9, 
   3.66288653979016*^9}, 3.662886585054809*^9, {3.663000162648704*^9, 
   3.6630001748548098`*^9}, 3.6630017085945187`*^9, {3.663060982769505*^9, 
   3.6630610070228252`*^9}, {3.663069501617249*^9, 3.663069502857572*^9}, {
   3.663070846861308*^9, 3.663070881825128*^9}, {3.6630712289871397`*^9, 
   3.663071250263049*^9}, {3.6630712803391933`*^9, 3.6630712842538137`*^9}, 
   3.6630717437662497`*^9, {3.663251039072723*^9, 3.6632510884755363`*^9}, 
   3.6632525593589973`*^9, 3.663253663391574*^9, {3.663255486598201*^9, 
   3.663255486740343*^9}, {3.663311820833703*^9, 3.663311862817922*^9}, 
   3.663312297443722*^9, {3.663324707545908*^9, 3.663324707744875*^9}, {
   3.663325395109603*^9, 3.663325395713241*^9}, {3.663327035911784*^9, 
   3.6633270380466957`*^9}, {3.6633270831992283`*^9, 
   3.6633271222429657`*^9}, {3.663332906247139*^9, 3.663332909597625*^9}, {
   3.663332977084631*^9, 3.6633329955655117`*^9}, {3.663333031861416*^9, 
   3.663333046028613*^9}, {3.6633335381627417`*^9, 3.663333538953724*^9}, {
   3.6633351883539553`*^9, 3.663335188904065*^9}, {3.66333524432812*^9, 
   3.663335244447506*^9}, {3.66334106083245*^9, 3.6633410644338703`*^9}, {
   3.663341110067521*^9, 3.663341145802*^9}, {3.6633411881101627`*^9, 
   3.663341227636591*^9}, {3.663393167914195*^9, 3.663393168910933*^9}, {
   3.663393251823824*^9, 3.663393298170933*^9}, {3.6633935154571447`*^9, 
   3.663393515914633*^9}, {3.6634035476351357`*^9, 3.663403572211451*^9}, {
   3.6634041159486217`*^9, 3.663404121450615*^9}, {3.663404245365078*^9, 
   3.663404245454895*^9}, 3.663920711068486*^9, {3.6639575852781467`*^9, 
   3.6639575856045523`*^9}, {3.719126464863349*^9, 3.719126469360358*^9}, {
   3.719126568101214*^9, 3.719126661487691*^9}, {3.7191267517221003`*^9, 
   3.71912675354986*^9}, {3.71912682839052*^9, 3.719126907857046*^9}, {
   3.719127138365275*^9, 3.719127214517799*^9}, {3.719127498032785*^9, 
   3.719127502028578*^9}, {3.719128560080537*^9, 3.7191285715003157`*^9}, {
   3.7191359683017273`*^9, 3.719136017767446*^9}, 3.719137498847726*^9, 
   3.7191375624677877`*^9, {3.719145300505685*^9, 3.71914532831712*^9}, {
   3.719145368218519*^9, 3.719145373569416*^9}, 3.719145414627865*^9, 
   3.719149983059125*^9, 3.7191501001155767`*^9, {3.719150421708433*^9, 
   3.719150421926962*^9}, {3.7191506101684713`*^9, 3.7191506148586273`*^9}, {
   3.7191509596711807`*^9, 3.7191509642489157`*^9}, {3.719151038057522*^9, 
   3.719151168312048*^9}, {3.719151200533164*^9, 3.719151268255097*^9}, {
   3.7191514419662952`*^9, 3.719151765173897*^9}, {3.719151798132627*^9, 
   3.719151903378352*^9}, 3.719152371352344*^9, {3.719153363531255*^9, 
   3.7191533864833307`*^9}, {3.7191537502177773`*^9, 3.71915376830939*^9}, {
   3.719153826158627*^9, 3.719153975053405*^9}, {3.719154017871594*^9, 
   3.719154018944398*^9}, {3.719155047736331*^9, 3.719155101985896*^9}, {
   3.71922873678473*^9, 3.71922876113614*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
n1BjWZxXJJ3k7QA5nP8HyJI+Qg==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 105, 106, 107, 221, 102, 101, 100, 99, 98, 97, 96, 
            95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 
            79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 
            63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 
            47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
            31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 
            15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{108, 103, 104, 220, 222, 219, 218, 217, 216, 215, 214,
             213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 
            200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 
            187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 
            174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 
            161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 
            148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 
            135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 
            122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 
            109}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 221}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 
          120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
          133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 
          146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
          159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
          172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 
          185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 
          198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
          211, 212, 213, 214, 215, 216, 217, 218, 219, 222}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.01}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Freq. k\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Check ||Boundary[k]|| / ||IncidentWave[k]|| for up to 3 \
scatterers\"", TraditionalForm], PlotRange -> {{0, 10.}, {0, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X={-0.3, 0.4}\"", "\"X={0.5, 0.4}\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.7191538979327183`*^9, 3.719153924491399*^9}, {
   3.719153965503764*^9, 3.7191539778293667`*^9}, 3.719220429877945*^9, {
   3.719228713362027*^9, 3.719228763157126*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"PrintChecks\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"SourceWave\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "#2", " ", 
        RowBox[{
        "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}],
       "&"}], ")"}]}], ",", 
   RowBox[{"\<\"BoundaryCondition\"\>", "\[Rule]", "\<\"Dirchlett\"\>"}], ",", 
   RowBox[{"\<\"MaxFrequency\"\>", "\[Rule]", "10.`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.719153965558137*^9, 3.719153977902358*^9}, 
   3.719220429912038*^9, {3.7192287133703203`*^9, 3.719228763202485*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{
     "Generate", " ", "a", " ", "field", " ", "plot", " ", "of", " ", "the", 
      " ", "frequency"}], ";"}], "Subsubsection"], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"remove", " ", "PrintChecks", " ", "from", " ", "option"}], ",", 
     " ", 
     RowBox[{"takes", " ", "too", " ", "long"}]}], "*)"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"options", "=", " ", 
     RowBox[{"options", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"choose", " ", "mesh"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"rngX", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "radius"}], ",", 
       RowBox[{"8", " ", "radius"}], ",", 
       RowBox[{"radius", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"rngY", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"8", " ", "radius"}], ",", 
       RowBox[{"radius", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "         ", 
   RowBox[{
    RowBox[{"listeners", " ", "=", " ", 
     RowBox[{"ListenersOutsideScatterers", "[", 
      RowBox[{"radius", ",", "Xs", ",", "rngX", ",", "rngY"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "response", " ", "at", " ", "every", " ", "mesh", " ", 
     "point"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"responses", " ", "=", 
     RowBox[{"FrequencyFromScatterers", "[", 
      RowBox[{
      "listeners", ",", " ", "Xs", ",", "radius", ",", " ", "N0", ",", 
       "\[Omega]s"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "absolute", " ", "value", " ", "of", " ", "the", 
     " ", "result"}], "*)"}], "\n", "\t", 
   RowBox[{
    RowBox[{"data", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listeners", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"Abs", "@", 
           RowBox[{"responses", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "responses"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], " ", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"DrawScatterers", "[", 
      RowBox[{"Xs", ",", "radius"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"p3", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"p1", ",", "p2", ",", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<../media/TwoBodyFrequency.pdf\>\""}], ",", "p3"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.6627438886731377`*^9}, {3.662743977526123*^9, 3.6627440109501047`*^9}, {
   3.662744149910984*^9, 3.66274424760734*^9}, {3.662744763806871*^9, 
   3.6627447643580437`*^9}, {3.662744813082358*^9, 3.662744813210886*^9}, {
   3.662883138285207*^9, 3.662883138440536*^9}, 3.6628831807746353`*^9, {
   3.6628832258119392`*^9, 3.662883236285036*^9}, {3.662883809286693*^9, 
   3.662883809470682*^9}, {3.662884441654792*^9, 3.662884478559091*^9}, 
   3.662884517590742*^9, {3.662885762159151*^9, 3.662885764551669*^9}, {
   3.662885855899521*^9, 3.662885863444744*^9}, 3.6628862945906487`*^9, {
   3.662886345365781*^9, 3.66288642514789*^9}, {3.662886539392873*^9, 
   3.66288653979016*^9}, 3.662886585054809*^9, {3.663000162648704*^9, 
   3.6630001748548098`*^9}, 3.6630017085945187`*^9, {3.663060982769505*^9, 
   3.6630610070228252`*^9}, {3.663069501617249*^9, 3.663069502857572*^9}, {
   3.663070846861308*^9, 3.663070881825128*^9}, {3.6630712289871397`*^9, 
   3.663071250263049*^9}, {3.6630712803391933`*^9, 3.6630712842538137`*^9}, 
   3.6630717437662497`*^9, {3.663251039072723*^9, 3.6632510884755363`*^9}, 
   3.6632525593589973`*^9, 3.663253663391574*^9, {3.663255486598201*^9, 
   3.663255486740343*^9}, {3.663311820833703*^9, 3.663311862817922*^9}, 
   3.663312297443722*^9, {3.663324707545908*^9, 3.663324707744875*^9}, {
   3.663325395109603*^9, 3.663325395713241*^9}, {3.663327035911784*^9, 
   3.6633270380466957`*^9}, {3.6633270831992283`*^9, 
   3.6633271222429657`*^9}, {3.663332906247139*^9, 3.663332909597625*^9}, {
   3.663332977084631*^9, 3.6633329955655117`*^9}, {3.663333031861416*^9, 
   3.663333046028613*^9}, {3.6633335381627417`*^9, 3.663333538953724*^9}, {
   3.6633351883539553`*^9, 3.663335188904065*^9}, {3.66333524432812*^9, 
   3.663335244447506*^9}, {3.66334106083245*^9, 3.6633410644338703`*^9}, {
   3.663341110067521*^9, 3.663341145802*^9}, {3.6633411881101627`*^9, 
   3.663341227636591*^9}, {3.663393167914195*^9, 3.663393168910933*^9}, {
   3.663393251823824*^9, 3.663393298170933*^9}, {3.6633935154571447`*^9, 
   3.663393515914633*^9}, {3.6634035476351357`*^9, 3.663403572211451*^9}, {
   3.6634041159486217`*^9, 3.663404121450615*^9}, {3.663404245365078*^9, 
   3.663404245454895*^9}, 3.663920711068486*^9, {3.6639575852781467`*^9, 
   3.6639575856045523`*^9}, {3.719126464863349*^9, 3.719126469360358*^9}, {
   3.719126568101214*^9, 3.719126661487691*^9}, {3.7191267517221003`*^9, 
   3.71912675354986*^9}, {3.71912682839052*^9, 3.719126907857046*^9}, {
   3.719127138365275*^9, 3.719127214517799*^9}, {3.719127498032785*^9, 
   3.719127502028578*^9}, {3.719128560080537*^9, 3.7191285715003157`*^9}, {
   3.7191359683017273`*^9, 3.719136017767446*^9}, 3.719137498847726*^9, 
   3.7191375624677877`*^9, {3.719145300505685*^9, 3.71914532831712*^9}, {
   3.719145368218519*^9, 3.719145373569416*^9}, 3.719145414627865*^9, 
   3.719149983059125*^9, 3.7191501001155767`*^9, {3.719150421708433*^9, 
   3.719150421926962*^9}, {3.7191506101684713`*^9, 3.7191506148586273`*^9}, {
   3.7191509596711807`*^9, 3.7191509642489157`*^9}, {3.719151038057522*^9, 
   3.719151168312048*^9}, {3.719151200533164*^9, 3.719151268255097*^9}, {
   3.7191514419662952`*^9, 3.719151765173897*^9}, {3.719151798132627*^9, 
   3.719151903378352*^9}, 3.719152371352344*^9, {3.719153363531255*^9, 
   3.7191533864833307`*^9}, {3.7191537502177773`*^9, 3.719153750702847*^9}, {
   3.719154025771454*^9, 3.719154049109263*^9}, {3.719154921822239*^9, 
   3.719154984605578*^9}, 3.71915502049508*^9, 3.719155122882633*^9, {
   3.7191551798782377`*^9, 3.7191552039642963`*^9}, {3.719220404297632*^9, 
   3.719220437049309*^9}, {3.71922855062897*^9, 3.719228550812701*^9}, {
   3.719228855118121*^9, 3.719228862005567*^9}, {3.719228962523258*^9, 
   3.719228968203127*^9}, {3.7192291051779127`*^9, 3.719229107504285*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
UtQl
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnXf8zuX3x+99K1nZMzJC9qhsZRPC10o22SN7703IJjPZZItk77032Yko
iqzod71+53k/7vuP87jOdc7rvM51Xef1/vioHt9vhiYdqrf3eTyeogk8Hr9b
P3b2ibMMHtsrlxGT/66z95xldRZmr7jXWYic4vmcve0sETyqzwQmSwxHHPCZ
nQWdBcBnws9ELkBtkPps1IrjLWc5nOV09ga57Nj7zt4knh1f2Ljk3oAnG/u4
YN7Cj/DmchaPeE783M7ik1N9BWcV2ccH86GzOs4+4txB7pOA+jy8TSlnpZ3V
cJaf91Mur7OE7BOxLwNHJvaJwLwLj/jKghE2sbMCzpKQK01tPnq9TawM8QSc
PzdnFlc5Z8m4T3L25ZljQWcfOEtKbR7Ok5SeBbEknCMLZyuLXw6ej+D+EO6s
xCvgl6dPMriTsf+Q988KVjyFnKXgPf/HPVMSL8yaEkxlZ1WYazZmKK0UcVbU
WWpilYh/6jGtVCKXCmwOuHKyT0WvSuCz07MwuRzEP6VPGvjSOUvrrLizqh7T
UxXyxchVIZ6TOQn3GZii4IqDLQYmVwyuGnMSpgQ9tb6Dn4JZfETtZ+BzcN7K
YFVT0ll1j2lRvE2cNfVEf46k99jPlXxgqjOTAszlYzAlmVc+MF3AKdbc2Zce
0+g7YFVTmlwZ/GbsS+GXpo94asJRFnxtj2lHGqrlMY0K0wKMsOXwW3C3vLxD
OWItPfZ95adPATgKwlnbE9Wo/DrsI/nWHtNsK7i0loe/JX5+erxNvgLxusyn
Dv7nHtN1ZWbUzmNakBa/cNbGWVuP6bEQtXXBC9veYzqvwLnawdOW+vrwFaZX
PfBt4PzcE/22vqCvMNJOR2df4VdlXwzOBqzF4K9I/zacTeeS3jtQW4VYB/yO
xLVv6KyRx3Qpvzj8JfAb0qcB+x68X23OXo9zt+XulTh3J09U29JrY49psDH7
kvRtDLY6eGm4q8f015m48oOdDfHYdyKdDvWYboc5G+4x7am2BnU1qJX/CT2b
wF0T/u7cR3cZ6WyUx/SifDeP6W2Ex3Q7HGtBr8+4ZzXuUZI3qwNnz5jzfUmv
WvC2pF+kV1fitcF0BzMCXEv6av+m++Xhnvvl4a7XztsanqbcT+8kHYx2Nob5
9PGYvvqy9gHTGlwvj+laZ/7aYzpuy116kmsDn+LS0lhn44h9TfxzsL2w3sTG
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
4r1eElfta2KviP9L3b/UXOJ9hfvP2f8BpARpLQ==
            "]]}]}, {}, {}, {}, {}}},
       VertexColors -> CompressedData["
1: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
c/jgb8mEQOadt3j6iHbbvvJ6kzTmzul6Cb7+ZR0a101en608c1I9S4Jf8/wC
NnXK9Xjbjr45nLnnDhS4ZQzqaPyv62n9aXr+6f+soJ82L80fmp9rif8PFPyn
5UXLl8YDjR9F3v7xaUX4vET4pPFM4z/fediWnsw9sKiH+aurG0Uo/aticPmq
nHPnnUOuP6sWoef7919mTJFz7tERN1FnrRgCrzn7LhrLdc7zWiFwKxQjUV2/
96Gf8vpmr1vh2/QkYBXHFdy8Ip/3pOGop3s2STCy0ObClSFy3w5fVNddfJrh
XE/nUvE2ef3irF08yyQJuqyJzr91Xl5ftqvrsiH3mPtS9I24+9fkdYd1q37t
viZB9cPRUy9HyutB2qv6hp6SYIVlg9ahLfJ6RMV5DxNPCRY9/pV4yVheN3XL
3yBYKMHLTH/zRVK5/mHcBR6bjCQY4L7j2N4H8vrrVVWf7PtK4JG0+0RlgLxu
uLq+z+2fYox927WzdqW8fmvlHj2db2KsEWSuu7hQXh9D1o9XWP+G9N+u0F+L
6OmvoIemnzYvzZ9lxM9aBT9p/seRvLop5EXLN4zwMFqBBxo/cwlvVxV4o/Gp
yPN/43/WPf+G8cx76ucma+O2Yjn/szUufau/LobVtWCxTYq8/52YCis1ZQkO
OWuYnt0i13ld23r2csb/KMspv2ZI5HXzhgL7on0S5IQHaK6fI5/X2aLxU2uE
BC2JEWNbdsrrJ9V6xn1ifMtufdi1YLu8buev86DnXglu/nUeozHrP96bi54u
6lwsgXJE9VLzr/J9LVV/e9Uy780tXp0OM47J61Xq3w/w3otxTsfknmpXeb3H
pdz2+UfEOBX8OHmbj3ze4cFHxy2eLEbqk+hH6jy5P0reRxfUSERQikod93Mt
Hzc8QxNdvsng/XRuza4XImzKbH0/RYMP78it8QUtMsh6ty88Gi/C6VNGniul
PDgOjx+b0yBD0raDiX7nRHDflaDF4fL+b71UYT2tP03Pf9NPm5fmjzXxc5+C
nzT/aXnR8nUhPIgVeKDxQ+ONxieN59mE/18K/Jf24Gy6KRGjqLdr9YUZ8j4X
3Udv9JklwUZdgz3prP/gR/NiwP/oHC/iuP2nTquarwv8YiRQX3O8t1aAvN5W
ntt58rwEY7+YxozaL683XxhxP/GABGc3XLgRs1Bef9FbPL9xvgS88xcLI4Ty
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
C3NPu/B2X89xrjJUDNYr3+0ghKFDXjcdey5ayh8p2XyR4tK0Ca9MTFswzbj5
ckllPe6Gqh3d7iVF0I+TXc9LmvC1mfXq/eNaDBs5Q9u6ToK4wBMhRocbsSdp
4NHwMdUI6jq3d/IU5v1jpO2SKRDgTL/6IZbjy5HnrhlezxPCZtfw/bVGfHBm
Oc3f8LEMzqPvvrB/0IC8otBPjSu4OOnUS9YiZmHwywGnfefW4+0S8a4VO9mw
7QhY9VGZi9DvrO7e34qxIa9u6uF51TDNWLB+ZIGAWqf1oe1L00mbi+YDzTea
z7Rc/uW4guS4kORIzZ3UJYQTbQVO/nEVo8DVzuLcwPlhErxv1Mgf6/Yff17W
+8NjoxtiTFs5u19xigBNphoj8kQyDBl5JXTfDRH+FF/JPtTGQ8PFOyu7hcmg
YRgXG/VYCCNOpMvJfC6GHdkXuE5bhovuuj57ElqgUjeu4YYfB1a/vkSbXZPC
8+J7k7AdzZh9tJ95kqQO6VtXc6KY+338WHvPfQObUKzf4bkmlgWDoivKgw5J
YHntd/7L6AaEvOwVlMapQEDvI78jS8VQtTF70tbEx+rFyzKXZpQg/P5+Z100
w0fPtGbDDB66jnRbVNdSiQ3vxqz/yXxnuhtG8nqtZt45XdVyxs9kY8mXW33U
R1bjy7nqa7vm1iKqy94S1xIeVnBfp2yNycPK846sYr0KGOtmn+6nT68vJn0+
kz5nSR/Ffd3JvpFEpy/R+Uf/f3X+m6snmcuFzPXPBwviwzHiA803ms+KuXQn
udBybCS5a5Lcf5HcaZz8N65KwnT2e/4Sw8jg+Zilq+V8ek40Cv/+QwTZkAeq
j/346DFWu/pKsgzuJ6e6nO8lQpQba6fYgoetpZejo21lcJn88+EBFSGydw83
c2/joLD3mEf7SqQozl6+d1pDM3jNZw58HVIP64vZM0sdpNiTuNr54vUmjDxx
QmT/swa3ahLeNmZL0Jl/dNI7a+b3Kzp4bXNYFdq9mwNjDCWY8dLct+szAb46
lV2YmVWGn+PvDLvxXggNdYGN+0g+5txjV6xoLsOec/5/cnUacaOE67PjIBdH
NkXVPtrKwjnrTpNANgfrpqrNsV1YD+Oer25NWsjBqY6Az1V3y5F/sHfcjT41
aNbPnDa+kk+tR5M+a0mfiaQPbd/fCjpnE53fyFxWZC4ZmYvmA803ms+0XLqT
HF1JjhEkR1ru/40Tp+G/h3kvEEP3XMDkqF4CtARyon68k+FS9dXxnctFEC4a
MVB8hods7cKb4z2Y95e0hfNjrRC3skar3ljPxY6g5ccu/JTCVZytpraoBUom
GUHfenGgU5dwRDdIihtFR4/UjGiG85uFmb/G16FoCP9Z6F8JyjfeUueUN2Kl
WUrI8N/VqH/rv8PXW4JgzUtFRt4NeOedUvrnWAUs1+l+nV8uxoaIN1o2Yj6e
cX/e/p1dgm3f9sYsY/yS3f56usCfh6aY0PTdBpXM7zGg+p0n872aNHbl7EYO
9PO393vjxtz77cv7tenX49bGxxkWzHvaorj/xNa+XCRc9LWYsbsMfSYMzg9M
YGFNzmWbvaYCpLwcFjY1Nwebn44afCGBec87LFMzSONS6/GUPrR9dYjOIUSn
NtG5k8z1mczFJ3PRfPjn2zHi23vi2z+fy4jPTsRnxVxWkFxoOdJyp3Hyj6uV
hKuRhKs9mx4cPMSV4fdQw878kyLEa4aU3yjj4cg9AzOrIBm0ljlk6sYL4fIw
59POh1ycH3Pt/KxhMjj0DJliHNcCT806/SGeHHhNH/b2wW0pdj6d/GDWoWYc
9J4d33c4Gz1sDLyvG0uxZWFx+bWFTXDeoRs8Rq8GI3cFXzG7I0Hyy+fzw5Qa
sSvzQ0VvcSVe5xo+8B7OfAc1lreOvCJA0uZsNb0DZRjZ6smv7CPCSg/l7e1T
+QjIOPGTdakMFuuvz3iu34Tte4e4eVZzUTt34Y3pU6qRoKHncfQvD5tS7s4y
duOgoy3oZPQgNnRPWiuNd6zDIZ+EGfWZDPfYpx95notux/zed11bhpR9Tt2/
n2dhQoL5ivNTmXduoGyC0rIC3Eo0SNshYL7HZUrRg/N4mEepdyF9HpM+xqTP
cLLvQbLve7IvTecUMtcOMheLzDVawYe9xAeqbxSf/+XiTnJZRXLxJjl6khwP
kxxjSe7LSe67SO40TmhcvTN6zp4YLUPp6TnCIwVC3FbuX9Qp4CLteMj83Eky
DOuw3t1R3IIDu47/LnjIYfzbviwrR4qFqb/7fM5qxgju5O7N2WwYR+h/2Gsv
RUHPt9ZTEpqQ6t/zj/hrDc45eafblElQtO/EsRSPRnTd91S58nMVXu1z7h9m
L4FZWUmzm24Dir9O6j7udTkss7fe+54gRqPwmPr1t3xcGfOxnp9Vgu1GCTkH
B7bgc8ym6WtDeXDbPvaxkqwCp2z1NNvdGpAze+FCnRnMPftHysoxzDswP6Bm
ScsVLj7tinM9XlKP3if3ivVT69Fj8p3O+wk1qAkbUxAyug5jSnY+7hzMg/C2
LNzZvAzWemtGqp5koav+ik2YK4Dz2rSxFuFFaDo8OFBSUAl20ofckON83PnW
Jnjrl4OcvtwE65PlcH4lPGp/jYvblLoLpY9YYd8uZF+aTtpcNB/ciW9S4tt2
4hvNZ1outBwnkNzzSe6PSe7/OJlPONEinNC4onFYZZOpedZKBt/3Bd/3SVtg
7+gas7Gcw3xHxnIbyphzOGnVZztRM3qPNr/ZYViP2TseDP7oJsV+U8P2iPIm
mMbDwNK/Fpw9ZTs/yiTo8b5bcWRyIywGfr0VH1eNbNvH6oG+ErxcbtyU6d8A
YYvw/dvYCggMvu088kUMjWNOxe+Z79PxlStsZD6l6FlQqcN3F2LSgryU+cw5
Ydj6SstgYzmaC9fu6aPchMhN3+YlfeBiiJt+wGKXavzY8nPc1bOMv8bpK6wu
cKC0aVSm55Y6GJlU37wzkoPcsKKojrdsnLftyO6awcHh0yf63ztbjfKUSXzl
nbU40e7nsfARD09sHy5+b18K83aN/LSpLExS+vh7R6gA+SMPuZ+d/h4PedfT
XTor8T7lS/jqh3wkjDhotLUkDykHatcFmlYgd8bm+GGTeJgrNh5pfyQbpell
LvG25ej35FPjUg8uRh93V1nTLRv9PzttvjayHDlPLvuWLKTXZ5E+JaRPX9Ln
Btk3leybR/bNITofEJ1FRCdtrqMUHxR9iyG+/SI+xxOff238X58bSS4RJBct
kksvhRxHkxxpudM4+ceVCuFqKuFKkUMTwiGNWxrnywYMSPerkcJweYJy8s9m
KN+t3ZpgX4/HHzsOLfKWYtA4lwMFsiaM8FRKsX5aiw+8W2dEfyRgsWLGrixr
xOZHD3WX/KhGhUXr8J/HJZDcK+7+504Dxh8/kMLVrMQgV7X4mb0l6H1F7V3S
bgGEJUm+T4aUYYMl2+DvNBE8l25/WzafD5OuTSdytpRhVsU5yUm1ZvQt/qXU
aMTcY667Gzw0rIJyAHfK0k8C5Nh/38BV5YI3U3uc9EsN2nr4Tc64yEXsz7CK
cx/r4VmzeVu/jHrkjalbdFJci689i64bXqzD5MRTR72Y+6GV0voR179W4PlV
t5kHDtdg3a+qiyP8+dh2uFIlPOgTdny71uAbU421cR7i5F4NaLcMcK+LewcN
Vkcvfggzj4tgQfelfFQ4/JouHZCHQK+nm6N+l2NXWuDIoG48rI5by809k41C
q9wqk4XlULrM8jXaycWioYk6U47lgJ/0IvrT6XL8vRiYOzaJi21G8/esYOdg
6YpHDVE3y5EQMnuqynMuFpD1PIX1tP4fiZ59RI8X0dNG9Pcn+gcS/VvJvNvJ
vC5k3hnEnxcK/tD8pPlPy4uWL40HGj//eJMS3iYQ3v7xWU343ED4pPFM4/+2
5q2+Gj5S/GEP3GTZ1oTD6+e+scquhfv9dNZIZSmcnKZyNnMbUfu3ZMjdoSwM
ncwKGX1GgsEGUX2b3zTgUq2df5p9JViuOvs5QyX4rvPK9/l5AThqY+Osdpbh
ZVK6OPyBCKVJt/DOhw/dJtnxZ+xS1N7YoT//ajPCXZL6ctbzYND3udBvTyVs
XfInrz3VACvDBIcrC7hw28VL7zK4BgsPX+G5BfBgnjU40N2CA/5f+7aBj9mw
bU5ZnSVlQyQ6LWQvYWPQhYMxC0Zw8cDZIK376Gqsepgq07OthdTm97pPn3jY
bFy9euHLUuxVKomdtIF5bwvu6c7cKsANnzFbnWo/QPI+rFTXswqFW9ZGivsL
sLUpanRP33wIP81dapFUgY9Sl8Yk5t1xd9+WItnLHCzb4SqrvlKOnsXlhvdT
uJjST8Wwu3MeQl9Hhqr1r8Ddiyv6iQfwoPXGbOEA9Xxs7luhm3GyAqttkyMC
mXn+7KpVXZOQj217t/Z9/7gCZb5dLG0u0ddbkP7HFfrfInocFfRsJ/pFRH8x
0U+bdxPFnxTi52rip5j4uYD4Lyb+DyT+L1LIi0vymkPynU7ydSf50njIJPyU
EH70CT//eOsgvLEJb//4HET4vED4pPFM4/8+e+1ts65ShNrXuIbVNiLW9V5K
Uh8WlqYZ2ZhFSTDMY43byZwGaLleK52xshK9PpsIZoyQoDVQ0nHjmgD3LD6G
LAotw+p8G+zlihC5d6fqimA+broofVK7UYpxc1RmODLfLSvRXoFgHw+HDC3d
PHQqMdfsy/zNsgYYrR+zcDtz3nke/Dbq3FUWhve8XzeknQfPtQm+9Rs52H37
9/5EXTaedH/wY19PDuY1vlaOSGND6dP78VvzOTh1tzNr/XYW0l3Wjitlfv9G
WgNSBbt4KFEOdH89oBxnhwVVTKpi8l34oZzTTYDglvtja/cUo3gid6Bxl2os
mFarzw4X4NqOJbtezyvEurM3pnqMqcSecVeGujLfeRW1rV/u+eVhR7RAxWdI
BR7dCno0VouHuJ51pY5jGJ5r9uzafaYCoYLoljGHeSiL+Gh4QlaIAJ/8UGXG
r6AtVgfuGfDxeNUv158vimDEX37AtLIS41/N6EiL4mNJ9NPCmyvfY/OV0QfG
dq1Cz3kq4eJ0PpLJ+jFk/Tiyntb/CtGzXUFPD4p+2rw0f2h+niP+ZxD/xxD/
0yl50fKl8UDjx4Xwdobwdp3w9o/Pr4TP24RPGs80/j8LTX4uOC3BRK+dj3Kf
Mef/w62DlFGJNT56A3toS/B8Vo7XhXgBPMZdmv/qcBkKT81ZUy4SQWvSUa9O
5p22y2r3kZrzpbiuPGBeuGoL/ggl6UbBzO+96fOuXr8rMK/0tYVYpxEnf/hw
9x1k7jFnlCTBW1m4tP7IpLSpfHx8lo1r+ziYe0Mzx/BTHb5uerawy3oOSrpt
TLn3hY1HI9re68Zw0HeO1rSn5jV4LrX9IPtbi4Iu0i7bLXiwE603mNNRDvVO
A/7oMTWIjLGe0+UNc64sH2o1wPoTem1XWtXhXQ1L8Rb3wWIBbILTD5npFSG9
V2Km+G4lOmURXWZ48jEq++H4j1/yMV8Ah50FFThostvG6QEPIbts5nW9W4jx
JouCftpU4rrUe9rVwXw8XWbf68y39/A99Sajh3EVVg3Yb9JQw4fP/KDFY1yK
kdfv/sZVX6uwpTXFcu0RAdpHrQ/5PfUTrmSptZ7bWY3h53r8tWoRQNefNacu
+BM+lZo+Nj5fjZ/R9usW9W5Ah8J6bbKe1j+N6PEhelYSPaEK+m8Q/bpkXjsy
7wEyL80fmp80/2l50fKl8UDjh8ZbngKfuwmfijxvITzT+I87srQ1lvkeVW95
clmV+R6NyszQPLK9DPU//DfMbhKhPe5V87oQPryGXofV5VIcWP/gZPqgFizo
6PO+MJTREzJnZJSkAqfnKWsGoxGDkwQ20SeYe4xtcM16Gxa8DxwcareDj8F9
e9ptDePgfW1HxaNzdeCOOj1/eCIHT7QHmrXq1+MAa8Ah4Q4OlrN2Ro4T1eB2
xenTqajDNB376EFdeLiYey1sR20F2nwO5CTvrUG9em7fpAN8JL003Ke6sgTT
D5lESrnVGOAgGVrJ3Gv9174uLMv8gJKpc3JuulVh5u9Za/LVBBhvOMKA71WE
9qedpvlvKvGo88KE24f5+LryctwDnQ+Y8KWCmzG1Cs/uP05+08DHoLQdU9pe
F8M501iw0ojhwVqvS+RDAdKz9272jC/B1QeeAzf8rEa2xyfPiBcCNHzLjto7
rQyt082Ol4WxcL9X0vKXNgK8Sj5kkDytHOkv4ifUN7CwLrzlotd3PgzTs3+t
PFOOZXEjRyxXrsHDfnbH29l8vFZYv5asbyT920j/e6R/KkXPQKJ/tYJ+2rw0
f2h+3iH+zyD+axD/Y0lerSQvDslrBSVfGg80fqIIb5qEt7uEtwDC53zCpxHh
k8Yzjf81lz5fKWwWoYA/IauZWa+6zHegV1wp+PElUYvHtWDCTCfzjZE8LLn2
u3FiWQXunPBRf7qtETXl08Zkx3LxSCz0ilZnYbnFvHD1B3yEWBy/wrnGYfL9
bDlhXh0G8/fWru7KxeIioxP7XesRmVhzUou5b/bQ7JcyR1ALxzkbvXC+DquO
hsvqnnAxyo+10tCgCtNc/ZoixDUYOG+V5fPhfKgveLbosUYZDubyNVkHmN+b
m8Zkr6XMvfLRQ4fGWZ9QMD+vvHNXNXZJLLS/MOfYo1cZ/vf3FqNlZ9S5SV2r
8f7eGuWnpwVIyNDbX82sd6jdk9rKrP+gk6klYtaLo3s5LplUCsslmycsMGbh
ml7fSZ1nBKjQuqJWuK4cZbsOlEV8ZSF1eo/wEgkfdx4MvjNqcSX6HrRtWJhQ
g+9tfTcHu/CRGH1zcUBeFf7cO/+1aVQtas4d3hsn4eH0CY8pZQ+rcbVwk8Yc
/1pIUiv2ZdziQfnSvOcjlFjYrcl9rne2FqnuspHbz9DX31DoX0v60/SUE/2l
RH8a0U+bl+YPzU8O8b9QwX9aXrR8VQkPyxR4GEjhh8bbLcIni/CZQvik8Uzj
v/Kp5QJtlxaouJ+7F3qVh527v/sWXazAHufeA8c9acRB26kGV5n321m+w87H
6dUwVUXfYi0BLGfEHX7J3BcDpklzD+bXIjPy05gLUVzk5NmW1hfUg3Wlsv1S
Vj16dBO2L13LBi93x+o3w9gwWOnEVZvPBU89dDK3LwsmXwquOsTWwtaYFzow
nIf9T/4G5R+vwGaNAR9kzjXYpxsoC4nho/fuGqeOqWWwOSYcdpM5JzNmz3cQ
MOdk5D2dZ2PDS9Ey6Ogq8RIWsmcnqj/YI8CbGZbd5zC/e9eFqw92XmIh339U
hru5AOaXTs4QTavApuvf/cWowbi0mrsj7vNxtfPmokHrq9AW1JB5RqkWB9+s
OPS3Fx8zNvV55bKLhaeFXUSSZ7V4yR6qre/Nw6VBtYevWtRia3lD3FTnOkQ+
PLGnScjFd3fTetGpOty5e+hTcEkddnGt9y4M4SJUjZUn2MCGzVWr8G7abLBW
17v/nsfFprE2F8/eYqMke27GZAvm75KgUyJT+vpOhf7epD9ND03/dTLvNzLv
ATKvhYI/RsQfmp80/9UoeR0g+bqSfPeSfAWEB1PCw1zCgzLhh0P4MST80Hgz
JnyaEz4PEz5pPNP4r4Tvd4lJE3Nu+b/MZXPhVfrOaq1BNdy8DJQ3ZQog4G6N
53Th4otSwus1PWtR+CHeJGgzD31b1YLXGHPQEVuu+7uIjRW/v3MWMb/jy9vG
+KiXs5EkCAzrm8zBnRFrgo5dqYVbD3XfFwfrMOGW8rB1RVwEHl1SOPZ6Nd4l
+pzf41OLRYHPczLvMff5K72XFL+rhPVAwaTiohoE5l3+bGfJR/4addPiRZW4
oPfW3Jg5Dw/tVrK8zJyHe9PY2TPUqmDV9vT+a14NXt04HSQbxce149O3jUmo
Rr+r1pO37qrFxQCDlvj7PNR2TRl2/koNPJbUfiwcVQddA6eW85o8WA+1usdJ
rsMQj5p3vuw6mPx+7Ga/nwv2ew/X9Jh6FLcmrmo4wUbKzL55YjEHfxdN3WoQ
y0FebuKoyqH12NH/1JdQPw5STPvdSDPhwqTwk1resXooX6nZY6PFgXj8c+mp
SC4mQLrGK78eUaNylnTPrcf1ILNDsQ+Ze+c6x13f2PXozP06ZVV8/f+tNybr
z5D1tP40PTVE/0eiP5Xop81L8+cG8VOd+HmB+OlL/J9G/H9N/KflRcuXxsM9
Cj803mh80nim8a/FT5q19UID3kbvLTBbysW7FE3p3R41UJJ8P3vNj4/+d3NL
Vp7m4NUInfP1YXVos959Qy2Ii7mmDy59flmPrNJqu6ayeqxrNpRNelqPz/3i
1tw+x8bpgUrXB/E58Aq3zlphWQcd14V6u1LrkMMJMveN52LV6Q8TVJ/WwH/0
qNfPJ9RhvV1uiLY6D9+MSl/FONag58Fx2oPU6mBgcT1dOoGHrPwlnwZIazDl
eYz2M+s69G6yKJmmxMPris6CJub7mV0bFGPzrA4ukN6IvsiFyp/pDhz1evDc
T7rUOrNhO2rtNpuBXCgNPDO98gjz3W2Y0DhGrR7SsQ+WJjH/fM0k4kL1bi7E
QR++30mrx92+T194COoxxnvNrgQHHg7rvFinMYaDjRvf+CrzmPMrwHSGkiof
P23yphht5WDbnIZnsb3YuFR26VFnBPPu+RomaT3PweoBQ3ZkbK+DaWLQ4kw+
c3+vmn93cxoHXewdv8zsWYdh7v6lXZUEkO02MF/2igMLa++kLs211PUXFfo7
k/40PTT9tHlp/vSg+Enz/zXJy5Lk1YfkRcuXxoMn4WcE4SeX8EPj7R+fcwif
OYTProRnDcJzJuGZxv+eo+5ha54LEPPlmIcR8ztSdXdYntmrFidlGP9UmY8p
pTd/d93Cgb7qFg+/fmz4rau0m8Lc2+41lK8ufV+PbT2Nvym9qEf9xzc7xp7k
4HtV0piujH8x99/2zdrPQf859kZTy+ux/16rY108G+rCBYPCWRz8OpF1y+BA
PR7lZV5tOczG0kHl47zbOOgd2i/0fkc9njUO0/9xl43C/u1BO4o5mBqV0hLJ
vLtUXUPL/zD9e8Q9fiYN5OB+yjvvJAcuBEkL7adeqscXvQ8396tw4Pib/2aJ
GQ9Sux7x27Q5OPhqQLc73euxfk7biJlafEwt/+J61pODRY/72Bi012GrdoHK
6G98uM3aHn3kOQfGI/fPzm+rxapxiZq9nwgwrdugK0l/mb6T393/oF6L8VFB
WgErGhAg1jVLtuSCU+XOcXGqAT9pkumLogZwo6fdmrGRizbZ+L7LClmY2c9v
54ZBjdi2RKaRG8BFuVGEtsiPBdUZooN1Exqxq2fB7A1MnqE64/x0V9HXC0h/
HunfSvobK+hhEz00/bR5af7Q/LxH/OcT/78S/6dR8lIl+T4l+b4j+f4gPDwk
PNgTHmj8sAlvHQq80fik8Uzjv9G5fqb1LQFyP/N3+HZyoHR6rM5k/VqsZE0r
svfkg3fcylbnFFPP1ktcfLYOvv2mis8y73wVpwMWm6YzPht26+NxlY28Hic+
BTPnQYmaGGd6cTC0/Oe1DbPqcbh3F+GxSi6SlibxHTrrwbaOfHR2Vz2OdpmV
5tidB3HEg4BZfTgo1uRdfTa9HqUVnnmp+3gYGlVhNYb5Tm59kzCx4TEbsphX
U3x0+ahYbxv0xpsDT60hWjXSOghfq+mOb+DjuP65cwLmXNWKSLwdoVKHzg82
O7PTBFjakjzc7H/+fyiX64c4aNQiuH+fzJlBDWh8ot3owdzXP7Wuc32mW4Ov
F1LP589qZPaLsd1wkovrjQGr06xZaB7pqLW0uRGN9UdnNuZwsWNxE0u0vxrs
Hk+W9vduwti7YuNLbQy3wYvvL6mrQpYKe8nUsibM7re710fm/tHInNXhW5h6
XpcBp/o3IzWXZezCnI/3nvQS+upU4cZm/aWTDJrxRmZkc3kyD9nds0dOVKGv
p/Wn6aHpb1WY9yqZl+YPzU+a/7S8ShTy3UbypfFA44fGm58Cn/aEzxUKPHch
PNP4d4+t+Z26qAHX0G6ByVz0HzsqsHpDDbq5dldtCxFglO7XR6+kHJjt3G/m
PL8WtR67Ks3UBSi4OkLcLZeDUINO2+9ltcixFOz93sSHT6LUiZPOQdGKeO+5
ynXwidm/wVdFgIe63BOf3zDnzLM+XrPrme9RmOTanU0CcBon9fnL5WAJr03Y
za8WAZvH+z8VCsAvVT3zsT9z7g0oLOtTVoMsU1VDncgG3BL13fR5IRePp2x/
EdO/Bjeai3n+cxpR7trzk0MYF1NtR88Pn8FC7znb7Zb9bISX3cRh595xofzD
f2akO/POKvlbuf9OE8Kse+iM6snDOGnH+PjYKrQfN34umN+MBYG64WNn8XB/
2IuoyXWV4Djntm0sbYazd61x4C4epi+ZF3p6eiX+zj+x0mN2C1427p9+OJYH
4UizeOWMCvhH9x/69mwLmnuqxQ5J46FunusD59UVKPfZ8XFjbgs4S73dj+fx
EGRbcUZVpwKmVvWGvSpaMChv9pZNRTz0nt35dFcv+npaf5oemv42hXmTybzV
xJ9TxJ+xxB814qcn8VOV+Enzn5bXXpIvTyHffzzUEx6WEh5o/GQR3nYR3t4T
3hT5PE74pPFM45/97lL6uX2NKLjcL+7XZS5CbFeoa/2thuq0leNi+zWi+4Bf
rBd7mff/5cTAJ4EsqJTePxLT2ADjvxnRy7Zxcaevd77kLgtlu8KV339vQP8V
eWOfeTPn0hy1n0ExLEQOKZj816oRyxa0JzwK5SLiukW/FbYs6D6QdGfdbEQ/
/9BRSOYiod1uf2p+Naw141W2T2gCxziFNbGOi1jTozp3x1VD6ZJ5z0VZTRgy
/LzZ0f48zHiy70vC/ir0/ZUUvt6lGVcqf4y8NY+HbT8q/ALeViLqQLrj2NZm
XH71fVbSfh6au+UnmAyuBNtIcx7nUAtGDf0zUCuZh6rbgqzX3hUYPKzknNPv
FhzWi7A3YfHgY76xAnXl8JtQ8Dd7ixDWYofnsX95SM1UfaK9oRwPH1S6nH0h
RPDNjWJ3beZcXOsza8uvMpx7vttkSKcQuoLvN7ub8XE9RbXfgNQyrEz/MnOF
jgghdsPthlvzkdwj8NH80DIYOBgavx8ngsvr2Y8PzOGjbaJpn2v7yrBKYf19
sp7W/7GCnjKih6afNi/NH5qfNP//xP3/8wLJi5YvjQcaPzTe1AifEwmfSYRP
Gs80/p/b+RfmdDThdB+Tr4tG8ZDXX1ScNaMKo64sVGEXNSE4Z8+kqYN44HNa
/cy8q1Dc/fmH1JImvLApOWrLfMfjMlYor/Cowj2lY9FVXZpxWOlDdKUhDy6c
02ktJlW4o52m6uzQjF+5G8PzbXi4yhmY61VWiU3JT6pznjTjmZVZed4WHk5E
jy3u7lIJPfbl0d/GtSBEN2bopUgeBF/787aVVuBd8NGvDxJb0HlTibf5OfOO
VP0+adGcCgyLXfjut7YQ6ttmb73bwMPogX3PsdLLkWPlkOgYIcTpgs7Lh/rw
kYnxCXEm5VhY4Dw48psQdSVHWnea8HHaeL3ylowydLuqXC1aLEJX/zmbA+35
yFEuOxHsUIZj/r0HvYkR4bHf/R4Dt/Gx7YHmL97PUniMvjzT4aMI2o53GtsO
8FEcFbppU0Yp3s+bMSugQ4QpOjo9NU7xUd8z+YPRyVKYR8cu39ZPjCuWo+4F
RvMxx6S4pbtnKX7+8DrvoinGpYbEGNvzfBxqe2KS7EpfT+tP00PTT5uX5g/N
T5r/tLxo+dJ4oPFD443G52gFnrmEZxr/H8d9GFsf04Lhw660GafzILq51vuJ
UwUK+aOvDT3Tgteheo8NU3nQmTrnwmGXCoj7+zz9eq8FL3Qn637J5OHPS+m7
rOkVSD8p4g/it6CGk5LVUcz4426+dPivcpilxnzMGydE7cLu14OEPBge3+ib
mFSO1oIp7QcPCVEVyU6RqfDR8sFxjuWccpQYbAn1qBSiNcLMpdyAj/1ff9RV
15ZhrZpY49kEEVhnPwuN5vLx59TgU+v8y1DRJNzBPcDwML6ryYqNfLjy+0bo
DS3Dms+VI5NyRPDZfXSweQAfZukb3SS5pdBSzWseqSTGM5NxW7Qj+HCw1tn7
81ApVhdllD+eKMb4aYf0yuL5qPLvYtzfrhTPR9dnpS0TQxru1HX/PT7OtXnb
P9MuxZCwfu+W7hSjNPXTysA0Pt4GHr2c8LcEoc9vmHU/KEbyBck55+fMXKvq
z/0UlWBGn8H7HI+LMXCajV/8Sz66WNpwe3FL8Opjc+mCk2IY+TTevfOKD9+q
K8LwuhJYkfUDyPpuZD2tP00PTT9t3iEK/iwj/jgr+GlO/CxT8N+N+L+e5FVD
8vpF8qLl26bAQzPhwYTwU0P4GUv4SVXgzYDwJiR8Pid8Kr36Xz7fKfCsTXh+
T/gfRviXEP5Da32DR5uKYLk69dRTWz5GV92bP96nDD/CqrSXW4lwNNY5btEC
Pvr1/HbLzL0M3dcWrNBdI0InN2C7jhMftgPaVP7MKsOhnLClP4+LMPaP+nee
Kx9plxvtZvUpwxNJ9aT9L0TQv8e6sMKfj8OXU2JCPpZibu9VablfRfjjsSN9
20k+lBPE3VIiSnFWsmxexWgxTp/UbHa5xIen8bDVt5eVYtVlZ062gxiTR8Sp
vr/L3FtSSx500y1FWOPwxgZfMR7ydze9e8JHg+r1abyOEiwY6ftGwvD24fBk
KZ/h7fwByZoPtSW45PeyRRQjxteddo1aOXykmMc+Sf1QAq9ZR+qnXxCj3TFX
JmTq69oHZ/56V4LUg6UZS6PF0KzP15iUzUfP1tkOeZ9KMFnvaohTmBhZX8zd
VV8zv7u3L52XM/27nFp75ckRMQ62mJvcfMFH6IajddeaSlBksczkWIAYhxwz
H+k848Oqy3y1oZ9LkD5o5zC2vxgBF170NMngo/zgRD/LVvp6Wn9TBT3mRA9N
P21emj+LiZ8fiZ9niZ80/2l5nSH5hpN8vUm+NB5o/NB4U1Hgcw7hs1OB5z6E
Zxr/3WzdWGUPxLC9ZvC3pogP/QVHp21/VIJKz8bsNRliZG521DEv5iPKWvTa
MqkEd07n9IspEmPDrudKHRV8SC+sCr4UUYJALBu3v1iME1mvb1tzmO/yi8u9
zZn1iTcLnJTLGJ/zmgcMauFjU78HHK0XJbBIETtdrxCDvdk6+pqMj8Unnw9c
U1SCVtbfcXmVYljM87677ysf87T+2riXlmDYx5PrVJl63O13Y+M/83HzssuB
90xeL4zDNKYz/e/HFokuM/3blufCM7MEsnmTbm/7KMbdlR6C6Domx5XjFp2L
L4Fll8+VtqnMvYUrkWz/wIeN7Oxck3uMTsHlM7IgMbwczhV6ZvIhWhalrdJQ
glODvHWL7Jl8f/fu2M3kO3Jx8HcDvVL8+N5V5KrL7DvLcJrvRT72zXM91c+5
FGq+zxsCvouQtf31tB3MPWftlPX9f4eWIqZXaKshW4TEuKbmcUHM/Ufl0PjP
N0vxYMKQ3d/KRNgTeN/38yE+2N/C3F4/pq+n9afpoemnzUvzh+bnP/+Tif/f
iP+0vGj5/uOhjvCwiPBA4+cfb2GEt7eENxqf5YTnF4TnaMIzjf/EWXWS1N/M
vm+HRi5xYN7xm799i35ZCt+SyRkaTP3bI7/eGUsF+LFw4Pybz0rxxvhoScgv
MTKGpC9cs0SAu9LWhv+vrjONqvF9v3hJGlBUyFyEKKSRxCYlkjFFURGiUqiM
mYUk85AGREWRiBRJSZFkqM7Q6Qx1hqf5HBKlr/H//Nb/9uas9by917WuZ197
f7qHF445eSxsGbw1xe2nHCEyTe78BRQeXl3Sefs+C0knRt573C2HMBKhlU4U
fKNL4uKv0/vG673rLb/J4XgxfWr0NApLe2zmXDvCwsZTx7O8FXJ4HS35stmU
wsFpA+wtvVjIlsk2dcnk6O9zZ05HPwoDWqOefx/BgrHTIttePPoessj61eCv
Mrzv83DJV3Y1BvVb9l41X4459st3b6F90M3ZHxORVg0bi1w3TU85qN3vvrrd
k8E4om7h3yEsJL+67bJZ3oZNWW93T46WIaJUoTshjoWn732e2Ue1YYp7hv+5
dTJ8D3xz+05/NvbHppezxrRhwbe3NusdZUjjyyenH2RDuNxmtSa/FUc2TR9e
PE4GM97t8a9q2ciJ7XOgIr0VXhOmuIYPlGFTkUd7uj4HmU6lro/jWjHtzxmN
sH70++Lqp1dF4zh4qFQfROqZ+jPpYdJ/ncy7kcy7g8zL5M9A4qcj8bM/8XMU
8d+M+F9J/GfKiylfJh6Y+GHijYlPJp6Z+JeF9ZFOmKCAbsmZsO0vKBz4OVh/
RjUbc1uMZR/HKKAe7Nx57jEFKaoHO+SxsW3ZlYxFRgp0bAtp+HCbgsnf+c1D
LrHxyWGE9I+hAmYOBWHHL1Hw0/cQv9rIxtV7o28t1lVAzClfvXQfBRvVO9fz
zdgwXHOj6UMPBfQMog7q+lK4YHS4h20dCytCzQ5M+SrHfTufn+p2FAwzww0C
9tH3KEQdXS2m9z3H6Se/aFA44ZGgmarJws20QMtehXKk+qhRvCoZ2LG6W58l
V6MnZ0pbLxM5ij0O9ctPpN8dazWN33qwoL7e4Vg3fR+e1WC22Je+D6fEpAf0
ou/DSy9NPKHKaoX68CPt88bQfxfPe+trStlIdv78k2Peiu/HOz5L6fvtvRXn
kwPSOPjTcuSQX1wLvi3w1l1N30uXVM0/aUTfS08YRQy5PbIFtusW6syPlcJE
VxwmlXDhbeQwoL6qGfEbbk79ulWKUacV/h4zanDMvFYqzG3GVvvqxdvp92ZM
3JMTA31qsIrUJ5B6I1IfS/rbkf5GpD+TnhtK+u8S/UvIvD3JvDvIvGpK/qQR
fzSIny+Jn2uIn0z+M+XlSfLNIvkOIPn+40Gf8HCJ8KDMjzXhh4m3f3x+IXwa
Ez6ZeGbiv/ZeD9FzNwV2eH5voAY2YE5Sv3Hx6RysHjTF/cAcBRx8g0+9+Uuh
6uy6q/O2cKAbkCjtM1WBn6M6wyfIKHjr+cgWm3IwttWrgDVeAbuQpRcTiyi4
O/94aVTJBlX623UFrb9/v7Zd1AUKI806KnPXsdE69W6YnZoCRg+HCQ38KDiV
rZxYKGYhp+v0+KmtcsT38Uy7bEThpfmcxJfOLHxat3Lrgvdy3Lm6kDv3f79X
p26yLOR8NfZ0LXyxSk2Ootprn2aeleHzPpHQci8LMUnRKmtHtcHm2/zvE2fL
kOq60DA3ig1tEbtkr2Ur7o9VWV8vl6KpPe1a8TUOAj9NC1nv0IIGtZUP/S9L
IW83WGT4gouS4t1e59yaEbK/aewQRykWrTl1W5dfgxFBpl/cw5vANu15qLhT
gmL/Sv/dtTyU3Nzz7WlJI77xAn9oP5Gg97KKm59u1+LP4uHhWUsaYb5anJh0
RgLrdSHuUybz8abA72y0aSNsbh8/f/CQBI1Lauw3+PLxm9SbkXpbUs/Uf6SS
nqJ/ehj0M83L5A+Tn0z+M+XFlO8/HowJD3MJD0z8/OPNlvC2jPD2j89fhM9V
hE8mnpX5n034N9rCWztrgwK3nva1NFveAJ9B28zOzOJC2vfLmgWeCpyaW3H/
9aQGRBZoebFkHAQ3bj3g4KSATKa994ZqA96VRe8VhXMwXBYy/uwkBa6vUksL
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
TDwz8f9/S2eXcw==
       "]], {
      GrayLevel[0.5], 
      DiskBox[{-0.3, 0.4}, 0.1], 
      DiskBox[{0.5, 0.4}, 0.1]}}, {
    AspectRatio -> Automatic, DisplayFunction -> Identity, AspectRatio -> 1, 
     DisplayFunction :> Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient"}, PlotRange -> {{-0.8, 0.8}, {0., 0.8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -74.23469387755102}, 
                    Offset[{4., 0}, {7.5, -74.23469387755102}]}, {{
                    7.5, -35.96938775510204}, 
                    Offset[{4., 0}, {7.5, -35.96938775510204}]}, {{7.5, 
                    2.2959183673469385`}, 
                    Offset[{4., 0}, {7.5, 2.2959183673469385`}]}, {{7.5, 
                    40.56122448979592}, 
                    Offset[{4., 0}, {7.5, 40.56122448979592}]}, {{7.5, 
                    78.8265306122449}, 
                    Offset[{4., 0}, {7.5, 78.8265306122449}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -104.8469387755102}, 
                    Offset[{2.5, 0.}, {7.5, -104.8469387755102}]}, {{
                    7.5, -97.1938775510204}, 
                    Offset[{2.5, 0.}, {7.5, -97.1938775510204}]}, {{
                    7.5, -89.5408163265306}, 
                    Offset[{2.5, 0.}, {7.5, -89.5408163265306}]}, {{
                    7.5, -81.88775510204081}, 
                    Offset[{2.5, 0.}, {7.5, -81.88775510204081}]}, {{
                    7.5, -66.58163265306122}, 
                    Offset[{2.5, 0.}, {7.5, -66.58163265306122}]}, {{
                    7.5, -58.92857142857142}, 
                    Offset[{2.5, 0.}, {7.5, -58.92857142857142}]}, {{
                    7.5, -51.275510204081634`}, 
                    Offset[{2.5, 0.}, {7.5, -51.275510204081634`}]}, {{
                    7.5, -43.62244897959184}, 
                    Offset[{2.5, 0.}, {7.5, -43.62244897959184}]}, {{
                    7.5, -28.316326530612233`}, 
                    Offset[{2.5, 0.}, {7.5, -28.316326530612233`}]}, {{
                    7.5, -20.663265306122447`}, 
                    Offset[{2.5, 0.}, {7.5, -20.663265306122447`}]}, {{
                    7.5, -13.010204081632653`}, 
                    Offset[{2.5, 0.}, {7.5, -13.010204081632653`}]}, {{
                    7.5, -5.357142857142857}, 
                    Offset[{2.5, 0.}, {7.5, -5.357142857142857}]}, {{7.5, 
                    9.948979591836734}, 
                    Offset[{2.5, 0.}, {7.5, 9.948979591836734}]}, {{7.5, 
                    17.60204081632653}, 
                    Offset[{2.5, 0.}, {7.5, 17.60204081632653}]}, {{7.5, 
                    25.255102040816325`}, 
                    Offset[{2.5, 0.}, {7.5, 25.255102040816325`}]}, {{7.5, 
                    32.90816326530612}, 
                    Offset[{2.5, 0.}, {7.5, 32.90816326530612}]}, {{7.5, 
                    48.214285714285715`}, 
                    Offset[{2.5, 0.}, {7.5, 48.214285714285715`}]}, {{7.5, 
                    55.867346938775526`}, 
                    Offset[{2.5, 0.}, {7.5, 55.867346938775526`}]}, {{7.5, 
                    63.5204081632653}, 
                    Offset[{2.5, 0.}, {7.5, 63.5204081632653}]}, {{7.5, 
                    71.1734693877551}, 
                    Offset[{2.5, 0.}, {7.5, 71.1734693877551}]}, {{7.5, 
                    86.47959183673468}, 
                    Offset[{2.5, 0.}, {7.5, 86.47959183673468}]}, {{7.5, 
                    94.13265306122449}, 
                    Offset[{2.5, 0.}, {7.5, 94.13265306122449}]}, {{7.5, 
                    101.78571428571428`}, 
                    Offset[{2.5, 0.}, {7.5, 101.78571428571428`}]}, {{7.5, 
                    109.43877551020408`}, 
                    Offset[{2.5, 0.}, {7.5, 109.43877551020408`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.25\"", 0.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -74.23469387755102}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.96938775510204}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.75\"", 0.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 2.2959183673469385`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.00\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 40.56122448979592}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.25\"", 1.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 78.8265306122449}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "0.003974737554145007`", ",", "1.4712695238709685`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7192288073153067`*^9, {3.7192288648907957`*^9, 3.719228888265761*^9}, {
   3.719228924463203*^9, 3.719228936341962*^9}, 3.719229099088058*^9}],

Cell[BoxData["\<\"/home/art-man/Software/Dropbox (The University of \
Manchester)/study/Scattering/MultipleScattering2D/v3/examples/../media/\
TwoBodyFrequency.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7192288073153067`*^9, {3.7192288648907957`*^9, 3.719228888265761*^9}, {
   3.719228924463203*^9, 3.719228936341962*^9}, 3.719229099742257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
    "Calculate", " ", "field", " ", "plots", " ", "of", " ", "the", " ", 
     "time", " ", "repsonse"}], ";"}], "Subsection"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<PrintChecks\>\"", "\[Rule]", " ", "True"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxFrequency\>\"", "\[Rule]", " ", 
       RowBox[{"1.", "/", "radius"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxTime\>\"", "\[Rule]", " \[InvisibleSpace]", "6"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\"\<SaveGIF\>\"", "\[Rule]", " ", "True"}], ","}], "*)"}], 
      " ", 
      RowBox[{"(*", 
       RowBox[{"automatically", " ", "generate", " ", "gif"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\"\<SaveData\>\"", "\[Rule]", " ", "True"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<MeshSize\>\"", "\[Rule]", "radius"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Dirichlet\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Neumann\>\""}], 
        ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxTimeSamples\>\"", "\[Rule]", " ", "4"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"\"\<MaxRadius\>\"", "\[Rule]", "3"}]}], "*)"}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", "x1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}], ",", "listWaves"}], "}"}],
     "=", " ", 
    RowBox[{"ListWavesDueToImpulse", "[", 
     RowBox[{"Xs", ",", " ", "radius", ",", "N0", ",", "options"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "where", " ", "the", " ", "fields", " ", "where", " ", "sampled", " ", 
    "in", " ", "the", " ", 
    RowBox[{"box", " ", "[", 
     RowBox[{"x0", ",", "x1"}], "]"}], 
    RowBox[{"X", "[", 
     RowBox[{"y0", ",", "y1"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSequence", "=", " ", 
   RowBox[{"ListPlotSequence", "[", 
    RowBox[{"listWaves", ",", "options"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listplots", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Show", "@@", "#"}], ")"}], "&"}], "/@", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"plotSequence", ",", 
        RowBox[{"DrawScatterers", "[", 
         RowBox[{"Xs", ",", "radius"}], "]"}]}], "}"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Have", " ", "a", " ", "look", " ", "at", " ", "one", " ", "of", " ", 
    "the", " ", "plots"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listplots", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Save", " ", "all", " ", "plots", " ", "as", " ", "a", " ", "gif"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<TwoBodyScattering.gif\>\""}], ",", "listplots"}], "]"}]}], "Input",
 CellChangeTimes->{{3.719153324312702*^9, 3.719153354259273*^9}, {
  3.7191536966430893`*^9, 3.7191537419352903`*^9}, {3.7191541638937387`*^9, 
  3.71915416439578*^9}, {3.719154279002483*^9, 3.7191543618819437`*^9}, {
  3.719154791834022*^9, 3.719154872280665*^9}, {3.719154903821682*^9, 
  3.719154903891191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the frequency given, we have mesh t \[Element] Range[0, \"\
\>", "\[InvisibleSpace]", "28.274333882308138`", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", 
   "0.3107069657396499`", "\[InvisibleSpace]", "\<\"]\"\>"}],
  SequenceForm[
  "For the frequency given, we have mesh t \[Element] Range[0, ", 
   28.274333882308138`, ",", 0.3107069657396499, "]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.719155145192486*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          
          "]]}}}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          PointSize[Large]], 
         PointBox[CompressedData["
1:eJw1kgdQlEcUxw1noYSmFFHKgZ50j3IcR5H3QC42sIDccYULngMCB0dXJCIl
CAEhqJhhLASJnowFYyHBAi5GlBZFBFHUgAUMKqiEIAQjxMz3uTM7Ozv79pX/
/2cpjw+KUJsxY4bk0/7//LxGr/lGyLS/JkfjLdIqnnWCZu/JgtBSGX1/Dqrd
mrwn62QkxZrNeds5DMMx+3zye8Lo91HQ7tbbev9wGClaYy1Y8WgCim+8HQ+2
DaPjP8LJPaJi2aiU/Jy9sGBN5BfI6S689DBbSv9noCJp3ZyzQVJSFrZoy6hs
Nr7iMxzXP5PQ+dTRJudKnNVlCcnysOcfEmrh6fryvH9XSej82hirXqZg2UpI
TeGBvZY2eqiqX3qPe1FM19NHw91Sc6wQkxNp5Vmpx+biqTPLwsIdxHT9eTgm
GD6vZyom5ZGV8S1MQ2zJSPmuTyWi+zHC+1nMisAKEdm3USUzKzfGtrGSqyaL
RXR/81H9QS6zxUZE8vxOBCaaLMC7FvMMFcdD6X4X4riTMT/tYihJd6r2vvGD
Kf5awhwzcQil+zfDer/v32SuDSXx5ufsTeZaYPhxc87yGiE9DxOlI22qgNdC
4pInLuY2MXGoubKidpmQns8SN9udXUNKhMQh43Fu+Cwr3FHdPL/upoCe1wq9
16YM5X6KX5Ii21G4fBFeatQzLAwQ0PMvwjj9O4vbxwWEqXiSXJO9GEPY5JRn
awitBwvztDW6JhsFZIFcruglLDwydDvWjhtC67MEdRiWT++cFxADUb9cfWoJ
/iNzJCR9I62XNVqe9vsY/lxAdNdHil28bdC3V6lylAXT+tngqutCG9OrQqKx
YnCDNN0Wq731jXmGG2g97XC6ty1YY6aEMHxiVuVdtMNM08DGzS99aX3tMV6s
OuStE00+cobw7Ht7HGhSqjGaCoDS2wG7Vqu9ttiggnF7Je8hxxHV5TmDB8aO
AKW/I/oreSduJuyHv6zesWcmL8WoPx9FPx7fC5QfbGQzSq/OUxbDkEmS9dJz
bDSYqyyJmC4Eyh8n1Gzkzupvzodk9XTd09uc0EzevlbTLw8ov5zwS7KzPdU/
F94xvLSuGTmjgdjo8nunb4Hyzxkjs9kFNbezIW76w+zuX5wxLsfobu1UFlB+
uiBk7XhhPpwJrybr1F5vdEH/wvzc5GM7gfLXBbdElASmz8mALe8zpqZHXdDE
on6W14dvgPLbFSdW8p+tqE6H/hGfSYNSVzRbV8+c+H07UP67ooQvin5Tmwby
4ekxWxcOBu2ZrGyd2AYUDxzk/lGmL9DZBn2DDSM+HRy8MDw/aSpqK1B8uOGm
Y/l64RWpIO3PHg5OcMPRyZHO/TqpQPHihmM/JbYOylKgp8/vZZQuF0VVHm7t
vclA8cPFnpDE7Tr+ySB4xBjIOMPFd8szdUlHElA8cdHiefkm1sok6OxufLIv
0B1Le9qPb36aCBRf7sgfkPjqRCbC+ru7HlcNuaO3hhHbRCMRKN542HI0SLPp
QALcuvXVg7rdPIzOdb3D4ycAxR8PD1Z12UNDPKxumdPVYeeBOa1FAWdY8UDx
6IF/h3ue0oxTQlNjc/uLFg9M6C/rcOiLA4pPT1Qe1vKvc4sD/4aCtg9Rnlhk
FeOmdSEWKF49UbqrIeOhUSz8dmV1k566F1amDLD1f1QAxa8XOuN0905tBUCt
1nVWlRcGBLEOFpXHAMWzF0ZcKr3nbhwD/wGHXIas
          "]]}, {}}}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Convolution of Impluse b(t) with 2D Green's function.\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"analytic w[t]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Frequency sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\"", 
           "\"Time sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155148282732*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|Wi[k]\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\): \"\>",
    "\[InvisibleSpace]", "1.9281038413284575`"}],
  SequenceForm[
  "|Wi[k]\!\(\*SubscriptBox[\(|\), \(\[Theta]\)]\): ", 1.9281038413284575`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7191551482849216`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
SV7vL6JD/SaF3In1MtiYPb/hdgUd/spsfB5vI4PqDMVbrDo6/FY4+EvhoAw6
3nIXcGyiQ5YlW7UgVAbDTd6uW9VBh6miK1tN42UwUirCWvwrHUQ31B95cV4G
vTfu2DQ2TIc3Mx/PuRTJoEmNhcS7P3Sw75+u/XFfBkeSgx8+4YmCY3wygzGt
Mph8q9GmUiwKQmyXy0j2yKD0ctv7JYpRINO4eUPuhAwyfi+KFBCj4HCwvZeB
kCy2Sn01LtCPgtDtXimPlGVRiDViVrouCtbahFc66Mni0q3LV1aZR0Exi/35
22ZZ1HU+M/3UNgo6v50UptrJosJj7StdTlHwLeWCgZCXLL6sLmwY84oCvrPX
nTOosrg+8j3PkuAoWDV1m7P8uCy68lQ7LI2KgsCq2pJ7WbJoaG9x3ywhCsrf
NL+1viGLVQHMDZ5nokBi1/u/3XWyOGlz+BXnYhTQtAd0jr6Wxf7p+Zj8/CgY
cf6z+1+fLCYFAr68HQVhP/jpp6dl8VuBgerkgygQ/CCbRxCVw7HSNlHN51FQ
pE1qvq0uh7ei1GWt30SBS6vhpPlqOdSWUTKI/BwFGm/NuCyHu0LqvAuHomDU
xGG7z1451M1UuPVhMgpapg4FTx2Ww4fHVWSleKKhRo6SmUiXQ17z5qRtYtFQ
fTLhkXKKHM490VVlKkbDY++M4aIcOcyXNK2vJkbDx8wiuY235VCENBHzRz8a
hHQfbHr5RA41/7naGZlGwxblNh+3TjnszwvbQN0aDfFevadGB+XQW3rdxupd
0dAlNnU3dl4Oz24vcvjrzJWXEe2RlpTHyG0vWBY+0VAerimaR5BHOYmMhpMh
0f+7Xsuj+yVZ4vvoaLj7e8eBp9vk8UyUCWonRsMKxwMJjk7y2LH8b1tIWjSc
dgkp6w+Qx1WFh1/dvxQNfXzx7yIY8pg9E2YmVBQNursyeJackUc1VRLZriIa
vDYVr8jKk8fb4hTqhbpoSGp54KBXKY9Or/xMe5uiIZ+3LfpBozwq+PAc0e2M
hltdX6/ZfpDHvqYN0mE90VDq8Lvl8095fM6rrH3vZzRkB/NPBy/K4+MlmcWL
09FAXy1P4JVVwNbemsvb+GPA6r8DBAUcSWEJJ0vGgHimURh5nQKSRIY+t6nE
QC1aXKywUsDAvZM68tox4JGy5+m2Awr4NDTvy36DGJiMOjTSGaSAaz0mRC5u
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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl1VO4EAYYBuDTybZ5speNZdvesm0v264tbtk2l7ds27b3ti7e5/svv6vv
D2rYrnLbwICAgGCkCPyRyQN/3MlIShBJSEwiEpKA+MQjLnGITSxiEoPoRCMq
UYhMJCISgfCEIyxhCE0oQhKC4AR+7/S9IN+U+8oXPvOJj3zgPe94yxte84qX
vOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA85zjLGU5zipOc
4DjH+Jd/OMoRDnOIgxxgP3+zj73sYTe72MkOtrONrWxhM5vYyAbWs461rGE1
q1jJCpazjKUsYTGLWMhf/MkC5jOPucxhNn/wO7OYyQymM42pTGEyk5jIBMYz
jrGMYTSjGMkIhjOMoQxhMIMYyAB+oz/96EsfetOLnvSgO93oShc604mOdKA9
7WhLG1rTipa0oDnNaEoTGtOIhvzKLzSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4ifKUgB8pOPvOQhN7nISQ6yk42sZCEzmfiJ
jGQgPelISxpSk4qUpCA5yUhKEElITCISkoD4xCMucYhNLGISg+hEIypRiEwk
IhKB8IQjLGEITShCEoLgBBIs2I+B+ia+8oXPfOIjH3jPO97yhte84iUveM4z
nvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iIXOM85znKG05ziJCc4zjH+
5R+OcoTDHOIgB9jP3+xjL3vYzS52soPtbGMrW9jMJjaygfWsYy1rWM0qVrKC
5SxjKUtYzCIW8hd/soD5zGMuc5jNH/zOLGYyg+lMYypTmMwkJjKB8YxjLGMY
zShGMoLhDGMoQxjMIAYygN/oTz/60ofe9KInPehON7rShc50oiMdaE872tKG
1rSiJS1oTjOa0oTGNKIhv/ILDahPPepSh9rUoiY1qE41qlKFylSiIhUoTznK
UobSlKIkJShOMYpShMIU4mcKUoD85CMvechNLnKSg+xkIytZyEwmfiIjGUhP
OtKShtSkIiUpSE4ykhJEEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIHjA/28/4D+DTwT3
            "]]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1kO0GAYQBdAf27bZqI1t23Zj2zba2LbZ2HbS2LZt9v7TxT1vO5s3M0ka
tavUNkhAQECyoAEBgSkCghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBax
iUNc4hGfBCQkEYlJQtLAWUhOClKSitSkIS2/kY70ZCAjmfidP8hMFrKSjezk
ICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSg
JrWoTR3qUo/6NKAhjWjMnzShKc1oTgta0orWtKEt7WhPBzrSic50oSvd6E4P
etKL3vShL/3ozwAGMojBDGEowxjOCEYyitH8xd+MYSzjGM8EJjKJyUxhKtOY
zgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzz9sYCOb2MwWtrKN
7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn+JfTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovA8gchKMEITghCEorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGI
TwISkojEJCEpyUhOClKSitSkIS2/kY70ZCAjmfidP8hMFrKSjezkICe5yE0e
8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3q
Uo/6NKAhjWjMnzShKc1oTgta0orWtCFwebejPR3oSCc604WudKM7PehJL3rT
h770oz8DGMggBjOEoQxjOCMYyShG8xd/M4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz3/sIGNbGIzW9jKNrazg53s
Yjd72Ms+9nOAgxziMEc4yjGOc4KTnOJfTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
Ag9/EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJ
SEwSkgb9/xf5D/u6BKY=
          "]]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.010144286630985752`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"k\"", TraditionalForm], 
       FormBox[
       "\"|W[k]-  \\!\\(\\*SubscriptBox[\\(W\\), \\(n\\)]\\)[k] \
\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryI] n \[Theta]\\)] \
\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\)/ \
|W[k]\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\) \"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"W= \\!\\(\\*SuperscriptBox[\\(H\\), \\((0)\\)]\\)(k rs)with 2 \
Fourier components, rs: 0.1\"", TraditionalForm], 
     PlotRange -> {{0, 10.}, {0, 0.010144286630985752`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"Min Distance=0.3- rs\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155148375084*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJyF1nk0VlsbAHAqY+Q1z/NQNCpDk56dzEp5nRdlipAo9JryIi/iuuYhY4lr
iqIUosEckW6kMpdIcaWUKZn6aH3tu9b3z7fXOuesZz1r7XX2fs5+fkfazo3s
sIaBgeHNyrX6TE9bHfdBZXR320kNXRjM6Di7+KAeaLZpTfy6evCxltviL+EW
8PJjp/ja68Nd1YiUh6NtIKEWRYtMMoAty+Lx8pdfgme8hPrhXkPwj0hc2ni2
C+jRdREPdx6Bwhp5bgf/PlBT8vLquWYETRmvWvsfD0Bb6dUFMtcxcOJpT34i
MwS9MizhpJ5j4KqkJXogcBgODv2wySsyhsFknakX3z/C4jfPEO4IMrw265II
ifoHeMkXJonzJqB2bjbDWGMcAtesK3azI2BDV467BvsEaK4VKrW1ogALb9ND
h29fwfTM3YAyC1OgzRTrI4tJuK//IvSbqRm8SmCzu1U/BQ65nq1CR81B9FP3
upKNM2Due9VISes4mCyL7tSOmIUrzXpcCmonwONZxz/nxr6DbIIvJ4e8BQRT
ljYr6f2Audfb9PtJluCfdmXON2ceBC871Sf/sAT71OKjVosLQH+m4LtvwAp2
k3cpvyIvgUrgmXNP66zhZ9OWjLf5y6BetCPz0F82UDyblug/9xNqFQ/88fLA
SchdWU1XDgOK2JtvRbt5EpwaRmL3GDAi3/B2crKALeRPtfY6TDCiON4qx410
WzBlHBuzSFyDWvpc0raO2gJ9/GCtqNpapDTYP1ZgZAcS5S9P5HWtRbdkSRZp
pXaw0yLzwZzPOmSewzS2LHAKqt7mDvALMqFNJ6tSei6cgmoYblksY0JiJ9Tt
FXtOgdpFK99iY2akFu9x9Iu6Pcilk75s/MyMvJioxzcl2UP4avn/YEHd93YG
d321B3tnuY00KVZkl1fesmDgAPckQj8ZV7Iinhfz25NyHOCF9amVHWJDkvdC
tI4tOwBLzxpj3RE29LT9RXKPtSOYR5/ilwxkRxukPygoNzpCo1/oBxXB9ehz
ftW0qfJpMMp1qgu/vR6dtrNgMMw5DZPMnIUiehwowKRan1PUCUpzqFfH3nGg
zbSP7RmpThBDWy0QJ/LufJm0KHoGQiOD8rV4NyALp7BUxbwzkNSpVPW8aAPq
3b7cLafiDA0WSQPJOlxoZss+sy/NzsApWseZ8Y4L3bDR4A075QIH2Fc/OBJi
bl7HOb72LPyUvdV0J4KEJh3itaRunIW2lepwd5PQxT3v78uYnoMb21YPDDfK
0Jw/O8XiCsmSPuTtHtzIJqjTKqHGFaKL26PGa7lR2YxP1E9/N4jvZv+7eQMP
6jjq5i8u5Q65WfK8jy15UDqEGmdfcofHTNI2b2/woC1PA7Q3jLvDNMtSieAP
HhQ3YW5ua3oedly/z+quy4uqbwtEXGk4D/7vTR1HklZi9oreR7uo8PrRq5aA
YV4UzrDXoDGfCrt3rQ4+JB6f2V0m5gHXCuOvjgbxIet6nZK8ZA+YDeZiCGzn
Q7LpMQt3+D0B1RRZzUrwI1chnwc9aZ5Asz5TbnSOH4EGw2cxWS8oPKnNEv6Q
HyWxKiX63fGC5kZkks0mgNxo00UzWt7QH22RlmEmgDoSbPZGvvGGwcqkHt88
AXTf2GXffj8f6NaZ4FWfEkAKFYIlrBIXoE7dSe81EkQCDfapXxsvwJVIBh8i
RhBFeZGnp6i+4KJZmVnWJ4ginr9r4JGngaJlbP3MJiHE8ZyL5Ug/Dfq7QwcE
vYUQj+dAVXaqHwRXXpkVaRBCWbVHR3lP+IPQQjvLTy5hVFZ6MixLKgCyf+23
MDp8hCdVbzwAxArThJwLhZFztL04R9VFiODbKvRtRhhxeJoJfEoIhLGhAe7j
miIone5VN6lGh/18d5myY0QQNT32zlI+HegFOSsnVgRFsdAskoWDYPVtOxVE
0T9PVGoexQTBux/DVfVUUfRnX02/O3MwLN5TSY+tFkUumqJld+nBwPqrv4mh
2EUd7eClYNix0k0UTcVQVGJtvl1QCGRePU0uyRZDC3FME52kS/C7vzP8dzD+
usuh3/H/y/+O/fhu6Q7S/p3P/M3zpJb3O7AXRUxP2sNKlbEXu2uoDtcTdmIv
5tg6TDYH7cJejH8YvsITqIK9EDa5qWEVpYq9uGAsv2d9oRr2gmOQHCP2Wh17
0c2oohFP2oO9eFvarH3GYi/2gu87qSC3fB/2IrSVw/6QpAb2QkH5ka926gHs
xXJirCeFhLAXZTHDzXLdCHtxuia/0C/zIPaCV6FT4ISjJvaisp5Kqt1yCHtx
PMk/uXjyEPZiKmOqQKZSC3sR3t+lKxmg/a8XxooeOQd1sBeZCyNKt5l0sRey
/bxumi262IucySKwitLDXohC6dWfRvrYi5g6hTBFbgPsxbwvy2JvhwH2wsGJ
ssx72RB70RRFin5FHMZeKIzsLhDjP4K98Pd5fnT81RHsRavGi5BDl42wF0J7
D2rJmBzFXmxTi9V7zHoMe2HkrKL68PQx7IXLHtKoV9Mx7EVojozttJwx9iKj
wCVLLcQYe3FX71Pe/kFj7MXyUPft0v1k7EV1p8uiXiIZe/FNNjdycZiMvUh5
GmT1XNkEe1HydB212tcEe7FPbmvLs0cm2Iu9XfN2P+ZNsBdF78+BlgqBvYjT
D7MudiKwFyOsWrUqqQT24q70dfveegJ7MZF42/DaKIG9yLax8qKzUbAXTZdK
BunyFOyF5drCuMz9FOyFfZ9OcL8RBXsxxBFxT92Sgr1oT6FuvWNPwV4o+zOM
6DlRsBfMD3a9X3akYC+OGHPIvDxJwV6wakbkNFIo2AvVqOLTndoU7MXr7d6u
TMoU7MU/W4YryIIU7IVryPdD1XME9iKlSN5StIfAXiRKD+trPCKwF7ZDOznl
sgnsBeMEd35bBIG98NBdmcSbwF5UfKKbe9kT2IvnfSSqG4XAXlQIKttu0yew
F9TMQfm7QGAvflJlaud3E9gL64Sp7ayqBPYibonw6t1FYC8ul+nEnV/J//bC
paKZ/vceAnvBy9yn8wUR2IuYrIChlwYE9qI3rMTkohmBvZiv9Ej/7EhgL8bU
ntyT9iWwF7cYbhaIxBDYCy0BSffuPAJ7UeQjy2lRS2AvPspVBma/IbAX0+Jv
ntxaIrAXHXYJHwKlKNiL4Kmubn4dCvaiuujwrfIrFOyFoUssNdfIFI4JW7t1
TIghhe1Z8kPWZqB/vaIwVkMckecuPnF9Zg6hOp6Mo5Hi6FnTZnODlBPA/D3R
u69XHCWl53d51lhCa6UAm7OSBCrxmND+omUDryMXKxNpEohDMcS4j9cWZNy1
w8xbJdBoutf3jyv/n+UO39wrxSSRM1cbX3qwPcSdZfAtdZVEqWGxhdOBjlB0
iXpNv24lz1BRPnvTCdb/Wo8UEgnQ3pPF7ALW0zVZsipSSHNxr8q32HNApEfb
mFlLIbYaw5fTsu7wqZmjuDt8JR+0tVkr5Two0DX+vF4qhToe118YlfaAdbWS
0w1vpVD5n+s/DDR4Qkh46eet7NJovI2Fc3OAN+T2zHl9UJVG3ikVX1uOXACn
0omoMVtpRLwTiXukSoM2/tSdGjHSKPyG8qc1qv7QzTDp+OaBNOKcXWDMMLwI
wZ5Liq0j0shjcL9z4346vHB/4MfML4MiwinKjjZBUDuzyTJWUwYZftXtLIkO
BptnJisVkEGPG8cD3z8Mgf/1d21jAI3aJYbjglD2O7cjZXD8H0BtK/o=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 97, 98, 99, 220, 94, 93, 92, 91, 90, 89, 88, 87, 
            86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 
            70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 
            54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
            38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
            22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5,
             4, 3, 2}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{100, 95, 96, 219, 221, 218, 217, 216, 215, 214, 213, 
            212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 
            199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 
            186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 
            173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
            160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 
            147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 
            134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 
            121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 
            108, 107, 106, 105, 104, 103, 102, 
            101}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 220}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
          112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
          125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
          138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
          151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
          164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
          177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
          190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 
          203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 
          216, 217, 218, 221}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.01}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Freq. k\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Check ||Boundary[k]|| / ||IncidentWave[k]|| for up to 3 \
scatterers\"", TraditionalForm], PlotRange -> {{0, 10.}, {0, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X={-0.3, 0.4}\"", "\"X={0., 0.4}\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155149939767*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mesh Size:\"\>", "\[InvisibleSpace]", "0.04051197395242888`"}],
  
  SequenceForm["Mesh Size:", 0.04051197395242888],
  Editable->False]], "Print",
 CellChangeTimes->{3.719155162032897*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.7191551622459307`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.719155162249201*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.71915516225356*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.719155162256112*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxF2UuI13UUxuFpMrrQRRIjJMwCF2GEkQQZOS0MgihCKlJw0VAGOiWYFERB
q1a2CSKI7ouGpMJIEF1ozaKBHGVySqbsolItDCLoRtC93/u8bhwe0Zkz/w/n
bL5XjG9d98DoyMjI/L9//Pf1rxu3Pjn3wncHxr9ae98FL84d4H2Tj87fvuDj
evnJO1+57LOZ+uj23c+89OZ0/fTZlz6x9PGpemLVb5+seW5ffXj9/ndvvn5X
/f4fi1eft/H5037o0Loflj47xssm5rc+cujtetfC5cf23LK3fuOXa/7ecOSD
+tfxgws/P2O6Xjv74JXrr52pP1o6umRi12y97e7Z11fcOlcv2fHyiu+//rSe
mprYvfOx+Xrz76tv2nzRsfriled+eNXkl/XG97ZMbr/8+Ol5Dx/ZcteWE/WC
UzesXLXnZH3vWa/9vOjMb+q3lp2z96c7vq3zdWzn8Pftw/qwPqwP68P6sD6s
T50+rA/rw/qwPqwP68P6sD6sD+vD+rA+nTd9WB/Wh/Vhfe4Z/l37sD6sD+vD
+rA+rA/rU6cP68P6sD6sD+vD+rA+rA/rw/qwPqxP500f1of1YX1Yn9Hh/7UP
68P6sD6sD+vD+rA+dfqwPqwP68P6sD6sD+vD+rA+rA/rw/p03vRhfVgf1of1
eWf4Pu3D+rA+rA/rw/qwPqxPnT6sD+vD+rA+rA/rw/qwPqwP68P6sD6dN31Y
H9aH9WF9Ngzft31YH9aH9WF9WB/Wh/Wp04f1YX1YH9aH9WF9WB/Wh/VhfVgf
1qfzpg/rw/qwPqzPhcPPaR/Wh/VhfVgf1of1YX3q9GF9WB/Wh/VhfVgf1of1
YX1YH9aH9em86cP6sD6sD+uzafi57cP6sD6sD+vD+rA+rE+dPqwP68P6sD6s
D+vD+rA+rA/rw/qwPp03fVgf1of1YX32D3O0D+vD+rA+rA/rw/qwPnX6sD6s
D+vD+rA+rA/rw/qwPqwP68P6dN70YX1YH9aH9blkmKt9WB/Wh/VhfVgf1of1
qdOH9WF9WB/Wh/VhfVgf1of1YX1YH9an86YP68P6sD6sz8PDnO3D+rA+rA/r
w/qwPqxPnT6sD+vD+rA+rA/rw/qwPqwP68P6sD6dN31YH9aH9WF9poe524f1
YX1YH9aH9WF9WJ86fVgf1of1YX1YH9aH9WF9WB/Wh/VhfTpv+rA+rA/rw/qs
GX6P9mF9WB/Wh/VhfVgf1qdOH9aH9WF9WB/Wh/VhfVgf1of1YX1Yn86bPqwP
68P6sD4/Dr9X+7A+rA/rw/qwPqwP61OnD+vD+rA+rA/rw/qwPqwP68P6sD6s
T+dNH9aH9WF9WJ9Xh9+zfVgf1of1YX1YH9aH9anTh/VhfVgf1of1YX1YH9aH
9WF9WB/Wp/OmD+vD+rA+3D7D7326T9w+cfvE7RO3T9w+cfvE7cP6xO0Tt0/c
PnH7xO0Tt0/cPnH7xO0Tt0/cPnH7mFefuH3i9onbJ9ZnZPgc2of1YX1YH9aH
9WF9WJ86fVgf1of1YX1YH9aH9WF9WB/Wh/VhfTpv+rA+rA/rw/o8NXwu7cP6
sD6sD+vD+rA+rE+dPqwP68P6sD6sD+vD+rA+rA/rw/qwPp03fVgf1of14e7P
n/9/TmPdn7j7E3d/4u5P3P2Juz9x9yfu/rD9ibs/cfcn7v7E3Z+4+xN3f+Lu
T9z9ibs/cfcn7v7E3R/z2p+4+xN3f+LuT6zP8eFzax/Wh/VhfVgf1of1YX3q
9GF9WB/Wh/VhfVgf1of1YX1YH9aH9em86cP6sD6sD/e+DZ9j+3DvW9z7Fve+
xb1vce9b3PsW976x+xb3vsW9b3HvW9z7Fve+xb1vce9b3PsW977FvW9x71vc
+2Ze9y3ufYt73+Let1ifHcPn2j6sD+vD+rA+rA/rw/rU6cP6sD6sD+vD+rA+
rA/rw/qwPqwP69N504f1YX1YH9bni+Fzbh/Wh/VhfVgf1of1YX3q9GF9WB/W
h/VhfVgf1of1YX1YH9aH9em86cP6sD6sD+tz9fC5tw/rw/qwPqwP68P6sD51
+rA+rA/rw/qwPqwP68P6sD6sD+vD+nTe9GF9WB/Wh/v+M3RoH+77T9z3n7jv
P3Hff+K+/8R9/4n7/sPef+K+/8R9/4n7/hP3/Sfu+0/c95+47z9x33/ivv/E
ff+J+/4T9/3HvN5/4r7/xH3/ifv+E+tz/9ClfVgf1of1YX1YH9aH9anTh/Vh
fVgf1of1YX1YH9aH9WF9WB/Wp/OmD+vD+rA+rM/5ixedmrnuaPuwPqwP68P6
sD6sD+tTpw/rw/qwPqwP68P6sD6sD+vD+rA+rE/nTR/Wh/VhfVif3bed2Lbj
4Hz7sD6sD+vD+rA+rA/rU6cP68P6sD6sD+vD+rA+rA/rw/qwPqxP500f1of1
YX1Yn38A9P5YlQ==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
UP2j4Q==
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJx923c4Vv//wPFKaUklGjIilFLRUCGnUkaotEiUhgaKoqVBUkqEhhEiRRHS
sJMSsjKz97q558lIkvG7r+v3e72O6zqffv74Pq7P8zrfezgv7/c5N8kcsd1l
OW7MmDFV/P8RGANfP4nYHavHnBRqQ6Ef1ZQ5ESnYjEK3nxT+p3N5PQpd6Ufz
6V3nqlDo1mUJx7Mvl6PQ/edfcnHaWIZCL2mZMM82tgSFHhlipBeiU4JCX58V
ImCiV4pCP1W8b7yyyg8UelLUYOEBlwoUup5CUIfLsRoUusprMbel1xpQ6NPD
rlTHb29GoacMHa6IuNqKQq9PcjetTmlHoc81WOTp2NyBQpeZma7waYSJQr+x
y/z1zl1sFLpi7ZEDGsUcFLrbqm03Z2jzUHxfCYNSggUkKsabPfFmIElEdb2e
EPSGxOPGOTj8qfEiiSIz72+6EVSveuJ/NtKQJJquNJnuOUv16NmvNmZ+5hHu
l26PCR5DddDuWIqyhE0dCj3K4/K0++crUOhkatu2mgUlKHTR54xnfoG5KHSh
tOWFPnaZKPTA4hlTN65IR6FHJKsP6S1PRaE/9JX++W5MOgrdsSc7P7A5A4Vu
423ckhn6DYW+adKLPLXkQhR6wP60HYleZSh07zDX8Uf/VqLQzRrneeZ11KHQ
Px3J0M6Z2oxC7yn1Pl8a14pC97vv/UyRYKDQtY/VMQ96dqLQFw+w3+Q2s1Cc
n2WdO3qvcFDo5jv29iTbcFHokyd0fZthz0Oh56jLXHcPJtHDUrL738eRRMfb
G45en6n5mdDE7PRzJYliA95u7WCqd+waa/9+L0ncPn8iI+Mifd4i9tV6Pawu
RqGHOo3crpyYjUK/fdaUPTw1AYVuXa3jnb4qBI39tKRPzgmej/oqjTtx1HqQ
S+si738rfgji0fry6mdPCm/QHweeN7/haqL8WB8Uut3jn3ojq9+j0I0Dpdk7
LTNQ6CsGp+TLTPqOQu9c1CV7dsMPFPpC+czt7Ok1KPQMz9ojZR8aUegHnY/n
mQS2oNDfbm8Oy5FsR6FPXaYoMf1yBwo94K6Gs1cBE4Vu4un/kYhlo9BzZewF
3J9yUeiiT8RmOZ3kodBlOXqNKtNI9HC3vXPgAEk4H+gLePOXmp9C60HdBVYk
MXXhUNm8O1RPfVQ/61k8SeRqva1zzqTPW21rpZiySRI6Q1j8wlQ2/fxuvJI0
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
VaDQjyX6nNAJbUKhmwWMM2/TaUehB1ZXXWtwY6LQ+5xLdnTy9y0Qelhxm3PK
cRKd+npfmN4h/vXJnUvzzzhR37cn3iuzNq8lCd1pGcEnD9HP7+QvF1w2sklU
8nOnj68tSWxbleJwyYN+/IN5jjV2HBKF/mPKfAOxQB4KfXjzywJz/vUWCL0q
5OHpJP5cgnF5EmpX+OvOZ/Vtf3MY1OOWryYUI4dJYuZv/xTuMNVVGaUSlq9I
ot/1/DVWMtUZ9R15lfz9U1r/dnnjV6pLNCaaRPDncLZB9qxbo+awINBlzvhA
/s+P3prLqqN+T1GxhRfk7UBfxwTzV/OUrtGvu0RTejT9XtPvE6NrvQTVff+9
Dy4v1zIJi/yKQs+tDfjbb1GBQtdKWLJhz/VmFPqHmxsrgqZ2oNCJlT/iwwU5
qMf8vMet9fz3e/XMzIS2Ud/PvulVRfzr6/5MoSZiOzVndhlfHsU9YBM9YwNn
mJ6n1qmfEYNLk9JYxCLpvI9/8qh1bdGgtVAR/75QWnnhBqKb6rOvz+pNieQQ
Iv7TvR/voR7fV8CuKId/Hl8XeRBqKfR5qwk045rx9x0Qeo+x4vW03TwU+nx7
6fiCN1wU+vkW7bOGAST6m+NTdHUTf47THIT8TtCfN9LN2G3SCIkmzJRzPPuI
f7xDwuHeSOp495Qkldc3+D93ywdMySej9vdNGivE+ft79mplj9g0qr8SKLUt
qOXf354S7pncSnWHMb0xPZL0zyvGmT2UX/GAfj2fdCBJxizw35+vPnxyPMrh
eioK/fGsX0Y6wj9Q6J+Pbz9jWN6EQs/U7p0zcXcHCj2koC1uvC4XffXYas61
YC6xoIG31W8OdT4MJk2OdfViEnZloV2q1dR9nXbYfuPdszqI8fE60ZvrqOut
gvHGAm2SDMIueGsQcw7Vv4UFp85dySBCOrflzlpM9UPJxhwnow6CsUz758g0
at2slRmbFjmPRVy98WQoRWfUvmuWZRmym0totAa7OtVxaed9vPBY9SffSDTP
VtB1Jf++T11hQvH9GvqcOMqGdLH4x4EfTmpIvLxFEubcXD3pp9TxFrsEn/qt
IomOTev0L5tRfe5dEf+0bP7/X+28tkop1duqmqYb8X8uJHXE7WtGrW+T5BRU
3jmSRCjT1fTAY6q78ILPS/GPWyOv76P/jepnFwQWHkslifvvxc5J5o56PTcf
FN2NoO+Pmlpfii2e/3t/VNVUEm90eYFC56mljQy4fUehPzl4fM1Lj3oUesqI
v11xZzuK7/u948uYSxx09gZ1kTHnuMRWvyO1Bb2j1qXY1IDInZ3EfpNcHZka
6rx/KnWalHq1jSioHVm/Im/U5w5fHXaKy7cQj4K87a+wqPtJlxdxXZs2NxPj
WAr3x66huqGMwlDziRbihXjSUIc09fqGbi3NdshuI/xKZNctmUD9PDRIvJse
87SDmDtncUSaPvV65jpHqVUns4iYgNS/Td+oOXwZX2Fqoc8jkn83XHkfRv28
dNW7lYvcJokvbSEXz4+aH7GhA58mGpFEg3KriqAD1RMUR1b18O8L+1Ms+xaP
+n2T5rTytuSpJGFZOSPxkQbVP4ybVNrmTxKZgetrb8aMmodwclfQEEk4J6a/
mj1qnyUe+4cO8OfM8mITY/lrqu/7xUj/wN8vt2YmFXxNp/qMgqibj9/zrxcn
k+MaMqi+vF4u4NY3+jo2++xHXoHOv9exlxN/2XVd+YJC19cx29n0rBzF87Cd
V16T04JC32s7K/7QFyZqMSN5wQr+fvIhYpm4x7tRv/81mCGw04BJcJ5HrLF/
Tq1XU7L9vp4SaSMmrdM+JXOemqvXuX6rRcqaCNkzl72F66j7BFWbIxdLt9UT
b3xMc7mS1OsIK8smZgvXEi/3SLwvX0ft33HXxqXMPtRIzBoZ01beTR1/TCl3
y81HLUTCvolrg7SoOdxkryrtxGonVpv1zy3gUXO4//zSBsk+JqGTKTtXfyk1
bxW5kub+rlyiYaL+nBgBat5OjQj0buffF8gEnOqbOuq+4GvPU26EAv++T9FJ
TnoX1UNGjoRm8depdyPzDUtqqW5uob/7vB9JzDHUqDOPprqfX7LhVv7jRDcO
TCkxoq+fUdX1TXL8+1XQVbw27nEf/3l133y+2E8dz/JlpUXw17W9IrL57FHr
5FWm9+wH/Os8X7dpIq+KqO6RZrR9gRP9eiynpGXnZ7wupM/bB9XZFQNr8lHo
P8WEbCru16LQne2rn2QYt6PQv8ekT6r7wkGfHvy20Wwth3Cau/7J7D/UdZRH
aQjn0PN2YvJmxj5GPHUev25dobXiWhNRtNZj3H4/aq7u5C6puW5RSwTt3GJc
MOrz/aCRxS+yJ1URmsdnvHIRoPbvqCsuRz/tryKijp340r6Q6v2NYQnxbrVE
nsfLliunqMeZeM45xWNeM2Fzf9VjO1FqPdS4zis08mQQeSryhPBZav8d6fOa
Zn+VTQRkCWl6HaXeV3durE3eCR7h9cwk7UwyNW+rg+yibvDvZ71nm95ZPep+
NkdEWk2qkkeEvmp/dF2E6oMtC96c2k8SfvHO3SmO9PkxHb/587UcEv3uulLX
5CP/vlQgY31TLv34P4HX52rx7zdB6M+MK/2y+PcNIPS2DGFnTgeJQg9nmC4u
49+ngEnqD3yPv/z3vplfWCNeXBeOQj8fqBNYklCMQv9svvi74elGFPr7zCCf
6F8MFLovJ0u/ppyH3l+eE7EvgUWE3xOUFsmi1oGIimVqxl/aiV1bPx1u/E7N
28D7/KINzCbicF+YUD6Xmjdd74RvrVnVhGRoy4778dT8hGbHGsuG/yDeWctr
d+6k9nXd1FrFOd0VhNpgi5vIYup1K73/nWlTVkNsaV4Rf1CGmjfT6fNCdBSb
CbHqprmCMtS8ZcYqnhGI6yCCTGRMgvZT+6lq+bMVkmVcwifqQ/q1zTza+SWj
75exC0gUuqh0Xez4AB4Kva5RVnQcg4dq/T2zbyCPJIKOdM98XE6fn6LJtVcn
8u8DQOhPbMjgviwShc46ZWl8n38fDUI/3rfB6+IlEoU+a++L+kL+fQSIcyvT
OGPrHRLd3Ek6jtvw78/HsiWiPZ0M3qLQV31wPGohWIpCf5MSsvLs/iYUuniM
1gPBlA4U+uF9A67n3Eh0+NfNRp4ym8jPDHKSX0StA+K/Qlw37GYQopkGwX6b
qXXD6tTkto+ZzYSszDPm0WDqvGentfNU7tYSO94t/jPLipqTJRe3HW3uLyNk
lcrjxb9Rv++MPj75bqlXJXEnSW3i5ghq3gru7T3zKLuWcC1JzXrmQj0O0zLu
8QbVFmKPlOcWlX7qeX/WCcbasDqJ3lbrTwv3Uvu+zXh7m+oGkthXvDjNsZ0+
D5MUvFRvc3kodClWwJ/zjlwUusJM+1UN4VwUOmdZbp4Ik4dC/2Y0qLUkjESh
R8a0O4dakyj0V0/MJ20f4qHQE2+E1q9p4KHQ8yQ3CTg081DoHRfN5n8VJVFN
3sPKss3/njcT3arSc+ZvUejnJcfurrpaguLxH9ZqKJGNKPQPqsoFk3d1oNBT
vK1TLF/xUMNUtZT6YTYxJffvo7Z8at6slA82ea7qIO70tM2b2kfNm4344Sj1
nhZCTuwD74gXtU/X5M3Z6zOxgXBP1Nh7+hR13fW07uSFtqwK4nrcgqyE8dTr
KzayfBo3q4ZY4LZYKObHqM/11GbkzFZuIOTbbBLCLlOPI1Mxa+GVja3Eh5la
O1Z8p5731oojRIgnk1i7f37Au0pq3sgdV/JX8tcdk4gjGhn19HkrlLvKNoog
UXy94iNpu9R5KPToeD2u1mkeOrfvtE8s/7qqKVNuk/wA/fHNTiyfoeVNotCP
znic0dvKQ6HfcNu5cpU2D4UuHenQkyjKQ6EfsG9+am3BQ6H7SKic2/adh955
/6nALfrf+2mt+8JVY5TDUeh77LQFLJWLUOjmPJe3UmvqUXxfY4h5uSntKPTV
bQKhES85aLy7ps00VS6xJCz/bmUm9XN7o2hDm/TNTuKEUD7TaRx1HjNu/X5j
qtpGrHl6SKHFh9qnC4cbfo2JayLOWr7LHPOZ2mdbXmo3RTbXEb3TmR71PdR6
1ZB8stN4pIHoblX0vltAzdWKRYNiqzWbie6k3C1fVah1LOJ5Svo45zaC5ZIz
UlhAPW8Bb81RCRkW8cLk4I44Q+p6gKl8cuneezxij+nuj/Xl/7GfVuY/eMOf
ExD6VZdwTc5kEoVu1bD+Aus3iU4PDVBzESYJ4r3O40JN+rwZ6bmL7IzkodAN
pXh7pwjxUOjLFesirhzlotAH7e9ZFxpzUej6AY7afZFcFL9P7luuWE/goauN
tr7wCKXfLyT4Tt0e9/zf9wv3Jd8bFIZ8Q6Hfc//YH3u0CoV+LPBwoen8VhT6
1NQCxc57TBR68iXvj5r8+29QzS68O5y/XjxSMPqV2EidRw2P4uVV2gxC2W5j
d/Q6at3zFp68/sdQKyF0Tu1b5DFqHiaVx6d3ZbUQ6y/6FCyypuaeo2bKXVPZ
Qvz8K9r1+xLVzxpYrQ/lz5WpXeqAwXfqcfJmfni5mMkg1IW9ObdTqOeN3m80
Tmw6m/jp+LJwhhC1Phf/3CB1VZJHbDQdbhu8Rp1X9iTd2Ed3SUJ2YugnrWf0
OVl3bdUCm1gS9Y2dMWOOHUlcMpm2sfE/fk8x9Z70m3IeD4V+5XwRs+UvB4W+
5Gai2rmPHBR6aMzDW19INoqvN7djt99KDgq9ZaMFTz+Lg0I3160UYG7iohUe
ZWumr6T//c8WyQ1scuDff/8jNcFIadAzBYV+7in3ruRQCQp9x7H8JN78RhS6
wtPAi6RvOwr9bWxKv6EYG4W+fcTDVuoniR5f9l36DYNNSHXZzfNIot6n0N66
9RfWM4kpW+IeHXxErYel6WpZqY87COFVR9b6bqHmm+Op0R5VxiDczyq77o2k
5idQS8XC63snMVu110BIk3ocWaXngtN4LOLGvh0TXnRRr+92dsfEdUu5xPhS
6TKlj/TPdcPqnyqG8NcvEL8Prg13PTR4KHTttDbln684KPS8+PC85G8cFLqS
gM4qlbtsFPp5buiUpX9YKHT1qG8CA+PZKPSMX4XKB4VZKHTdQ5pccRYLhd5z
V8/LtoWNQv9xq9AqPZ6Dyq2+HCyo/x9/l2u1lVA78+99dl/O8+BJ9+xQ6I1r
f8l9uJ+FQrfm/JE1kaxAof/1EH6Qyd/3QOjf2yq5w1MZKPRZDUL2Xj4sFHp8
cmajmAEPdT7xzTOpnUc8kV6vuUyKOq9ObsmnMuy5xMr1h2XW9FHzYBT89OKB
Xxxi2lv9P2I+VH+xg+T9ecMlJCO67x1WoObgcH9u+Nz3JDF/mbqUYwZ9nQmc
mjtQacxDoYsu6h5W5j8PCD36hUi+K3/9BqF3PBAV5wwwUehCxusCTC4xUeiz
737RWTypE4W+0/RIN+9BJwq9PdYl6fOhThS//3ejEwUfdqLQRfaONT8zyESh
N/izV0SVsFDovd5X8n/VstGmBdcnzp1I/z2phYXVx3Y3+ufAyiG9Ly+Y/3vd
K2aclgtSfIFCb+pzV4+6kYNC118dxTzsVoFC93SI+eTo14hCn3XWJ818SRsK
/efahY3t0R0o9KQh3/LUAywUem2y1KN7D9ko9D1lfwpLhTkodJ34a9XCczgo
9HsqDXMtd7FR6NvzDeSXdzJR6Il/61mmIx0o9OOGrfqvoxgo9OTMecZjnRko
9Kq5FuKXnrSj0J/fCzc4vacdhf5VTpXXIMBAoaveU9a1V2Kg0DvE9BMWbu9A
oUc/XP73d1YnCt0/7+GSKAYThe5nyfuQM4+Nyh0QtLg3hv73RVUPDde8+kKf
w43uMtG9IfT9d8zTvlvRg//PvyMIM9OryHyKQjfR71+4UTkbha6tOXS2YmMZ
Ct2zPq3fRr0GxfOu11VgYtmEQpcu+712E6cFhR4esymR9awNhT6W7Jo3b047
Ct2pbtsBiePtKHT97+Klb9XaUehzmOy1G4LbUOi/X95wnNbegkJXu5Bz2Lev
BYUeLN6utPZWCwp9TafO2usXmlHop8/VHLdqbUGhlxODNz69akWhO2ftc9ik
1YZCH2+wJleovx2FPmwTJTF4uwOFzngedNd9AhOFHr9lsrzWaxb64l7IQ7On
9L87KlWXE41aR5/DSxOWHvjjRZ/DMwcU/si+o8/htiSRg9IH/p9/X3CtwWzH
OVMUurJd92BcRBoK3aM0+E4RmYdCL9vnfEAvsBTF93vde3PHokoUupXCxdbK
ObUo9C9Sg2uP+dWj0A+LPtnlI9+AQhd1SRN7FlWPQr9lue230bI6FLr/GJnb
+13qUejLOQ6LtmXUo9CXaBu/m55Rh0LPHRnr0nWzAYW+aLJ28+pzTSj0vIAb
GmMXNKPQ9/soahW3tKDQ/0ibGhoVtqHQDSXWMm0DGSh0Cz2Jnzn8fRqE3h/U
L1FWwUIdjkYptqvR502z6vnOpfn0vvHP3TMX9elzuLEt7kamNH0OV0p4GZ/1
pO/Lj0StLZc9pF8ffpLt5Ui2//v3thFX7hVcEQxDoSssPG206U0KCl00drpC
k0IWCn1L1Wcv+435KPTeZ4nDhwyKUOjMIc9a5e/FKPQPOdyBDIlSFHqSua6K
dW4ZCl3etbU4KvEHCj2l2jnw/eMfKPQfPytiDt6oQKFfymX/3fm0GoWefPvy
Bs1JdSh03qdERoVEIwpd4ndqeFFZMwrd7PfKxbsE21B83rrntZLLGSj0W6vZ
rD1mnSh04vSExlSShS7oyJS7OJY+V+tO+rBWGtK7bpdvk2k6vZ9R6Lo0fTl9
Dl0bzu90qKf/vZNuzG9XMxf636WcmxFdGh1Gn8/sYYeXZ6zp86nQEHylYeJ/
zOcCmQtbGPR/N/2/Xz+Jz3olysL1Lij01OEzcqqMOBT6LE7/2AmHPqLQRR75
zLgWmYFCfznnYqZeYhYK/bjKPG1lmW8o9Gan1rF/YwpQ6CbyTVpWoqUo9EsV
rm9kxcpR6Pq/lm3O7qxEoQ8+auhRXFaP4vHXxFcpr2hGob9tOm71I6EVhb7L
tDk5YTMDhf56SFGqsrQThd5kJR/h089C/wfXFNZh
       "]], {
      GrayLevel[0.5], 
      DiskBox[{-0.3, 0.4}, 0.1], 
      DiskBox[{0., 0.4}, 0.1]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient"}, PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Wave Amplitude\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
                  
                  "], {{-110, 
                    Rational[-15, 2]}, {110, 
                    Rational[15, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{110, 
                    Rational[-15, 2]}, {-110, 
                    Rational[-15, 2]}, {-110, 
                    Rational[15, 2]}, {110, 
                    Rational[15, 2]}, {110, 
                    Rational[-15, 2]}}, {{
                    110, -7.5}, {-110, -7.5}, {-110, 7.5}, {110, 7.5}, {
                    110, -7.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{-109.99999999999999`, -7.5}, {
                    109.99999999999999`, -7.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{-83.65019011406844, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-83.65019011406844, -7.5}]}, \
{{-41.82509505703422, -7.5}, 
                    Offset[{0, -4.}, {-41.82509505703422, -7.5}]}, {{
                    0., -7.5}, 
                    Offset[{0, -4.}, {0., -7.5}]}, {{41.82509505703422, -7.5}, 
                    Offset[{0, -4.}, {41.82509505703422, -7.5}]}, {{
                    83.65019011406844, -7.5}, 
                    Offset[{0, -4.}, {83.65019011406844, -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-108.74524714828897`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-108.74524714828897`, -7.5}]}, \
{{-100.38022813688211`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-100.38022813688211`, -7.5}]}, \
{{-92.01520912547528, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-92.01520912547528, -7.5}]}, \
{{-75.2851711026616, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-75.2851711026616, -7.5}]}, \
{{-66.92015209125475, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-66.92015209125475, -7.5}]}, \
{{-58.55513307984791, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-58.55513307984791, -7.5}]}, \
{{-50.190114068441055`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-50.190114068441055`, -7.5}]}, \
{{-33.460076045627375`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-33.460076045627375`, -7.5}]}, \
{{-25.095057034220527`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-25.095057034220527`, -7.5}]}, \
{{-16.730038022813687`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-16.730038022813687`, -7.5}]}, \
{{-8.365019011406844, -7.5}, 
                    Offset[{0., -2.5}, {-8.365019011406844, -7.5}]}, {{
                    8.365019011406844, -7.5}, 
                    Offset[{0., -2.5}, {8.365019011406844, -7.5}]}, {{
                    16.730038022813687`, -7.5}, 
                    Offset[{0., -2.5}, {16.730038022813687`, -7.5}]}, {{
                    25.095057034220527`, -7.5}, 
                    Offset[{0., -2.5}, {25.095057034220527`, -7.5}]}, {{
                    33.460076045627375`, -7.5}, 
                    Offset[{0., -2.5}, {33.460076045627375`, -7.5}]}, {{
                    50.190114068441055`, -7.5}, 
                    Offset[{0., -2.5}, {50.190114068441055`, -7.5}]}, {{
                    58.55513307984791, -7.5}, 
                    Offset[{0., -2.5}, {58.55513307984791, -7.5}]}, {{
                    66.92015209125475, -7.5}, 
                    Offset[{0., -2.5}, {66.92015209125475, -7.5}]}, {{
                    75.2851711026616, -7.5}, 
                    Offset[{0., -2.5}, {75.2851711026616, -7.5}]}, {{
                    92.01520912547528, -7.5}, 
                    Offset[{0., -2.5}, {92.01520912547528, -7.5}]}, {{
                    100.38022813688211`, -7.5}, 
                    Offset[{0., -2.5}, {100.38022813688211`, -7.5}]}, {{
                    108.74524714828897`, -7.5}, 
                    Offset[{0., -2.5}, {108.74524714828897`, -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.2\"", -0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-83.65019011406844, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.1\"", -0.1, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-41.82509505703422, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{0., -7.}, {0., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["0.1`", TraditionalForm], 
                    Offset[{0., -7.}, {41.82509505703422, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {83.65019011406844, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {220, Automatic}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 
                 RowBox[{
                  "MultipleScattering2D`Private`CoolColor$656075", "[", "#1", 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.2631115243798812`"}], ",", 
                   "0.2631115243798812`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Wave Amplitude\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719154241395956*^9, {3.719154374891624*^9, 3.7191544503098297`*^9}, 
   3.719154778809744*^9, 3.71915516446233*^9}],

Cell[BoxData["\<\"/home/art/Software/Dropbox (The University of \
Manchester)/study/Scattering/ScatterCylinder/v3/examples/TwoBodyScattering.\
gif\"\>"], "Output",
 CellChangeTimes->{
  3.719154241395956*^9, {3.719154374891624*^9, 3.7191544503098297`*^9}, 
   3.719154778809744*^9, 3.719155173417369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719153324312702*^9, 3.719153354259273*^9}, {
  3.7191536966430893`*^9, 3.7191537419352903`*^9}, {3.7191541638937387`*^9, 
  3.719154164741725*^9}, {3.719154207302587*^9, 3.719154232641769*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"\<\"RangeTime\"\>", ",", 
   RowBox[{"\<\"RangeTime\"\>", "/.", "\[VeryThinSpace]", "options"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.719154165345069*^9, {3.7191542135825768`*^9, 3.719154229457366*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 876},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 813, 18, 133, "Input"],
Cell[1396, 42, 102, 1, 45, "Output"],
Cell[1501, 45, 1231, 22, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2769, 72, 312, 4, 98, "Chapter"],
Cell[CellGroupData[{
Cell[3106, 80, 8206, 175, 836, "Input"],
Cell[11315, 257, 17828, 339, 340, "Print"],
Cell[29146, 598, 674, 15, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29857, 618, 7392, 151, 517, "Input"],
Cell[37252, 771, 80987, 1390, 400, "Output"],
Cell[118242, 2163, 347, 5, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118626, 2173, 3956, 108, 691, "Input"],
Cell[CellGroupData[{
Cell[122607, 2285, 493, 10, 34, "Print"],
Cell[123103, 2297, 19722, 384, 343, "Print"],
Cell[142828, 2683, 329, 7, 36, "Print"],
Cell[143160, 2692, 16958, 298, 334, "Print"],
Cell[160121, 2992, 18267, 348, 340, "Print"],
Cell[178391, 3342, 238, 6, 34, "Print"]
}, Open  ]],
Cell[178644, 3351, 701, 14, 34, "Message"],
Cell[179348, 3367, 699, 14, 34, "Message"],
Cell[180050, 3383, 698, 14, 34, "Message"],
Cell[180751, 3399, 577, 12, 34, "Message"],
Cell[181331, 3413, 35292, 651, 642, "Output"],
Cell[216626, 4066, 304, 5, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216967, 4076, 242, 3, 45, "Input"],
Cell[217212, 4081, 284, 6, 45, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

