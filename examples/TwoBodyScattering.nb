(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    221605,       4215]
NotebookOptionsPosition[    220051,       4161]
NotebookOutlinePosition[    220419,       4177]
CellTagsIndexPosition[    220376,       4174]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../src/MultipleScattering2D.wl\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MemoryInUse", "[", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "useful", " ", "function", " ", "when", " ", "using", " ", "many", " ", 
    RowBox[{"scatterers", "!"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7191264418094*^9, 3.719126442402156*^9}, {
   3.719130081156681*^9, 3.71913010983748*^9}, {3.7191311970615*^9, 
   3.7191311987768593`*^9}, 3.719141147916902*^9}],

Cell[BoxData["31918440"], "Output",
 CellChangeTimes->{{3.719141183326336*^9, 3.719141186043461*^9}, 
   3.719141294503508*^9, 3.719145258791741*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<MultipleScattering2D`*\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7191411519351254`*^9, 3.719141173975975*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AttenuationFromListFrequency\"\>", ",", "\<\"CombineWaves\"\>",
    ",", "\<\"ConvolutionTest\"\>", 
   ",", "\<\"CylindricalWaveFromCoefficients\"\>", 
   ",", "\<\"DrawScatterers\"\>", ",", "\<\"ExportListCylindricalWave\"\>", 
   ",", "\<\"ExportListFrequency\"\>", ",", "\<\"ExportListWaves\"\>", 
   ",", "\<\"FrequencyFromScatterers\"\>", ",", "\<\"GenerateParticles\"\>", 
   ",", "\<\"ImportBoundaryFrequency\"\>", 
   ",", "\<\"ImportListCylindricalWave\"\>", 
   ",", "\<\"ImportListFrequency\"\>", ",", "\<\"ImportListWaves\"\>", 
   ",", "\<\"ListCylindricalWaveDueToImpulse\"\>", 
   ",", "\<\"ListPlotSequence\"\>", ",", "\<\"ListWavesDueToImpulse\"\>", 
   ",", "\<\"MultipleScatteringCoefficients\"\>", ",", "\<\"OutWave\"\>", 
   ",", "\<\"PlotCylindricalWave\"\>", 
   ",", "\<\"rng\[Omega]FourierOffset\"\>", 
   ",", "\<\"ScatteringCoefficientOperator\"\>", 
   ",", "\<\"SetParametersAndReturnOptions\"\>", 
   ",", "\<\"SingleScattererCoefficientsFromImpulse\"\>", 
   ",", "\<\"StatsFromParticles\"\>", ",", "\<\"TotalWave\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7191411747607517`*^9, 3.719141187973328*^9}, 
   3.719141296486413*^9, 3.719145260633922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two body multiple scattering", "Chapter",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
  3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
  3.662743890385994*^9}, {3.6627439285072517`*^9, 3.6627439351816053`*^9}, {
  3.719151177710041*^9, 3.719151183790825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
    "Calculate", " ", "the", " ", "response", " ", "for", " ", "a", " ", 
     "given", " ", "frequency", " ", "and", " ", "position"}], ";"}], 
   "Subsubsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"radius", " ", "of", " ", "the", " ", "scatterers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radius", "=", "0.1"}], ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "max", " ", "number", " ", "of", " ", "hankel", " ", "functions", " ", 
    "per", " ", "scatterer"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"angular", " ", "frequency"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]s", " ", "=", " ", 
    RowBox[{"{", "6.", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<PrintChecks\>\"", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "will", " ", "activate", " ", "different", " ", "checks", " ", "for", 
         " ", "different", " ", "functions"}], ",", " ", 
        RowBox[{"but", " ", "is", " ", 
         RowBox[{"slow", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\"\<SourceWave\>\"", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "#2", " ", 
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"chose", " ", "a", " ", "plane", " ", "wave"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Dirchlett\>\""}]}], 
     RowBox[{"(*", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Neumann\>\""}], 
      "*)"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Position", " ", "of", " ", "the", " ", "scatterers", " ", "and", " ", 
    RowBox[{"listeners", "/", "recievers"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", ".3"}], ",", ".4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", ".4"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listeners", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "0."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Calcualted", " ", "scatterd", " ", "wave"}], "*)"}], 
  "         "}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"k1", ",", "r2", ",", "r1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "r1"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "r2"}], "}"}], "}"}]}], "}"}], " ", "=", " ", 
    RowBox[{"FrequencyFromScatterers", "[", 
     RowBox[{
     "listeners", ",", " ", "Xs", ",", "radius", ",", " ", "N0", ",", 
      "\[Omega]s", ",", 
      RowBox[{"Unevaluated", "@", "options"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"where", " ", "k1"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"\[Omega]s", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "and", " ", "ri", " ", "is", " ", 
     "the", " ", "response", " ", "measured", " ", "at", " ", 
     RowBox[{"listeners", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Note", " ", "often", " ", "if", " ", "an", " ", "option", " ", "is", " ",
      "chosen", " ", "to", " ", "be", " ", "default"}], ",", " ", 
    RowBox[{"it", " ", "is", " ", "added", " ", "to", " ", "your", " ", 
     RowBox[{"options", ".", " ", "For"}], " ", "example", " ", 
     "\"\<MaxFrequency\>\"", " ", "below"}]}], 
   "*)"}]}], "\[IndentingNewLine]", "options", "\[IndentingNewLine]"}], \
"Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.6627438886731377`*^9}, {3.662743977526123*^9, 3.6627440109501047`*^9}, {
   3.662744149910984*^9, 3.66274424760734*^9}, {3.662744763806871*^9, 
   3.6627447643580437`*^9}, {3.662744813082358*^9, 3.662744813210886*^9}, {
   3.662883138285207*^9, 3.662883138440536*^9}, 3.6628831807746353`*^9, {
   3.6628832258119392`*^9, 3.662883236285036*^9}, {3.662883809286693*^9, 
   3.662883809470682*^9}, {3.662884441654792*^9, 3.662884478559091*^9}, 
   3.662884517590742*^9, {3.662885762159151*^9, 3.662885764551669*^9}, {
   3.662885855899521*^9, 3.662885863444744*^9}, 3.6628862945906487`*^9, {
   3.662886345365781*^9, 3.66288642514789*^9}, {3.662886539392873*^9, 
   3.66288653979016*^9}, 3.662886585054809*^9, {3.663000162648704*^9, 
   3.6630001748548098`*^9}, 3.6630017085945187`*^9, {3.663060982769505*^9, 
   3.6630610070228252`*^9}, {3.663069501617249*^9, 3.663069502857572*^9}, {
   3.663070846861308*^9, 3.663070881825128*^9}, {3.6630712289871397`*^9, 
   3.663071250263049*^9}, {3.6630712803391933`*^9, 3.6630712842538137`*^9}, 
   3.6630717437662497`*^9, {3.663251039072723*^9, 3.6632510884755363`*^9}, 
   3.6632525593589973`*^9, 3.663253663391574*^9, {3.663255486598201*^9, 
   3.663255486740343*^9}, {3.663311820833703*^9, 3.663311862817922*^9}, 
   3.663312297443722*^9, {3.663324707545908*^9, 3.663324707744875*^9}, {
   3.663325395109603*^9, 3.663325395713241*^9}, {3.663327035911784*^9, 
   3.6633270380466957`*^9}, {3.6633270831992283`*^9, 
   3.6633271222429657`*^9}, {3.663332906247139*^9, 3.663332909597625*^9}, {
   3.663332977084631*^9, 3.6633329955655117`*^9}, {3.663333031861416*^9, 
   3.663333046028613*^9}, {3.6633335381627417`*^9, 3.663333538953724*^9}, {
   3.6633351883539553`*^9, 3.663335188904065*^9}, {3.66333524432812*^9, 
   3.663335244447506*^9}, {3.66334106083245*^9, 3.6633410644338703`*^9}, {
   3.663341110067521*^9, 3.663341145802*^9}, {3.6633411881101627`*^9, 
   3.663341227636591*^9}, {3.663393167914195*^9, 3.663393168910933*^9}, {
   3.663393251823824*^9, 3.663393298170933*^9}, {3.6633935154571447`*^9, 
   3.663393515914633*^9}, {3.6634035476351357`*^9, 3.663403572211451*^9}, {
   3.6634041159486217`*^9, 3.663404121450615*^9}, {3.663404245365078*^9, 
   3.663404245454895*^9}, 3.663920711068486*^9, {3.6639575852781467`*^9, 
   3.6639575856045523`*^9}, {3.719126464863349*^9, 3.719126469360358*^9}, {
   3.719126568101214*^9, 3.719126661487691*^9}, {3.7191267517221003`*^9, 
   3.71912675354986*^9}, {3.71912682839052*^9, 3.719126907857046*^9}, {
   3.719127138365275*^9, 3.719127214517799*^9}, {3.719127498032785*^9, 
   3.719127502028578*^9}, {3.719128560080537*^9, 3.7191285715003157`*^9}, {
   3.7191359683017273`*^9, 3.719136017767446*^9}, 3.719137498847726*^9, 
   3.7191375624677877`*^9, {3.719145300505685*^9, 3.71914532831712*^9}, {
   3.719145368218519*^9, 3.719145373569416*^9}, 3.719145414627865*^9, 
   3.719149983059125*^9, 3.7191501001155767`*^9, {3.719150421708433*^9, 
   3.719150421926962*^9}, {3.7191506101684713`*^9, 3.7191506148586273`*^9}, {
   3.7191509596711807`*^9, 3.7191509642489157`*^9}, {3.719151038057522*^9, 
   3.719151168312048*^9}, {3.719151200533164*^9, 3.719151268255097*^9}, {
   3.7191514419662952`*^9, 3.719151765173897*^9}, {3.719151798132627*^9, 
   3.719151903378352*^9}, 3.719152371352344*^9, {3.719153363531255*^9, 
   3.7191533864833307`*^9}, {3.7191537502177773`*^9, 3.71915376830939*^9}, {
   3.719153826158627*^9, 3.719153975053405*^9}, {3.719154017871594*^9, 
   3.719154018944398*^9}, {3.719155047736331*^9, 3.719155101985896*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
TcA5SWVQty9gG87/A6OUVfc=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 103, 104, 105, 226, 100, 99, 98, 97, 96, 95, 94, 
            93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 
            77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 
            61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 
            45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
            29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
            13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{106, 101, 102, 225, 227, 224, 223, 222, 221, 220, 219,
             218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 
            205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 
            192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 
            179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 
            166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 
            153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 
            140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 
            127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 
            114, 113, 112, 111, 110, 109, 108, 
            107}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
          226}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 
          118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
          131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
          144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
          157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
          183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
          196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 
          209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 
          222, 223, 224, 227}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.01}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Freq. k\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Check ||Boundary[k]|| / ||IncidentWave[k]|| for up to 3 \
scatterers\"", TraditionalForm], PlotRange -> {{0, 10.}, {0, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X={-0.3, 0.4}\"", "\"X={0., 0.4}\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.7191538979327183`*^9, 3.719153924491399*^9}, {
  3.719153965503764*^9, 3.7191539778293667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"PrintChecks\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"SourceWave\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "#2", " ", 
        RowBox[{
        "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}],
       "&"}], ")"}]}], ",", 
   RowBox[{"\<\"BoundaryCondition\"\>", "\[Rule]", "\<\"Dirchlett\"\>"}], ",", 
   RowBox[{"\<\"MaxFrequency\"\>", "\[Rule]", "10.`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.719153965558137*^9, 3.719153977902358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{
     "Generate", " ", "a", " ", "field", " ", "plot", " ", "of", " ", "the", 
      " ", "frequency"}], ";"}], "Subsubsection"], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"remove", " ", "PrintChecks", " ", "from", " ", "option"}], ",", 
     " ", 
     RowBox[{"takes", " ", "too", " ", "long"}]}], "*)"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"options", "=", " ", 
     RowBox[{"options", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"choose", " ", "mesh"}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"rngX", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "radius"}], ",", 
       RowBox[{"8", " ", "radius"}], ",", 
       RowBox[{"radius", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"rngY", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"8", " ", "radius"}], ",", 
       RowBox[{"radius", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "response", " ", "at", " ", "every", " ", "mesh", " ", 
     "point"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"responses", " ", "=", 
     RowBox[{"FrequencyFromScatterers", "[", 
      RowBox[{
      "listeners", ",", " ", "Xs", ",", "radius", ",", " ", "N0", ",", 
       "\[Omega]s"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "result"}], "*)"}], "\n", "\t", 
   RowBox[{
    RowBox[{"data", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listeners", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"Abs", "@", 
           RowBox[{"responses", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "responses"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], " ", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"DrawScatterers", "[", 
      RowBox[{"Xs", ",", "radius"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.6627438886731377`*^9}, {3.662743977526123*^9, 3.6627440109501047`*^9}, {
   3.662744149910984*^9, 3.66274424760734*^9}, {3.662744763806871*^9, 
   3.6627447643580437`*^9}, {3.662744813082358*^9, 3.662744813210886*^9}, {
   3.662883138285207*^9, 3.662883138440536*^9}, 3.6628831807746353`*^9, {
   3.6628832258119392`*^9, 3.662883236285036*^9}, {3.662883809286693*^9, 
   3.662883809470682*^9}, {3.662884441654792*^9, 3.662884478559091*^9}, 
   3.662884517590742*^9, {3.662885762159151*^9, 3.662885764551669*^9}, {
   3.662885855899521*^9, 3.662885863444744*^9}, 3.6628862945906487`*^9, {
   3.662886345365781*^9, 3.66288642514789*^9}, {3.662886539392873*^9, 
   3.66288653979016*^9}, 3.662886585054809*^9, {3.663000162648704*^9, 
   3.6630001748548098`*^9}, 3.6630017085945187`*^9, {3.663060982769505*^9, 
   3.6630610070228252`*^9}, {3.663069501617249*^9, 3.663069502857572*^9}, {
   3.663070846861308*^9, 3.663070881825128*^9}, {3.6630712289871397`*^9, 
   3.663071250263049*^9}, {3.6630712803391933`*^9, 3.6630712842538137`*^9}, 
   3.6630717437662497`*^9, {3.663251039072723*^9, 3.6632510884755363`*^9}, 
   3.6632525593589973`*^9, 3.663253663391574*^9, {3.663255486598201*^9, 
   3.663255486740343*^9}, {3.663311820833703*^9, 3.663311862817922*^9}, 
   3.663312297443722*^9, {3.663324707545908*^9, 3.663324707744875*^9}, {
   3.663325395109603*^9, 3.663325395713241*^9}, {3.663327035911784*^9, 
   3.6633270380466957`*^9}, {3.6633270831992283`*^9, 
   3.6633271222429657`*^9}, {3.663332906247139*^9, 3.663332909597625*^9}, {
   3.663332977084631*^9, 3.6633329955655117`*^9}, {3.663333031861416*^9, 
   3.663333046028613*^9}, {3.6633335381627417`*^9, 3.663333538953724*^9}, {
   3.6633351883539553`*^9, 3.663335188904065*^9}, {3.66333524432812*^9, 
   3.663335244447506*^9}, {3.66334106083245*^9, 3.6633410644338703`*^9}, {
   3.663341110067521*^9, 3.663341145802*^9}, {3.6633411881101627`*^9, 
   3.663341227636591*^9}, {3.663393167914195*^9, 3.663393168910933*^9}, {
   3.663393251823824*^9, 3.663393298170933*^9}, {3.6633935154571447`*^9, 
   3.663393515914633*^9}, {3.6634035476351357`*^9, 3.663403572211451*^9}, {
   3.6634041159486217`*^9, 3.663404121450615*^9}, {3.663404245365078*^9, 
   3.663404245454895*^9}, 3.663920711068486*^9, {3.6639575852781467`*^9, 
   3.6639575856045523`*^9}, {3.719126464863349*^9, 3.719126469360358*^9}, {
   3.719126568101214*^9, 3.719126661487691*^9}, {3.7191267517221003`*^9, 
   3.71912675354986*^9}, {3.71912682839052*^9, 3.719126907857046*^9}, {
   3.719127138365275*^9, 3.719127214517799*^9}, {3.719127498032785*^9, 
   3.719127502028578*^9}, {3.719128560080537*^9, 3.7191285715003157`*^9}, {
   3.7191359683017273`*^9, 3.719136017767446*^9}, 3.719137498847726*^9, 
   3.7191375624677877`*^9, {3.719145300505685*^9, 3.71914532831712*^9}, {
   3.719145368218519*^9, 3.719145373569416*^9}, 3.719145414627865*^9, 
   3.719149983059125*^9, 3.7191501001155767`*^9, {3.719150421708433*^9, 
   3.719150421926962*^9}, {3.7191506101684713`*^9, 3.7191506148586273`*^9}, {
   3.7191509596711807`*^9, 3.7191509642489157`*^9}, {3.719151038057522*^9, 
   3.719151168312048*^9}, {3.719151200533164*^9, 3.719151268255097*^9}, {
   3.7191514419662952`*^9, 3.719151765173897*^9}, {3.719151798132627*^9, 
   3.719151903378352*^9}, 3.719152371352344*^9, {3.719153363531255*^9, 
   3.7191533864833307`*^9}, {3.7191537502177773`*^9, 3.719153750702847*^9}, {
   3.719154025771454*^9, 3.719154049109263*^9}, {3.719154921822239*^9, 
   3.719154984605578*^9}, 3.71915502049508*^9, 3.719155122882633*^9, {
   3.7191551798782377`*^9, 3.7191552039642963`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxdnXXUlVXTxk8fDEAaBGlQpEMFpFMkBWmkG6QbpLtDBJRWUkJCQiQkRLpL
WhEFAeEFKUG/fa353euc9f0xa8+eueaavfdc9/OAut43U/PONTsFfD5fscQ+
X9CtpZ2VcZbJZ3vlsmDyMzt73dkbzqLsFfc7i5BTvICzpM6SwKP6rGCyx3Ek
AJ/NWdhZCHxW/KzkQtSGqc9BrThedpbLWW5nL5B7E8vp7EXib+IL+xK5F+DJ
wf4lMC/je7x5nCUknhs/r7NE5FRfydn77BOBecdZPWeFOXeY+ySmPh9vU9ZZ
OWe1nBXk/ZTL7+wV9knYl4cjK/skYDLDI74KYIRN5qyQs+TkylFbgF5JiZUn
npjz5+XM4qroLCX3ScX+Peb4lrO3naWgNh/nSUHPt7DknCM7Z6uAXxGewnC/
A/cbxCvhv0eflHCnZP8O7/8GWPEUcZaa9/yQe6YhXpQ1DZiqzqox1xzMUFp5
11kxZ2mJVSZexWdaqUzuVbC54MrN/lV6VQb/Jj2LkstFvAp90sGX3tlrzko4
q+4zPVUjX5xcNeK5mZNwNcAUA1cCbHEweeJwHzAnYUrSU2sG/NTMojC1NcDn
4rxVwaqmlLOaPtOieJs7a+GL/RzJ6LOfKwXA1GQmhZhLaTClmFcBMD3AKdbK
WWufaTQDWNWUI1cevyX7svjl6COe2nBUAF/XZ9qRhur4TKPCtAEjbEX8Ntwt
P+9QkVhbn31fBelTCI634Kzri2lUfj32Xr69zzTbDi6t78HfFr8gPZKSr0S8
PvOph9/AZ7quyow+9pkWpMVGzjo46+gzPRahtj54YTv5TOeVONfH8HSk/iP4
itKrIfgOcDbwxb6tRvQVRtrp4qwrfnX2xeFszFoc/vfp34Gz6VzSe2dqqxHr
jN+FuPZNnDX1mS7ll4C/JH4T+jRm34f3q8vZG3Lujty9Mufu5otpW3pt5jMN
NmNfir7NwNYELw339Jn+uhNXfpiz4T77TqTTET7T7Uhno3ymPdXWoq4WtfLL
0LM53LXh7819dJcxzsb6TC/K9/KZ3kb7TLejsDb0qsE9P+AepXizenD2jTtf
a3rVgbct/bxePYnXBdMbzGhwbemr/YvuDw833R8ebvjtvO3hacH99E7SwThn
45nPAJ/p6xPWAWDag+vnM13rzBN8puOO3KUvuQ7wKS4tTXQ2idgE4g3A9sP6
E5sIp3CTfaY/aU+aGuQzjU0i15lzDvSZxmc6m8WbfhR3j4G+2HfQCf6J+JPg
0XymOJvK2oUeg+k5CI6B+ON4k7G8W3/eqj/7BnB2ge9Tn+lrms90PMTZUPop
1o2Yck2dbXD2mbPp8EwFMw2ebuR6wC3tLHa2xNlXzhb57BtoRh9v3s3ZT4df
epJuljlbjj+afS8wM+AX9yhivahtyvsMxoYQ68E5dbYRnG0kvOJfypx6M7cl
xEax703fpeBH0XMGOZ31a95fM+8L39/OHjo7Rexzn+nra2Y2ljnNdjbH2Qri
XxPzZtgXXtV/AYd8aXilz/S52mc6WkVNP7Dj4V2JPy5uv4raVdTKlwa/8Zne
5vpMs3OIT6TPJNZvwMzzmRYHgPV0/gl54dbAOQj8fNZBYJWfAkbvud/ZAWdr
ia/hPrO53yA4NOcFrPPxF/ps9tLpOp/pVOt6fOlNWvgW3OC4uqG+2Peg/Zc+
0/AwfO+b1Ln2OPvRZ/r+Fs712Kf0Gk6tOM442+iz72mfz/QnTUmPe32muw2c
T3w/gVtK37XcYwM80v4mZ+ecbaZ+L3XKz/DFvhnhPG3/BOdmYpvAbMTfz9n2
8Q5fcoflxPcT2+Vst8+0+J2zLazaS6+HnR3xmb6WM09p+3tnW5mlYgeJH/KZ
Ng+S+wLsSrhWsf+CXgfBf03PLeRWEj9EnznwSW/S43ZnR32m4SPkt5E7Qly9
vgF3DMxWcNvBbgOzOg533GdaFWYHPbXOx5/Fm2+m9hj4lZz3MFjV/ODshM/m
Lt517E/6TJvS7E7ia8l9yUy+IrcAnp3MayH1+pkknZ72mdZO0fcHak4RXw//
Sfxd9BDPHvqo3wbw4jvrMx1JT2fIKX7d2e8++2akwT+c3eBua3mHx9Sf4Y2+
480W0WsPubO+mF7l6xvYC6e4//SZTm/SQ+s+cjfw9ecc/T4YSX4/cf3ekV71
8/mWs9s+09rPzs5zpsPM6w77zeQPE/vLZ9rez1kOwCWeiz7T8QWfaep7Ynfg
vE0f73vawv4C/oW4mktwXPGZ5i5zBvWXlreBucy6Dfxdn2n2CNi7+PeI3wV7
Gd5jxO/ha/0ffa/6TK9PmMNZ9tvJ3+ZeB6m577OZH2N/nNgJ/F99ptdffKbH
X9hLZ9ec/ebsAXjVnWT/N/4J9ieJnYLnKlzX4NqF7aTnr+QUe+QzzT4Eq57S
3mPuqTtG3Z9lE/hN0w/Bq9ePYK/T8wfe4wwYcUsP0sUtcHvokcZv/OrzovNf
8ps2H1Ov2hvkPG2/4Lf9H/iKSYubmcc5zvyU99DbpPBbb53hZXytCf2mr+c+
09c/cKk2kd80ehvOp77YN/Ez2MRghP0XjufcU9y3wT2jTrFExC8QF/4vuF5x
ltRvekviNw2LU9zKKXaX/X8+y2v19C6eO3D9Rc1d8sLpH2heZr1CD/USRtpU
72R+exu9lebhB6uaZ5z7PPh71Gjuwggb8JvurvLuev/kxJQLOkvpLJXfdCQe
9bwPTnj5wgvr6VRriPMlB6992G/5EFjV/E3vlPgp6SXNCR9xVtTZq37ToM7y
CF0r/xs9pXnpNeKP3e0qPBFyL/FW0mdqeMT3GP2mRq9vOsvp7A1nOfiWXiD+
It/VdXqmoV61+vOR/rzfg+/lVb4ZceXim8nFzORLT6+5Nb2zfH7TQl6/6Tet
3/SYG7zqXqPmGRoXf1pmLWw66hOj3YTUiiMdfGmJK5YHPw/4jH7Tjqc/7TOh
9cSc8RXW/M7GOGvnrK2zDHxX6fEzwvOcmPcdaFW+AN9PEjjz4xckXoBYAeIN
nb2LFvJwz0Tc6zXewMd5/WivEPrT+hZ+MvjVJ7OzLGhFupMO32bvj8sH4zDK
v+M37UnH2eBOAX+QmqxgU5BXTWG/6U3akF6KoC3p6A32qcFl95tuvW9A+9c5
k597JuMeup80VtlZFc6UndrCcKbi7dLQJyVnUrySs/f9pvUIfbwzRdln475Z
4dEspL+63LMOsbTEqzurwZzysM9LXrhinFnnlbaLOyvBLBWrGhdPB1759GDS
ElOumt/0XBXL7Y99L+ngKOWstN90WdNZLb9pS3wl/aZJnTcf55Supe+xzj4g
rnx+9jWpLUF9KThK0icTvTISL0VtTX9M2/ngepPZ5eStcnOnPKzV4RNvGb/p
Szooy+ylgQ/BlCFXiFhtZlaeGZYlXwa/HHx1mKO0WgFsefJZwdQG9xb8tf0x
batWWpBW3vObdiqxvgemnt/0KP6KftOoYvWJf8hdamEFeausnKM8PHWpq0g/
8bR31sFvOs7O+SvAXQT+16nReRoQV362s/7OvvDb96t+0nqOuHt87KyT3/Sl
n0WN/Kbj7s56cF7NsKPf9KuZdXbWhX1HOKqwiqex37T5Efhq1HTG70SfYv7Y
N9MIfDHW4vA08ZsWpS9pqpvftKh4U9aSYHT/dtyrOmesQc7jU6wr8W5wai8N
SsvN6NWNN2hGvCm4D6gtSawU96nG3YVvDl9NOPSGPf2mA72pNNrCbzrtQVyY
Vv6YNsvAI1xLsPJrw9UL6+037TanpjSYXsRrw98T3rLwladfazjqgm/LO0pP
bfymNWH6gBG2Hr5i/fymufrEFevrN91WYh7l4agAZ1t/TK9twVSMy/eHsx9c
/eL4++LrZ3URcOOcjffbd9KLu37mbIDfNC2+SX7Tn2YlfQ30mx7mOPsE7Puc
WWefDH4SHA3gmUhMPIPgGEi9eKRjfQcTwHbE/5i+n4Cf5jeNTcXkd4VzsN90
3QT+QZyhKOfowtkm40+htguxKdhU4kP9psshftPs4Dh/CLnB/tj3NIB7NOS8
H8XdayJ3784dPvWbLoc5G86qfXP6DsPvDlZ6H+FspN/0p9h04p8xu+nkWoKd
4Wym37Q3gvhwcD2pbUGsJdyt4Rjtt9930tnnfvtZ2I/8KL/pbZbfdDsT60Ov
7sxlGndoxp16cdYZ+DPAj4ZPvH3p5/UaSbwtmNFgZoHrS1/t9e9t9O9vXgrY
efvD88jZY2dnnK1wttJvup/rN0152tJ+HnNUrX4P6BuRrscyw9V+03E7Yu2J
ryK3xm9a+sbZNjj1rXQAO479APhXgxWntLfWb/pb4DeNDSa+htx8v+la59zi
7Dtn5zn/PH/sOxgE9hvO4/FPhms981kH7zr6DqH3QuoXwLfM2XK/aWIO99K7
TeDuE+GYBs+3zjb4TWtfOvvKb5r+lN7fsh9KXlrY6GwTmGngPgUrnsV+0/Ei
8J9RsxF/A32872k4+0XULvGbnj7n3bbgz2I/CsxS+HWWmcRGUTuEt/HOPZS9
uL73m+5Gcs7F8Ip/M283mrfcRGwm+9H03Qx+Jj2XkhvOPUYwh7HwKbbH2Y/0
n80ZpL3tzOmos2N+04LqvvabDreC/54ZHvGbHsfSQ7jxYFeQOwrPHGq3khsH
/pCzw377xlbDqRrpSHr6AdtJTOdaA+dxfMX092r9+Vd/L57HXXZQOx9/Oznv
u91BTno+4Y9pew3cip2Mi3uxz5mf3u0yvNuwOdxxJ3PWmaVHafMUvtbTcK+H
f7ff9LHLbz93pNENcOzyx76JL8GeBXOGmWqei+E/Te1uZv0VsTPEN1F/ztnP
ftOcdCTt7PObvryc4kvg3ov9RGwh99zFndZzpz2c6SvwiznfJnjFuZ8++4hv
5EznOc/P9Fnqj31jP4H/zdl1+ug++pb1vS+HU9wH/KYvxfQf+F1hVtLWXWf3
yAt3kHle8Ju2LzPLS8QuEpdWV4A/As9ReA6Su8T8L2JbqV1JXhy/+E2XV/2m
p/vOHvjtjJ5Oj3LGY3H3WU7sf8RVd5z9Zeo93V+Bfye9fiF+lf0Jau9TfxzO
f5jBz7zBVu50x9lffvtWxfVr3Oyv+U1rf/tNByfJ7wLzkPjfzO1HZrcL3DVm
uhtfWtXv4DNgVfM7NbvBnob3Ef4p9vq9fZZa/TcZ0ounG+31O/8cmCfO/vCb
Rn8nrthT5vE3dznB/iQ8N5nJE3ge02MvfM94w384/+/kzsH9M7gb1D0Fq/gW
ai9g4nrOPXW/VE7Lf7r1lt80cZn5/MdsDjEr1fzrNw0e4LyqS+zqXwnYLC/Q
6xn1l6jR93KZ2EF63Qb/HM5b5A7Q7xCY5AHTVLKAmacvcfr5DvXdJAmYlvXP
evTPIvXPOe8RT0pOq2ozUesjl4x4MGBaDARM18J4foCcn/0V7r+f+R3kvIe4
8yXu9YA7pAiYFkNuDQds1f5X+mr/K3hhpZWIW6MB06tiKYlrZppdSnK/gU3t
LE3A9KO94mHqHqK/a8SUE7e0JI4XAvZnV2korVvTBUxDyicImL5eDZhG09Dn
CVrVme9zT93hF+70iLOmxk/N2V6AT7xP6ef10pkScI4/wD6ld1r8J+z1dwb9
XUF/P34tYLrTuWsG3d/3nXVz9jL61p/Jn6PN1/C1pneWIWDa/JdZvhT3TWgV
hyxhIKZd+YkC5muVZjPCkyGO9180nh4/ITW3+HbuUC8dFkCL0mx+Yn/xPSQm
X9VZNbT7Hz2Tgi+ArjOhW83zTf4+olxB+PM6y8d3K2xm8EFW7QsFbJ4Fwahf
RvbJ4cmCblWXFV+xt5y9je5C5MLo4B1nhfkektMnBTUpwWYDH8HPDqYQOO2j
5CNgs8Gdit5B7pGFvqnIS0NFnb1LXGeRll9Ad284e501AX6UnsIWAS+OV9kX
wU8D/6vko9QnYA6aRw56vYGfg7hi7znL7SwX5ysWMD2rNidzLB4w3Sr3MvFc
7F8DL448AdPVy9R5uITE0sNVImA6LcF8E1OXB4yXTw9/cfgTxvHlpiYTHN0D
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
XLX/EntO/Bl1z6g5z/sK95+z/wP5BWo7
            "]]}]}, {}, {}, {}, {}}}, 
      VertexColors -> CompressedData["
1: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
sruSfZkCzXd1S9R/toOEuVpB9vpOGH/ybYPeErSXc0PHDzmxoXjc2cKElR3g
POfUSDYbvRfqlb95HedApU+x4lQ/PrRusJyhhL6/2c2aQRJ5XPgorfMkPIkG
8ydHpHcj/az6jtcfPI/2l9IXfZ/RvXUx0CZt9hgPGuXUR5Zu50FPQyn3iiMF
LCE9/t90HqQeHZ0zfiKaJ6N30uPbSdByqdB7s5wH1wqdM2a5kGAfbz5OK56E
P+OXQs1EHlS+v2+5IpYEWWudd5Pt0X1GKg+coAiQNYh7lX2FBKn30zi0Mgkl
QqK2ImgvFpM8Y5Bfhvz9Xr1/YAIJyezcps5SAsIvBqQoVZPg1zTmvfQPDxzG
6zf03CJA7cK0zJpaEhbvFbm3dIAHsSsM9RVvoPfjhNV75yJOvAwaJ7f189Bc
c13wG/Gj3Wn+zBLFc+1Um18P8mDYSH9rIco3e6gjUVSP9orO7is1QzwIWPbL
R+QmAaW6eQP+9cz5TPWZ+tko0L8q7v8APu8ZfN7d+LxM+jDpyaT/DuyXNvar
EPv1FfvLxv6mYH//4yEb89CAeehm4EeQt4uYNyY+mXi2xPw/x/yrY/5/Z9wb
WeDTBeF76UcFqRScndT6+JYKC5bfT+yusekEOXHDBXv1KYjUaDqnEcSGa3u8
uzKWd4C7tePtqDYSBquHV39I5UBj/jLJX5v5kC+r7HLiOAl5ixbyey9wYWD9
VNeLeTRc//T9opkt8iMpeE9YLAFxlJyC1zgavlb9nMtGuqzM+ha8zYIHLo/i
3nLQXuxlafIqo4wHedOuT5vP4YH82mixBwpoz3vb/356GA9yrlvseKhNQrFr
t6PjGxIk6tp6N5rx4IuOjnq+Fwlq38MCpc4iv/ZdOzI4lQdNb2rFfuwhwac0
YWULmlu1eS9SuscI8Ll82VUa7adrnk4xNPJF7xipt6D4gwClO6bVGWkkhKfr
7qc80Pvtx9XhpM9o3yno3TEli4SFhy2vj7iREDjCSjnSTcBl12dx1Wg+bt06
P9rVnYRHq6bHVKL4cHG8WTqKa/e17YpahT7n0ZBbKtpTOv6e+diF6uSWXQ2e
gOqHpPxUHELx8Zbzd6Wi+HyGfKb6Cxj6Yeqf6bxM+jDpeVdA/89Y/ynYr3oB
v1yxv2sE/I3HPHzDPLhgHpj4aRLg7QrmrRDz6Yb5/IX5tGfgeRTzH4H5T8H8
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
iTcmPuUwz+swz5KYZyb+/w+gVsFn
       "]], {
      GrayLevel[0.5], 
      DiskBox[{-0.3, 0.4}, 0.1], 
      DiskBox[{0., 0.4}, 0.1]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient"}, PlotRange -> {{-0.8, 0.8}, {0., 0.8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.5}, {7.500000000000001, 
                112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -112.5}, 
                    Offset[{4., 0}, {7.500000000000001, -112.5}]}, {{
                    7.500000000000001, -74.74832214765101}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -74.74832214765101}]}, {{
                    7.500000000000001, -36.99664429530201}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -36.99664429530201}]}, {{
                    7.500000000000001, 0.7550335570469799}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    0.7550335570469799}]}, {{7.500000000000001, 
                    38.506711409395976`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    38.506711409395976`}]}, {{7.500000000000001, 
                    76.25838926174497}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    76.25838926174497}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -104.9496644295302}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -104.9496644295302}]}, {{
                    7.500000000000001, -97.3993288590604}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -97.3993288590604}]}, {{
                    7.500000000000001, -89.8489932885906}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -89.8489932885906}]}, {{
                    7.500000000000001, -82.29865771812081}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -82.29865771812081}]}, {{
                    7.500000000000001, -67.19798657718121}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -67.19798657718121}]}, {{
                    7.500000000000001, -59.64765100671141}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -59.64765100671141}]}, {{
                    7.500000000000001, -52.097315436241615`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -52.097315436241615`}]}, {{
                    7.500000000000001, -44.54697986577182}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -44.54697986577182}]}, {{
                    7.500000000000001, -29.446308724832207`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -29.446308724832207`}]}, {{
                    7.500000000000001, -21.895973154362416`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -21.895973154362416`}]}, {{
                    7.500000000000001, -14.345637583892618`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -14.345637583892618`}]}, {{
                    7.500000000000001, -6.795302013422819}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -6.795302013422819}]}, {{
                    7.500000000000001, 8.305369127516778}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    8.305369127516778}]}, {{7.500000000000001, 
                    15.855704697986578`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    15.855704697986578`}]}, {{7.500000000000001, 
                    23.406040268456376`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    23.406040268456376`}]}, {{7.500000000000001, 
                    30.956375838926174`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    30.956375838926174`}]}, {{7.500000000000001, 
                    46.057046979865774`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    46.057046979865774`}]}, {{7.500000000000001, 
                    53.60738255033559}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    53.60738255033559}]}, {{7.500000000000001, 
                    61.15771812080537}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    61.15771812080537}]}, {{7.500000000000001, 
                    68.70805369127517}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    68.70805369127517}]}, {{7.500000000000001, 
                    83.80872483221476}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    83.80872483221476}]}, {{7.500000000000001, 
                    91.35906040268456}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    91.35906040268456}]}, {{7.500000000000001, 
                    98.90939597315436}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    98.90939597315436}]}, {{7.500000000000001, 
                    106.45973154362417`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    106.45973154362417`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -112.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.25\"", 0.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -74.74832214765101}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -36.99664429530201}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.75\"", 0.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    0.7550335570469799}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.00\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    38.506711409395976`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.25\"", 1.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    76.25838926174497}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "0.003284424914009375`", ",", "1.4889489024081166`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7191550155594397`*^9, 3.7191551448957148`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
    "Calculate", " ", "field", " ", "plots", " ", "of", " ", "the", " ", 
     "time", " ", "repsonse"}], ";"}], "Subsection"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<PrintChecks\>\"", "\[Rule]", " ", "True"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxFrequency\>\"", "\[Rule]", " ", 
       RowBox[{"1.", "/", "radius"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxTime\>\"", "\[Rule]", " \[InvisibleSpace]", "6"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\"\<SaveGIF\>\"", "\[Rule]", " ", "True"}], ","}], "*)"}], 
      " ", 
      RowBox[{"(*", 
       RowBox[{"automatically", " ", "generate", " ", "gif"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\"\<SaveData\>\"", "\[Rule]", " ", "True"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<MeshSize\>\"", "\[Rule]", "radius"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Dirichlet\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Neumann\>\""}], 
        ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\"\<MaxTimeSamples\>\"", "\[Rule]", " ", "4"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"\"\<MaxRadius\>\"", "\[Rule]", "3"}]}], "*)"}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", "x1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}], ",", "listWaves"}], "}"}],
     "=", " ", 
    RowBox[{"ListWavesDueToImpulse", "[", 
     RowBox[{"Xs", ",", " ", "radius", ",", "N0", ",", "options"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "where", " ", "the", " ", "fields", " ", "where", " ", "sampled", " ", 
    "in", " ", "the", " ", 
    RowBox[{"box", " ", "[", 
     RowBox[{"x0", ",", "x1"}], "]"}], 
    RowBox[{"X", "[", 
     RowBox[{"y0", ",", "y1"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSequence", "=", " ", 
   RowBox[{"ListPlotSequence", "[", 
    RowBox[{"listWaves", ",", "options"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listplots", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Show", "@@", "#"}], ")"}], "&"}], "/@", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"plotSequence", ",", 
        RowBox[{"DrawScatterers", "[", 
         RowBox[{"Xs", ",", "radius"}], "]"}]}], "}"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Have", " ", "a", " ", "look", " ", "at", " ", "one", " ", "of", " ", 
    "the", " ", "plots"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listplots", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Save", " ", "all", " ", "plots", " ", "as", " ", "a", " ", "gif"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<TwoBodyScattering.gif\>\""}], ",", "listplots"}], "]"}]}], "Input",
 CellChangeTimes->{{3.719153324312702*^9, 3.719153354259273*^9}, {
  3.7191536966430893`*^9, 3.7191537419352903`*^9}, {3.7191541638937387`*^9, 
  3.71915416439578*^9}, {3.719154279002483*^9, 3.7191543618819437`*^9}, {
  3.719154791834022*^9, 3.719154872280665*^9}, {3.719154903821682*^9, 
  3.719154903891191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the frequency given, we have mesh t \[Element] Range[0, \"\
\>", "\[InvisibleSpace]", "28.274333882308138`", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", 
   "0.3107069657396499`", "\[InvisibleSpace]", "\<\"]\"\>"}],
  SequenceForm[
  "For the frequency given, we have mesh t \[Element] Range[0, ", 
   28.274333882308138`, ",", 0.3107069657396499, "]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.719155145192486*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          
          "]]}}}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          PointSize[Large]], 
         PointBox[CompressedData["
1:eJw1kgdQlEcUxw1noYSmFFHKgZ50j3IcR5H3QC42sIDccYULngMCB0dXJCIl
CAEhqJhhLASJnowFYyHBAi5GlBZFBFHUgAUMKqiEIAQjxMz3uTM7Ozv79pX/
/2cpjw+KUJsxY4bk0/7//LxGr/lGyLS/JkfjLdIqnnWCZu/JgtBSGX1/Dqrd
mrwn62QkxZrNeds5DMMx+3zye8Lo91HQ7tbbev9wGClaYy1Y8WgCim+8HQ+2
DaPjP8LJPaJi2aiU/Jy9sGBN5BfI6S689DBbSv9noCJp3ZyzQVJSFrZoy6hs
Nr7iMxzXP5PQ+dTRJudKnNVlCcnysOcfEmrh6fryvH9XSej82hirXqZg2UpI
TeGBvZY2eqiqX3qPe1FM19NHw91Sc6wQkxNp5Vmpx+biqTPLwsIdxHT9eTgm
GD6vZyom5ZGV8S1MQ2zJSPmuTyWi+zHC+1nMisAKEdm3USUzKzfGtrGSqyaL
RXR/81H9QS6zxUZE8vxOBCaaLMC7FvMMFcdD6X4X4riTMT/tYihJd6r2vvGD
Kf5awhwzcQil+zfDer/v32SuDSXx5ufsTeZaYPhxc87yGiE9DxOlI22qgNdC
4pInLuY2MXGoubKidpmQns8SN9udXUNKhMQh43Fu+Cwr3FHdPL/upoCe1wq9
16YM5X6KX5Ii21G4fBFeatQzLAwQ0PMvwjj9O4vbxwWEqXiSXJO9GEPY5JRn
awitBwvztDW6JhsFZIFcruglLDwydDvWjhtC67MEdRiWT++cFxADUb9cfWoJ
/iNzJCR9I62XNVqe9vsY/lxAdNdHil28bdC3V6lylAXT+tngqutCG9OrQqKx
YnCDNN0Wq731jXmGG2g97XC6ty1YY6aEMHxiVuVdtMNM08DGzS99aX3tMV6s
OuStE00+cobw7Ht7HGhSqjGaCoDS2wG7Vqu9ttiggnF7Je8hxxHV5TmDB8aO
AKW/I/oreSduJuyHv6zesWcmL8WoPx9FPx7fC5QfbGQzSq/OUxbDkEmS9dJz
bDSYqyyJmC4Eyh8n1Gzkzupvzodk9XTd09uc0EzevlbTLw8ov5zwS7KzPdU/
F94xvLSuGTmjgdjo8nunb4Hyzxkjs9kFNbezIW76w+zuX5wxLsfobu1UFlB+
uiBk7XhhPpwJrybr1F5vdEH/wvzc5GM7gfLXBbdElASmz8mALe8zpqZHXdDE
on6W14dvgPLbFSdW8p+tqE6H/hGfSYNSVzRbV8+c+H07UP67ooQvin5Tmwby
4ekxWxcOBu2ZrGyd2AYUDxzk/lGmL9DZBn2DDSM+HRy8MDw/aSpqK1B8uOGm
Y/l64RWpIO3PHg5OcMPRyZHO/TqpQPHihmM/JbYOylKgp8/vZZQuF0VVHm7t
vclA8cPFnpDE7Tr+ySB4xBjIOMPFd8szdUlHElA8cdHiefkm1sok6OxufLIv
0B1Le9qPb36aCBRf7sgfkPjqRCbC+ru7HlcNuaO3hhHbRCMRKN542HI0SLPp
QALcuvXVg7rdPIzOdb3D4ycAxR8PD1Z12UNDPKxumdPVYeeBOa1FAWdY8UDx
6IF/h3ue0oxTQlNjc/uLFg9M6C/rcOiLA4pPT1Qe1vKvc4sD/4aCtg9Rnlhk
FeOmdSEWKF49UbqrIeOhUSz8dmV1k566F1amDLD1f1QAxa8XOuN0905tBUCt
1nVWlRcGBLEOFpXHAMWzF0ZcKr3nbhwD/wGHXIas
          "]]}, {}}}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Convolution of Impluse b(t) with 2D Green's function.\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"analytic w[t]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Frequency sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\"", 
           "\"Time sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155148282732*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|Wi[k]\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\): \"\>",
    "\[InvisibleSpace]", "1.9281038413284575`"}],
  SequenceForm[
  "|Wi[k]\!\(\*SubscriptBox[\(|\), \(\[Theta]\)]\): ", 1.9281038413284575`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7191551482849216`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
SV7vL6JD/SaF3In1MtiYPb/hdgUd/spsfB5vI4PqDMVbrDo6/FY4+EvhoAw6
3nIXcGyiQ5YlW7UgVAbDTd6uW9VBh6miK1tN42UwUirCWvwrHUQ31B95cV4G
vTfu2DQ2TIc3Mx/PuRTJoEmNhcS7P3Sw75+u/XFfBkeSgx8+4YmCY3wygzGt
Mph8q9GmUiwKQmyXy0j2yKD0ctv7JYpRINO4eUPuhAwyfi+KFBCj4HCwvZeB
kCy2Sn01LtCPgtDtXimPlGVRiDViVrouCtbahFc66Mni0q3LV1aZR0Exi/35
22ZZ1HU+M/3UNgo6v50UptrJosJj7StdTlHwLeWCgZCXLL6sLmwY84oCvrPX
nTOosrg+8j3PkuAoWDV1m7P8uCy68lQ7LI2KgsCq2pJ7WbJoaG9x3ywhCsrf
NL+1viGLVQHMDZ5nokBi1/u/3XWyOGlz+BXnYhTQtAd0jr6Wxf7p+Zj8/CgY
cf6z+1+fLCYFAr68HQVhP/jpp6dl8VuBgerkgygQ/CCbRxCVw7HSNlHN51FQ
pE1qvq0uh7ei1GWt30SBS6vhpPlqOdSWUTKI/BwFGm/NuCyHu0LqvAuHomDU
xGG7z1451M1UuPVhMgpapg4FTx2Ww4fHVWSleKKhRo6SmUiXQ17z5qRtYtFQ
fTLhkXKKHM490VVlKkbDY++M4aIcOcyXNK2vJkbDx8wiuY235VCENBHzRz8a
hHQfbHr5RA41/7naGZlGwxblNh+3TjnszwvbQN0aDfFevadGB+XQW3rdxupd
0dAlNnU3dl4Oz24vcvjrzJWXEe2RlpTHyG0vWBY+0VAerimaR5BHOYmMhpMh
0f+7Xsuj+yVZ4vvoaLj7e8eBp9vk8UyUCWonRsMKxwMJjk7y2LH8b1tIWjSc
dgkp6w+Qx1WFh1/dvxQNfXzx7yIY8pg9E2YmVBQNursyeJackUc1VRLZriIa
vDYVr8jKk8fb4hTqhbpoSGp54KBXKY9Or/xMe5uiIZ+3LfpBozwq+PAc0e2M
hltdX6/ZfpDHvqYN0mE90VDq8Lvl8095fM6rrH3vZzRkB/NPBy/K4+MlmcWL
09FAXy1P4JVVwNbemsvb+GPA6r8DBAUcSWEJJ0vGgHimURh5nQKSRIY+t6nE
QC1aXKywUsDAvZM68tox4JGy5+m2Awr4NDTvy36DGJiMOjTSGaSAaz0mRC5u
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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl1VO4EAYYBuDTybZ5speNZdvesm0v264tbtk2l7ds27b3ti7e5/svv6vv
D2rYrnLbwICAgGCkCPyRyQN/3MlIShBJSEwiEpKA+MQjLnGITSxiEoPoRCMq
UYhMJCISgfCEIyxhCE0oQhKC4AR+7/S9IN+U+8oXPvOJj3zgPe94yxte84qX
vOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA85zjLGU5zipOc
4DjH+Jd/OMoRDnOIgxxgP3+zj73sYTe72MkOtrONrWxhM5vYyAbWs461rGE1
q1jJCpazjKUsYTGLWMhf/MkC5jOPucxhNn/wO7OYyQymM42pTGEyk5jIBMYz
jrGMYTSjGMkIhjOMoQxhMIMYyAB+oz/96EsfetOLnvSgO93oShc604mOdKA9
7WhLG1rTipa0oDnNaEoTGtOIhvzKLzSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4ifKUgB8pOPvOQhN7nISQ6yk42sZCEzmfiJ
jGQgPelISxpSk4qUpCA5yUhKEElITCISkoD4xCMucYhNLGISg+hEIypRiEwk
IhKB8IQjLGEITShCEoLgBBIs2I+B+ia+8oXPfOIjH3jPO97yhte84iUveM4z
nvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iIXOM85znKG05ziJCc4zjH+
5R+OcoTDHOIgB9jP3+xjL3vYzS52soPtbGMrW9jMJjaygfWsYy1rWM0qVrKC
5SxjKUtYzCIW8hd/soD5zGMuc5jNH/zOLGYyg+lMYypTmMwkJjKB8YxjLGMY
zShGMoLhDGMoQxjMIAYygN/oTz/60ofe9KInPehON7rShc50oiMdaE872tKG
1rSiJS1oTjOa0oTGNKIhv/ILDahPPepSh9rUoiY1qE41qlKFylSiIhUoTznK
UobSlKIkJShOMYpShMIU4mcKUoD85CMvechNLnKSg+xkIytZyEwmfiIjGUhP
OtKShtSkIiUpSE4ykhJEEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIHjA/28/4D+DTwT3
            "]]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1kO0GAYQBdAf27bZqI1t23Zj2zba2LbZ2HbS2LZt9v7TxT1vO5s3M0ka
tavUNkhAQECyoAEBgSkCghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBax
iUNc4hGfBCQkEYlJQtLAWUhOClKSitSkIS2/kY70ZCAjmfidP8hMFrKSjezk
ICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSg
JrWoTR3qUo/6NKAhjWjMnzShKc1oTgta0orWtKEt7WhPBzrSic50oSvd6E4P
etKL3vShL/3ozwAGMojBDGEowxjOCEYyitH8xd+MYSzjGM8EJjKJyUxhKtOY
zgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzz9sYCOb2MwWtrKN
7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn+JfTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovA8gchKMEITghCEorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGI
TwISkojEJCEpyUhOClKSitSkIS2/kY70ZCAjmfidP8hMFrKSjezkICe5yE0e
8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3q
Uo/6NKAhjWjMnzShKc1oTgta0orWtCFwebejPR3oSCc604WudKM7PehJL3rT
h770oz8DGMggBjOEoQxjOCMYyShG8xd/M4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz3/sIGNbGIzW9jKNrazg53s
Yjd72Ms+9nOAgxziMEc4yjGOc4KTnOJfTnOGs5zjPBe4yCUuc4WrXOM6N7jJ
LW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+Mkv
Ag9/EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJ
SEwSkgb9/xf5D/u6BKY=
          "]]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.010144286630985752`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"k\"", TraditionalForm], 
       FormBox[
       "\"|W[k]-  \\!\\(\\*SubscriptBox[\\(W\\), \\(n\\)]\\)[k] \
\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryI] n \[Theta]\\)] \
\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\)/ \
|W[k]\\!\\(\\*SubscriptBox[\\(|\\), \\(\[Theta]\\)]\\) \"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"W= \\!\\(\\*SuperscriptBox[\\(H\\), \\((0)\\)]\\)(k rs)with 2 \
Fourier components, rs: 0.1\"", TraditionalForm], 
     PlotRange -> {{0, 10.}, {0, 0.010144286630985752`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"Min Distance=0.3- rs\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155148375084*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJyF1nk0VlsbAHAqY+Q1z/NQNCpDk56dzEp5nRdlipAo9JryIi/iuuYhY4lr
iqIUosEckW6kMpdIcaWUKZn6aH3tu9b3z7fXOuesZz1r7XX2fs5+fkfazo3s
sIaBgeHNyrX6TE9bHfdBZXR320kNXRjM6Di7+KAeaLZpTfy6evCxltviL+EW
8PJjp/ja68Nd1YiUh6NtIKEWRYtMMoAty+Lx8pdfgme8hPrhXkPwj0hc2ni2
C+jRdREPdx6Bwhp5bgf/PlBT8vLquWYETRmvWvsfD0Bb6dUFMtcxcOJpT34i
MwS9MizhpJ5j4KqkJXogcBgODv2wySsyhsFknakX3z/C4jfPEO4IMrw265II
ifoHeMkXJonzJqB2bjbDWGMcAtesK3azI2BDV467BvsEaK4VKrW1ogALb9ND
h29fwfTM3YAyC1OgzRTrI4tJuK//IvSbqRm8SmCzu1U/BQ65nq1CR81B9FP3
upKNM2Due9VISes4mCyL7tSOmIUrzXpcCmonwONZxz/nxr6DbIIvJ4e8BQRT
ljYr6f2Audfb9PtJluCfdmXON2ceBC871Sf/sAT71OKjVosLQH+m4LtvwAp2
k3cpvyIvgUrgmXNP66zhZ9OWjLf5y6BetCPz0F82UDyblug/9xNqFQ/88fLA
SchdWU1XDgOK2JtvRbt5EpwaRmL3GDAi3/B2crKALeRPtfY6TDCiON4qx410
WzBlHBuzSFyDWvpc0raO2gJ9/GCtqNpapDTYP1ZgZAcS5S9P5HWtRbdkSRZp
pXaw0yLzwZzPOmSewzS2LHAKqt7mDvALMqFNJ6tSei6cgmoYblksY0JiJ9Tt
FXtOgdpFK99iY2akFu9x9Iu6Pcilk75s/MyMvJioxzcl2UP4avn/YEHd93YG
d321B3tnuY00KVZkl1fesmDgAPckQj8ZV7Iinhfz25NyHOCF9amVHWJDkvdC
tI4tOwBLzxpj3RE29LT9RXKPtSOYR5/ilwxkRxukPygoNzpCo1/oBxXB9ehz
ftW0qfJpMMp1qgu/vR6dtrNgMMw5DZPMnIUiehwowKRan1PUCUpzqFfH3nGg
zbSP7RmpThBDWy0QJ/LufJm0KHoGQiOD8rV4NyALp7BUxbwzkNSpVPW8aAPq
3b7cLafiDA0WSQPJOlxoZss+sy/NzsApWseZ8Y4L3bDR4A075QIH2Fc/OBJi
bl7HOb72LPyUvdV0J4KEJh3itaRunIW2lepwd5PQxT3v78uYnoMb21YPDDfK
0Jw/O8XiCsmSPuTtHtzIJqjTKqHGFaKL26PGa7lR2YxP1E9/N4jvZv+7eQMP
6jjq5i8u5Q65WfK8jy15UDqEGmdfcofHTNI2b2/woC1PA7Q3jLvDNMtSieAP
HhQ3YW5ua3oedly/z+quy4uqbwtEXGk4D/7vTR1HklZi9oreR7uo8PrRq5aA
YV4UzrDXoDGfCrt3rQ4+JB6f2V0m5gHXCuOvjgbxIet6nZK8ZA+YDeZiCGzn
Q7LpMQt3+D0B1RRZzUrwI1chnwc9aZ5Asz5TbnSOH4EGw2cxWS8oPKnNEv6Q
HyWxKiX63fGC5kZkks0mgNxo00UzWt7QH22RlmEmgDoSbPZGvvGGwcqkHt88
AXTf2GXffj8f6NaZ4FWfEkAKFYIlrBIXoE7dSe81EkQCDfapXxsvwJVIBh8i
RhBFeZGnp6i+4KJZmVnWJ4ginr9r4JGngaJlbP3MJiHE8ZyL5Ug/Dfq7QwcE
vYUQj+dAVXaqHwRXXpkVaRBCWbVHR3lP+IPQQjvLTy5hVFZ6MixLKgCyf+23
MDp8hCdVbzwAxArThJwLhZFztL04R9VFiODbKvRtRhhxeJoJfEoIhLGhAe7j
miIone5VN6lGh/18d5myY0QQNT32zlI+HegFOSsnVgRFsdAskoWDYPVtOxVE
0T9PVGoexQTBux/DVfVUUfRnX02/O3MwLN5TSY+tFkUumqJld+nBwPqrv4mh
2EUd7eClYNix0k0UTcVQVGJtvl1QCGRePU0uyRZDC3FME52kS/C7vzP8dzD+
usuh3/H/y/+O/fhu6Q7S/p3P/M3zpJb3O7AXRUxP2sNKlbEXu2uoDtcTdmIv
5tg6TDYH7cJejH8YvsITqIK9EDa5qWEVpYq9uGAsv2d9oRr2gmOQHCP2Wh17
0c2oohFP2oO9eFvarH3GYi/2gu87qSC3fB/2IrSVw/6QpAb2QkH5ka926gHs
xXJirCeFhLAXZTHDzXLdCHtxuia/0C/zIPaCV6FT4ISjJvaisp5Kqt1yCHtx
PMk/uXjyEPZiKmOqQKZSC3sR3t+lKxmg/a8XxooeOQd1sBeZCyNKt5l0sRey
/bxumi262IucySKwitLDXohC6dWfRvrYi5g6hTBFbgPsxbwvy2JvhwH2wsGJ
ssx72RB70RRFin5FHMZeKIzsLhDjP4K98Pd5fnT81RHsRavGi5BDl42wF0J7
D2rJmBzFXmxTi9V7zHoMe2HkrKL68PQx7IXLHtKoV9Mx7EVojozttJwx9iKj
wCVLLcQYe3FX71Pe/kFj7MXyUPft0v1k7EV1p8uiXiIZe/FNNjdycZiMvUh5
GmT1XNkEe1HydB212tcEe7FPbmvLs0cm2Iu9XfN2P+ZNsBdF78+BlgqBvYjT
D7MudiKwFyOsWrUqqQT24q70dfveegJ7MZF42/DaKIG9yLax8qKzUbAXTZdK
BunyFOyF5drCuMz9FOyFfZ9OcL8RBXsxxBFxT92Sgr1oT6FuvWNPwV4o+zOM
6DlRsBfMD3a9X3akYC+OGHPIvDxJwV6wakbkNFIo2AvVqOLTndoU7MXr7d6u
TMoU7MU/W4YryIIU7IVryPdD1XME9iKlSN5StIfAXiRKD+trPCKwF7ZDOznl
sgnsBeMEd35bBIG98NBdmcSbwF5UfKKbe9kT2IvnfSSqG4XAXlQIKttu0yew
F9TMQfm7QGAvflJlaud3E9gL64Sp7ayqBPYibonw6t1FYC8ul+nEnV/J//bC
paKZ/vceAnvBy9yn8wUR2IuYrIChlwYE9qI3rMTkohmBvZiv9Ej/7EhgL8bU
ntyT9iWwF7cYbhaIxBDYCy0BSffuPAJ7UeQjy2lRS2AvPspVBma/IbAX0+Jv
ntxaIrAXHXYJHwKlKNiL4Kmubn4dCvaiuujwrfIrFOyFoUssNdfIFI4JW7t1
TIghhe1Z8kPWZqB/vaIwVkMckecuPnF9Zg6hOp6Mo5Hi6FnTZnODlBPA/D3R
u69XHCWl53d51lhCa6UAm7OSBCrxmND+omUDryMXKxNpEohDMcS4j9cWZNy1
w8xbJdBoutf3jyv/n+UO39wrxSSRM1cbX3qwPcSdZfAtdZVEqWGxhdOBjlB0
iXpNv24lz1BRPnvTCdb/Wo8UEgnQ3pPF7ALW0zVZsipSSHNxr8q32HNApEfb
mFlLIbYaw5fTsu7wqZmjuDt8JR+0tVkr5Two0DX+vF4qhToe118YlfaAdbWS
0w1vpVD5n+s/DDR4Qkh46eet7NJovI2Fc3OAN+T2zHl9UJVG3ikVX1uOXACn
0omoMVtpRLwTiXukSoM2/tSdGjHSKPyG8qc1qv7QzTDp+OaBNOKcXWDMMLwI
wZ5Liq0j0shjcL9z4346vHB/4MfML4MiwinKjjZBUDuzyTJWUwYZftXtLIkO
BptnJisVkEGPG8cD3z8Mgf/1d21jAI3aJYbjglD2O7cjZXD8H0BtK/o=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 97, 98, 99, 220, 94, 93, 92, 91, 90, 89, 88, 87, 
            86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 
            70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 
            54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
            38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
            22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5,
             4, 3, 2}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{100, 95, 96, 219, 221, 218, 217, 216, 215, 214, 213, 
            212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 
            199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 
            186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 
            173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
            160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 
            147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 
            134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 
            121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 
            108, 107, 106, 105, 104, 103, 102, 
            101}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 220}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
          112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
          125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
          138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
          151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
          164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
          177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
          190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 
          203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 
          216, 217, 218, 221}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.01}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Freq. k\"", TraditionalForm], 
       FormBox["\"Error\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Check ||Boundary[k]|| / ||IncidentWave[k]|| for up to 3 \
scatterers\"", TraditionalForm], PlotRange -> {{0, 10.}, {0, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X={-0.3, 0.4}\"", "\"X={0., 0.4}\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.719155149939767*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mesh Size:\"\>", "\[InvisibleSpace]", "0.04051197395242888`"}],
  
  SequenceForm["Mesh Size:", 0.04051197395242888],
  Editable->False]], "Print",
 CellChangeTimes->{3.719155162032897*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.7191551622459307`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.719155162249201*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.7063996744053609`\\\"}], \\\",\\\", \
\\\"0.7063996744053609`\\\"}], \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.71915516225356*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.719155162256112*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
YX1Yn38A9P5YlQ==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmnWcVfXzxu85iIBSS4jE0t0lS5eEdIPEslJKh7SgS/fSLiUlILHg0h0S
stJKi4UCItiKhX71N8/v876ve/6Y1/nMM8/MZ87Mc++yqwV6Dmk72A+FQo1S
h0Kp7JnH7DmzKiHn+2DhWDRP4bnBhT1hltcsNedofJ0LmRU2e4oc5Xpm+eCL
9yRnYQXM0pqlAc/PuSC44unwC3EuRP1SZlFmJcnNR346cgviF6Cm+nqa3Mxm
mcxKmBU1K2aWgWdGzumJZWBGrcxamxWHU4z55GaORahfmNwi5GckJxN1YphZ
VeYRQ7wEnBjwaN4tin7zkVON+k9zRx7qRsMrQV4V+o0hNy/5wtqAZzXLYlba
rAazqs5sSxOrDq5ZljHLRl5WOMKeMStnVp67qsEvSN2anAvgFwQrRL2yZtl5
luNcm1nWwgrDr0ZP+eFnC/SQnfwo3iELPeUgrp3VY951zOqyoyL4ReFWMHuW
Z0XO9chXTk6wiuTWJr8C+eXhFaNmTriVzCqb5eKsml3N6rOXfmb98YsHeq3P
Xoswh9rk56K2di0NtmKutZiV8p4nt53ZQLNBIacP4Q2wUmDShTQSw5zbktcQ
TgPwqsRqss8O+FWpUYqc0uS3Z2cd4Lcn3ghOe3BxGrPXMtRXTkezF8Ab00M7
+GWo05hzafyy5EgPnc26sBNhTUIRvZbDr8k9mt2LzLgTe60N1pQdlydWG34d
4rqnGRxxh5uN4O46xOvCaR6KaKIifld23oUazYh15L5axOpRpxJ5LdhfCfYq
vzJxnVviSw/d4EhnA9hXN2K6vzWxNuxb3Fg4sfhxZi8xZ/GlO2lX+mpL3QGc
27CrtsS7h9zuG1CnIZh0OTjktNAOvz29TDabQk5soEYcPajvkfTYGEz9DWMv
nZjhELOhnDvg9wg5TSivJ+ce8IaR+wKxJuR0oNfG3NODmkPhi9sLflPOvc1e
pZ9h+M2IdwZXvA94b+7owByaUq8XfHGHw1VOc3Bh0shVs4NmV0JOg13BpYeX
zV5hZl2Jy29JXOe++OLMMxvF3EebjYHXnFrazUqzVeyrHzvrT2wAuxnF/kZR
R+dpIaeLqdhA+HN4x9nwu9FLd/JGU3sqfPUUR3woe5ppNt1sBrMchD8Y7lj2
p+drnGeSO4O9vkRsEL1Ohx/HnTPgD4Yv7jiz8SGng3H0o7qzwMazx6Fgw8Be
Bx/EHKaR35Pas5jHMM7rzNaHnFZ6kf8mtZQ3nBlqlvEhp5M3wIUlgMWzx+Fg
I3jO5TyfHcwjvw93Km9CKKKnl/Enhpx+XqHGSOoofzP1pJV9ZvvZo/Sykrqv
c888cudScxJ1Z/New+hL9Uazm7XsZA3zW43pPJWdibuAs54LyV1D/kJ2PIY+
V5M7H374rmnkLIK/kPPikNOBar1NP+PAFoPNDOCL2dsU7ptKvUXkrIOvvFmc
hSWya+UuNVtitgN8SWCOr+Mrdz3z28x8N5m9E3J62IA/j5lvAJ9N3gbO47kj
XH8J9yfAV72N1FKdZWbLQxFtTMBPgBfer7AV1IqndkKgXjy1JsCbRJ7mnmS2
NeT09JHZZWYpTe2D/xY5W9jlZvgH2PF8Ygt4JnEW7yTYKnJWc++CwN2LwLR3
ffce4rwG/yDnA3C3hdzuD4Crpj5b+hw1J76I2st4/6XUPRxyeliLr7N08K5Z
MpYIJu46ONrjEbOjZtvhJIOvI7aRmb+Hv44aieQsIf9YyGniPfjHiO+Acwxc
nJ28w1LqK+c4/S2m7/XU3QBvB3m7yN1JzomQ09YpdnKS/Uo/u/E3wzvBeRM1
dsHbE3J6WAG2G3wbvSwmthuu/s0X/nm+kT42EdtLrS30JD1II9JdWItX2LPi
74cimknCV8+fERf/W7PvqHOZ3Bv2C/VRsyO+q3cQ/DR9q94hcP38TwE/DS7s
GlgK76l532RXwj4AF+86e08GU+xGyGniOnYEzhl2n0zNG9RNJu8M+BFi4p5l
x4e47zDYdvjK/5jeNIvUnv2u77l5fMSMboWclsSTPs6Zncd2gX0M5xh7U84n
xHaQI+4F9n0cfpj3acjp6Dj+CbgX4X/G/j7FTsLZQ/wiZz0vwf/D7HPe9xx9
KLYXrs4f4l+gv/PknKLGXbN75F9mRlfgfBFyuhL2PfhpMMV+Yg/XwYXdNvsh
5HTyPX4K8WvEfuR8FV/xL9nxj9S9DpZCjWvErrNXcb/ijqv09iWYYj/Tm2rd
N/uG2Z3i3fQON+H9whw0xzs87zKTm9QJ834NOS2EeWeY6TnmeBOeOI9Cbv+/
YrfAz8P9OuS0IN5vnG/hf83OztP/BTDxfg85jZzhfe8Qv887fgJPnEtgev8/
2Pnv2GdwhEfZZ+JPez4wexhyunnAUzX0mclnlh/e5+RJG/oM6XP1I/tM67mc
b6ghrnK+oE4az+1NPPHTUPMvOGnAxXnMXm+zf+WkM/sb/DE9POlF9PYX+G3q
/QX3b+aV3rgZPLcTYf8E5vgVvu7SPdLP057b/1Oe2+3PYP9DJ3eICf+J/Suu
e/6FI25R84tx9y/0oR7E+S+giXv4GT2nBfHvwrtHX0/RWwY4v5KrvP//g6nn
9BDWjGpl8tz5UcDP7DktCM/EWXme5/anp885iz2zem6eyvsDHT1g1+I94JkK
e0hc+irluRrSUDWz6nwXp0Zb4j9BThY0EQW/ALqJ4t7MxLPQz5PwxPF4d83g
MfvPSo20cLKhocfMs6BZIbSVFj87nGz4aanxmHrhGuJJM8ovzG60q2c9t490
1H4KzYj7DNynA7iwHGZFwAvj/4t+0oMXobdnuDc9mPT1LHzl6XenCSH379v0
xKWX581izRqYFfecFophGeGE6D0nZz1zscOGZqXRT0Zq5GLu4ubmHMZyo6ES
ZiXRnLA8XkQrPn4meJm5K4qcVMSj4RQP1IuCH41+UjE3zae8WR3mUxuNSGvS
XxbeQ7uUFmuw39LESsGvDq5nO7P2ZjXRRA34ZahTA7wA+hBeFssOVgiOapQD
LwsurBZYOd6hEFhh3jEv71mLdyoMtzz8bPRShngRODFmVckvylzqci6CX8Fz
GtL8KnIWJs00YN5FyStGXLycPCt5Ea3kxK/PvuqBC6uM5QarB6cYe63Pnc/B
qcyd9QKc4vByw5M+XmAWZXmH8vQfTbwK71GKd4kG02wagjfAz0v8OTh52P0g
s8Hw48waeU4b0lQ7/NJe5HPSiF1UJ78GWGNwYR3Ay4I1BqsJXoJ5qOeO4B3g
N+a9axHrxLkmfhNmEuYoXhu8KTMS9iJ4BbCmYHXAO3MW1o3Zd6V2k8CsldcM
qwimZ3N2X5c6qteFGvWIt/Ai+qiE35W76pEbzqvLM5xbkTsrk9fSrI3nNB/D
/OrTeyv22hJcWCxYK/Ydxw67g7UGjwUL66QKse7whetzIf3rO1R1xpq9RD9t
6Ukamm42Aw1IO4Oo2RpuS3qqTH4jL6K5l9i96gzxnB7a43cg3gOO4h3BXwDv
aTYUfAh+E+JdmPNws17ginciZxhYL/Yt/1XPaaMT/ovsQ/He1OoMrxdYU/zO
8Puwy2bU6ch9zeD3oTfVGkGvjXmfl8ntQ2yk57Qj/BUvookW+KPY+0isG/zm
5LTgrhHgLcnri7UC0+/M+n1Cv+PEUne0WT84ffHHeE4jsfhhXfVj33r25zyW
PY+B3426bYj3JxZHnTZgA7C2YFPNppkNNHvNc5oIa/E15ia9SHdhLc70nB4U
HxfgzADXbmezN2Frzd72nD56kDOLvc2EP4ucnsTHgw8lJj28zo7Fm0N9zWQy
7zYT/hC4vagznnNP8DeoM5+ZzTOLZ6dhbSSYzcV/g7jw4cTEncC+J+DHw+9N
zhz4r1JL94ykzlzO8+hB577Um8hZz0me04J6XcB5FH4C9efQw0TyJzGXvpyF
r2BO/cCWgym2iJ0vxHSWdgYw1ymc9ZReVput8Zxu5A8kvo5dzeSuKeSP5Q7p
RTo4ZHaY8zr4i4mLN4PYTHYnPbxptp7665jDAvoUX9pcS503yVnA+4yhjvBE
Zr/RbJPn9LCEfW0we4d5LiEm/mxic9ixuEvhLMVPhD8e/iz63cie3sESqDOX
s+LL2F88e5kApv42e04jc/HnUX89PcXTQ7jGcna6xXMa2YzNJ3ef2Uqzvcxn
PtyV7OwtcGFJ7GEtO5sMT3t9l1lvg7eVWb8FbxK2IlAzCc429qwcaSmso0XE
VFf6uGZ23eyA2UHPaW4xd79JL6u8iC6n4E/luZo6RzynGc3rGHtIpEay2VHm
eYTaycSOgCt3O/tOxJLBNsA5yqwOB+46yn07yN3OeWdgZ0vxj3tOC+/B3RHg
KL6LWu/Rfynffgcxi/IdthF8K3NcSM5yL6Il3XGCs57SxW6zPexJ2Enwt8D2
gG0BP8VZWAr7Os09uwP7Vt5ebCWYnvvYTRJ1VO99amwlvj+wv1X4u7ljF7nh
vCSeW6mxjbM0s4YaN9iF9ik9/Wj2E7uSrqWzD9h9Cjn7qXGd/CPUToG3iZkf
x1e+NKHvMGlU3z9XzK56TruKn/EiutH5rNlNeruBv4P4MXDFz4Gfpefr9LOd
emfgi/ux2ROmiWizvL7LU/5OOIpLL5/Q+y3sOPguuOc563mBGX9u9oXndHKc
GhfYjbgXOYexi+jgU7PPPKcZYZe8iD724J+Ad5J7TpGzl/iHcD4J1DsFX7F9
cM8yjztmvzCTn4l/xF7f5z1Og10GF3Yb/ADYZTj7uOcAmHb7pef0cBv/IPHv
zX5g9ynwPmBv0pr09xWYYtJiOtvVU77DvuIdrhO7Qc+nmM1PvNMNuHfg3+a+
08RvwvmCvD/Zv+byK+eb+Hc9pxPN7x5nYb+b/cG8PybvFnHxzvP82oto5Tz+
b+zrEbiw+9hFsEdwbrHX37jzGzj3ufNRgPMJvIvwLjHHv5nHWWZyl50p/oD3
+Jx3+RDsIXP5nPhD9v0htR+Q/y34Q+apnL/AFLuM/5g9fIEf1obi39Hjl/C+
BbuM/yV86ecqeZ8yj8/wvyOexrSS1nc6O8fM9bmVhgqZFTb7h3nozp+ISRfC
/8eMhD0NfhdMMWHShfD0nIVl8t3sM/qu9j+BWSvvX+wemJ7/sXvt8RfqZfBd
jUfE9T/yhvXxNX5qsyd9986/BvJ0zhDIvcedGelNuL4Dv2Vfvu926fGU/4C5
iq93yszP0j+IpwpwMoPfpy/V+T2Q9xCdpOJnsrShWtq//KxwFH8C/E9i6jE1
7yheNt9pIdzrfWr9iT5TkxOukxX+92hD89Ku9R2j75TvwdJgP8DVPX+juwJ2
LoieNNeiZsX4PkqHnsTNjqae4Rn0tXtprgh6EpbDj2hCzxzULAxH96Qn51/i
zxKvZVabWHr4iv1Hvez0lI2e01NP8Zy+21MG3kO6EJbLj+wvhF8CTReHo/xn
yStObnE4GclVXm7ffR/qO0k/N+X7xDPDLwGWBz2V9N2/26LAfOpkJhaFPsSN
Bi9BLA+YYqXRmWrd4b8X6O//+nmfmhobzeaaJYDl850OypiVRWf5iOVFo2XA
08DNDyc/vvZRh51kpQf1Us53+yiLZadOdmLSgjSWltqq08nsRbPyxMO88uim
Cu/8HDn5qSFtFEIfNcxq+k67hf2IXnKzo8q+22UFs4pYTjC9R1H42nVds3pm
leBUBC9KrDx1cuAXpUZOcnKRX993enme3dUnXhlOffDivFse+i1JTgP6y8F9
xahbHF5l8lqYtcQvSc3n4XblHu1Vmokxa8SuGjLbGGINwaWlquw7LxYDprlX
Z94l6VH8MtRtzLk0fhmwstSrxv6qUUfnJuz8Bawc/Ab0VAp+vkAP+cnPwztE
01NB4s2ZtXbXlJ014dmUeUoj0k5Yf53Zo+LNApwXwTuYdfSdzoQNM3uVOyqQ
08V3mujM/Luwg4rEm4PXJVaJ/VWG1419lQv02xl+HbiVqPMcedp9LDtXfnf8
0cwwFqwBHPmtmJtqtGO+bc1ag7cCa8ecqxCLIaclnG7UrM8dceysKtw2nNtQ
X1p4yawH50b4bbmvKrGevtNCA+o25P421I0jtyF1esDXPoYzs17MsCfWBE4N
3qk95/bsdojZUHbcgT3XoOZssznMoz35TbhDepEepKNhnF+lh95mfQK7b4bf
m7xe9NsFflNizXi+AX8EnOHMqxEzaE78ZawF2EizUeynK3434q+wPz37cpZW
YslpBdaXvWjmA+C34J5R8LvBF7efWX/21I+9qe4YsP7U6g4WBzYAvCvvOIL8
1tQWdyz813j/sfSm3IHsazA77AFH3EHsbCDPQexvLJw4+ON8p5Ee5I2jnxHM
Tv54ONKbdFQ2ULctPbQP9BHW0Xj2rNyZZrN8pzPpaYPZO77Ti7Qzmx4HU+t1
csM15EsX+pmr71h9v74Bppj+9qq/wepv+nPpPwHTeTj7k2biOes5gfdUzjz8
V4hPZk/9uCue/JHUVM5E+BM4T/KdJlRrvu/00g9sEtjoAD6JexJ5j/HUm0jO
AvjzuXceuWOILTSbzuymgS9kz1PMpvpOK8IWgQ8Emwr2GvhizouoM5o7+lMr
rLmp3DWNewfynM7+xlFH9d7k3cYTn+FHdDIYfwp3TCY3nDeO53iewt81W8Ks
EsGFJftOT8fM3vOdxqSpDXCXsMOlPJfA178REwKxeGa/gt2sM1vvO+3OIScB
7jI/oiGdl5tt8p0uNuJPJD4PfBO1JxLX52Io85hAvWXwxd1MbAZc+Vt8p4dV
ZqvZxxZ2NZ85vmW20iwJfAv+FOILwZM467mVezcH6kyi1ipywzVW+REdTKWP
hdRYxE60r21wFF+DTQdbQe1J5G0jdxu5Oq+FH85byyzOmu0w285chL0NtgR8
LZhiJ5jncWLiJOJvYl8z4Wvn0lUynGRyEonNgistSF9hzR2nzk6zXX5EE8vw
34EX1oaw3b77/4z1/xuvpy+9w1JsJ/m7mddyZvW+2WmzPeDh+B5mupn30nuf
NDvlOw0ovjfAOQmueknwNgfyVsLdSywJ/lbOytvvOz3s47mffa8kbx/80+w2
zFNc3//6XA0nngJnJ++/g3oH/IiGVuNrLx+YneH8Lv5Bdi/uIc4H4Z31I9o4
xL7Pm11gH2uofZCaZ+CLe9iP6OMweztHj2fx1xM/zzuc43me+in0uQ3e29Ta
EeDuhqueLrIzYVfpQ71dMvswMN+9+Pt4fkROuMZl5vgR9S6R8wH9pBDbTw3t
JIG9XCInXOcKM7pGP1fp6Uqgx2uBGel5nbOeN7jncmDWB8i/Bkc5R+HeNPs/
UP2j4Q==
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJx923c4Vv//wPFKaUklGjIilFLRUCGnUkaotEiUhgaKoqVBUkqEhhEiRRHS
sJMSsjKz97q558lIkvG7r+v3e72O6zqffv74Pq7P8zrfezgv7/c5N8kcsd1l
OW7MmDFV/P8RGANfP4nYHavHnBRqQ6Ef1ZQ5ESnYjEK3nxT+p3N5PQpd6Ufz
6V3nqlDo1mUJx7Mvl6PQ/edfcnHaWIZCL2mZMM82tgSFHhlipBeiU4JCX58V
ImCiV4pCP1W8b7yyyg8UelLUYOEBlwoUup5CUIfLsRoUusprMbel1xpQ6NPD
rlTHb29GoacMHa6IuNqKQq9PcjetTmlHoc81WOTp2NyBQpeZma7waYSJQr+x
y/z1zl1sFLpi7ZEDGsUcFLrbqm03Z2jzUHxfCYNSggUkKsabPfFmIElEdb2e
EPSGxOPGOTj8qfEiiSIz72+6EVSveuJ/NtKQJJquNJnuOUv16NmvNmZ+5hHu
l26PCR5DddDuWIqyhE0dCj3K4/K0++crUOhkatu2mgUlKHTR54xnfoG5KHSh
tOWFPnaZKPTA4hlTN65IR6FHJKsP6S1PRaE/9JX++W5MOgrdsSc7P7A5A4Vu
423ckhn6DYW+adKLPLXkQhR6wP60HYleZSh07zDX8Uf/VqLQzRrneeZ11KHQ
Px3J0M6Z2oxC7yn1Pl8a14pC97vv/UyRYKDQtY/VMQ96dqLQFw+w3+Q2s1Cc
n2WdO3qvcFDo5jv29iTbcFHokyd0fZthz0Oh56jLXHcPJtHDUrL738eRRMfb
G45en6n5mdDE7PRzJYliA95u7WCqd+waa/9+L0ncPn8iI+Mifd4i9tV6Pawu
RqGHOo3crpyYjUK/fdaUPTw1AYVuXa3jnb4qBI39tKRPzgmej/oqjTtx1HqQ
S+si738rfgji0fry6mdPCm/QHweeN7/haqL8WB8Uut3jn3ojq9+j0I0Dpdk7
LTNQ6CsGp+TLTPqOQu9c1CV7dsMPFPpC+czt7Ok1KPQMz9ojZR8aUegHnY/n
mQS2oNDfbm8Oy5FsR6FPXaYoMf1yBwo94K6Gs1cBE4Vu4un/kYhlo9BzZewF
3J9yUeiiT8RmOZ3kodBlOXqNKtNI9HC3vXPgAEk4H+gLePOXmp9C60HdBVYk
MXXhUNm8O1RPfVQ/61k8SeRqva1zzqTPW21rpZiySRI6Q1j8wlQ2/fxuvJI0
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
VaDQjyX6nNAJbUKhmwWMM2/TaUehB1ZXXWtwY6LQ+5xLdnTy9y0Qelhxm3PK
cRKd+npfmN4h/vXJnUvzzzhR37cn3iuzNq8lCd1pGcEnD9HP7+QvF1w2sklU
8nOnj68tSWxbleJwyYN+/IN5jjV2HBKF/mPKfAOxQB4KfXjzywJz/vUWCL0q
5OHpJP5cgnF5EmpX+OvOZ/Vtf3MY1OOWryYUI4dJYuZv/xTuMNVVGaUSlq9I
ot/1/DVWMtUZ9R15lfz9U1r/dnnjV6pLNCaaRPDncLZB9qxbo+awINBlzvhA
/s+P3prLqqN+T1GxhRfk7UBfxwTzV/OUrtGvu0RTejT9XtPvE6NrvQTVff+9
Dy4v1zIJi/yKQs+tDfjbb1GBQtdKWLJhz/VmFPqHmxsrgqZ2oNCJlT/iwwU5
qMf8vMet9fz3e/XMzIS2Ud/PvulVRfzr6/5MoSZiOzVndhlfHsU9YBM9YwNn
mJ6n1qmfEYNLk9JYxCLpvI9/8qh1bdGgtVAR/75QWnnhBqKb6rOvz+pNieQQ
Iv7TvR/voR7fV8CuKId/Hl8XeRBqKfR5qwk045rx9x0Qeo+x4vW03TwU+nx7
6fiCN1wU+vkW7bOGAST6m+NTdHUTf47THIT8TtCfN9LN2G3SCIkmzJRzPPuI
f7xDwuHeSOp495Qkldc3+D93ywdMySej9vdNGivE+ft79mplj9g0qr8SKLUt
qOXf354S7pncSnWHMb0xPZL0zyvGmT2UX/GAfj2fdCBJxizw35+vPnxyPMrh
eioK/fGsX0Y6wj9Q6J+Pbz9jWN6EQs/U7p0zcXcHCj2koC1uvC4XffXYas61
YC6xoIG31W8OdT4MJk2OdfViEnZloV2q1dR9nXbYfuPdszqI8fE60ZvrqOut
gvHGAm2SDMIueGsQcw7Vv4UFp85dySBCOrflzlpM9UPJxhwnow6CsUz758g0
at2slRmbFjmPRVy98WQoRWfUvmuWZRmym0totAa7OtVxaed9vPBY9SffSDTP
VtB1Jf++T11hQvH9GvqcOMqGdLH4x4EfTmpIvLxFEubcXD3pp9TxFrsEn/qt
IomOTev0L5tRfe5dEf+0bP7/X+28tkop1duqmqYb8X8uJHXE7WtGrW+T5BRU
3jmSRCjT1fTAY6q78ILPS/GPWyOv76P/jepnFwQWHkslifvvxc5J5o56PTcf
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
       "]], {
      GrayLevel[0.5], 
      DiskBox[{-0.3, 0.4}, 0.1], 
      DiskBox[{0., 0.4}, 0.1]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient"}, PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Wave Amplitude\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
                  
                  "], {{-110, 
                    Rational[-15, 2]}, {110, 
                    Rational[15, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{110, 
                    Rational[-15, 2]}, {-110, 
                    Rational[-15, 2]}, {-110, 
                    Rational[15, 2]}, {110, 
                    Rational[15, 2]}, {110, 
                    Rational[-15, 2]}}, {{
                    110, -7.5}, {-110, -7.5}, {-110, 7.5}, {110, 7.5}, {
                    110, -7.5}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{-109.99999999999999`, -7.5}, {
                    109.99999999999999`, -7.5}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{-83.65019011406844, -7.5}, 
                    
                    Offset[{
                    0, -4.}, {-83.65019011406844, -7.5}]}, \
{{-41.82509505703422, -7.5}, 
                    Offset[{0, -4.}, {-41.82509505703422, -7.5}]}, {{
                    0., -7.5}, 
                    Offset[{0, -4.}, {0., -7.5}]}, {{41.82509505703422, -7.5}, 
                    Offset[{0, -4.}, {41.82509505703422, -7.5}]}, {{
                    83.65019011406844, -7.5}, 
                    Offset[{0, -4.}, {83.65019011406844, -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-108.74524714828897`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-108.74524714828897`, -7.5}]}, \
{{-100.38022813688211`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-100.38022813688211`, -7.5}]}, \
{{-92.01520912547528, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-92.01520912547528, -7.5}]}, \
{{-75.2851711026616, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-75.2851711026616, -7.5}]}, \
{{-66.92015209125475, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-66.92015209125475, -7.5}]}, \
{{-58.55513307984791, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-58.55513307984791, -7.5}]}, \
{{-50.190114068441055`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-50.190114068441055`, -7.5}]}, \
{{-33.460076045627375`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-33.460076045627375`, -7.5}]}, \
{{-25.095057034220527`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-25.095057034220527`, -7.5}]}, \
{{-16.730038022813687`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-16.730038022813687`, -7.5}]}, \
{{-8.365019011406844, -7.5}, 
                    Offset[{0., -2.5}, {-8.365019011406844, -7.5}]}, {{
                    8.365019011406844, -7.5}, 
                    Offset[{0., -2.5}, {8.365019011406844, -7.5}]}, {{
                    16.730038022813687`, -7.5}, 
                    Offset[{0., -2.5}, {16.730038022813687`, -7.5}]}, {{
                    25.095057034220527`, -7.5}, 
                    Offset[{0., -2.5}, {25.095057034220527`, -7.5}]}, {{
                    33.460076045627375`, -7.5}, 
                    Offset[{0., -2.5}, {33.460076045627375`, -7.5}]}, {{
                    50.190114068441055`, -7.5}, 
                    Offset[{0., -2.5}, {50.190114068441055`, -7.5}]}, {{
                    58.55513307984791, -7.5}, 
                    Offset[{0., -2.5}, {58.55513307984791, -7.5}]}, {{
                    66.92015209125475, -7.5}, 
                    Offset[{0., -2.5}, {66.92015209125475, -7.5}]}, {{
                    75.2851711026616, -7.5}, 
                    Offset[{0., -2.5}, {75.2851711026616, -7.5}]}, {{
                    92.01520912547528, -7.5}, 
                    Offset[{0., -2.5}, {92.01520912547528, -7.5}]}, {{
                    100.38022813688211`, -7.5}, 
                    Offset[{0., -2.5}, {100.38022813688211`, -7.5}]}, {{
                    108.74524714828897`, -7.5}, 
                    Offset[{0., -2.5}, {108.74524714828897`, -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.2\"", -0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-83.65019011406844, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.1\"", -0.1, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {-41.82509505703422, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{0., -7.}, {0., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["0.1`", TraditionalForm], 
                    Offset[{0., -7.}, {41.82509505703422, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{0., -7.}, {83.65019011406844, -7.5}], {0., 1.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {220, Automatic}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 
                 RowBox[{
                  "MultipleScattering2D`Private`CoolColor$656075", "[", "#1", 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.2631115243798812`"}], ",", 
                   "0.2631115243798812`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Wave Amplitude\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.719154241395956*^9, {3.719154374891624*^9, 3.7191544503098297`*^9}, 
   3.719154778809744*^9, 3.71915516446233*^9}],

Cell[BoxData["\<\"/home/art/Software/Dropbox (The University of \
Manchester)/study/Scattering/ScatterCylinder/v3/examples/TwoBodyScattering.\
gif\"\>"], "Output",
 CellChangeTimes->{
  3.719154241395956*^9, {3.719154374891624*^9, 3.7191544503098297`*^9}, 
   3.719154778809744*^9, 3.719155173417369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.719153324312702*^9, 3.719153354259273*^9}, {
  3.7191536966430893`*^9, 3.7191537419352903`*^9}, {3.7191541638937387`*^9, 
  3.719154164741725*^9}, {3.719154207302587*^9, 3.719154232641769*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"\<\"RangeTime\"\>", ",", 
   RowBox[{"\<\"RangeTime\"\>", "/.", "\[VeryThinSpace]", "options"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.719154165345069*^9, {3.7191542135825768`*^9, 3.719154229457366*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 671, 16, 107, "Input"],
Cell[1254, 40, 149, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1440, 47, 194, 4, 77, "Input"],
Cell[1637, 53, 1234, 22, 167, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2908, 80, 312, 4, 99, "Chapter"],
Cell[CellGroupData[{
Cell[3245, 88, 8157, 174, 834, "Input"],
Cell[11405, 264, 18500, 352, 346, "Print"],
Cell[29908, 618, 600, 14, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30545, 637, 6571, 132, 504, "Input"],
Cell[37119, 771, 83997, 1467, 581, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121153, 2243, 3956, 108, 715, "Input"],
Cell[CellGroupData[{
Cell[125134, 2355, 493, 10, 34, "Print"],
Cell[125630, 2367, 19722, 384, 344, "Print"],
Cell[145355, 2753, 329, 7, 37, "Print"],
Cell[145687, 2762, 16958, 298, 326, "Print"],
Cell[162648, 3062, 18267, 348, 346, "Print"],
Cell[180918, 3412, 238, 6, 34, "Print"]
}, Open  ]],
Cell[181171, 3421, 701, 14, 34, "Message"],
Cell[181875, 3437, 699, 14, 34, "Message"],
Cell[182577, 3453, 698, 14, 34, "Message"],
Cell[183278, 3469, 577, 12, 34, "Message"],
Cell[183858, 3483, 35292, 651, 708, "Output"],
Cell[219153, 4136, 304, 5, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219494, 4146, 242, 3, 46, "Input"],
Cell[219739, 4151, 284, 6, 68, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

