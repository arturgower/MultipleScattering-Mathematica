(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     36434,        768]
NotebookOptionsPosition[     35669,        737]
NotebookOutlinePosition[     36037,        753]
CellTagsIndexPosition[     35994,        750]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../src/MultipleScattering2D.wl\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.657564556082711*^9, 3.657564611984274*^9}, {
   3.6575646850138617`*^9, 3.6575646905580387`*^9}, {3.657613492518444*^9, 
   3.657613497817046*^9}, {3.657613799936798*^9, 3.657613804151009*^9}, {
   3.65762094721078*^9, 3.657620960124037*^9}, {3.657621015420067*^9, 
   3.6576210197153673`*^9}, {3.657621625541939*^9, 3.657621629037225*^9}, {
   3.657621681670456*^9, 3.6576216958040752`*^9}, {3.657621886589589*^9, 
   3.657621913597157*^9}, 3.657621948121385*^9, {3.657622025255474*^9, 
   3.657622065833857*^9}, {3.6576228129041643`*^9, 3.6576228180652847`*^9}, {
   3.6576237253490753`*^9, 3.657623727860446*^9}, {3.6576238791888514`*^9, 
   3.657623879632429*^9}, {3.657623932536004*^9, 3.657623956016858*^9}, {
   3.657624524761847*^9, 3.6576245264711723`*^9}, {3.657626253048098*^9, 
   3.657626302074377*^9}, {3.657628913391755*^9, 3.6576289246541023`*^9}, {
   3.6576290106661997`*^9, 3.65762903047983*^9}, {3.657629104792798*^9, 
   3.657629105826082*^9}, {3.657629144337721*^9, 3.657629176368065*^9}, 
   3.657629604833003*^9, {3.6576297567876053`*^9, 3.657629770304974*^9}, {
   3.657630023866562*^9, 3.657630024201427*^9}, 3.6576309005906353`*^9, {
   3.657631194272128*^9, 3.657631194502781*^9}, {3.6576312843652163`*^9, 
   3.657631309782547*^9}, 3.657703231951659*^9, {3.6577068523289623`*^9, 
   3.657706852775579*^9}, {3.657708432868101*^9, 3.6577084371302013`*^9}, {
   3.657709860232398*^9, 3.6577099117236032`*^9}, 3.657710089591283*^9, {
   3.657805531419079*^9, 3.6578055315708323`*^9}, {3.65804774164784*^9, 
   3.6580477425797977`*^9}, {3.662882635214798*^9, 3.662882635452155*^9}, {
   3.6630696078985653`*^9, 3.66306960839177*^9}, {3.663332840117427*^9, 
   3.663332846766214*^9}, 3.6639575966686773`*^9, 3.7191249416795464`*^9, {
   3.7191291941255903`*^9, 3.7191291948680973`*^9}, {3.719130461871353*^9, 
   3.7191304621689987`*^9}, {3.71913124086825*^9, 3.719131241853313*^9}, 
   3.719141236296077*^9}],

Cell[CellGroupData[{

Cell["Impulse in time from receiver", "Section",
 CellChangeTimes->{{3.657564556082711*^9, 3.657564611984274*^9}, {
   3.6575646850138617`*^9, 3.6575646905580387`*^9}, {3.657613492518444*^9, 
   3.657613497817046*^9}, {3.657613799936798*^9, 3.657613804151009*^9}, {
   3.65762094721078*^9, 3.657620960124037*^9}, {3.657621015420067*^9, 
   3.6576210197153673`*^9}, {3.657621625541939*^9, 3.657621629037225*^9}, {
   3.657621681670456*^9, 3.6576216958040752`*^9}, {3.657621886589589*^9, 
   3.657621913597157*^9}, 3.657621948121385*^9, {3.657622025255474*^9, 
   3.657622065833857*^9}, {3.6576228129041643`*^9, 3.6576228180652847`*^9}, {
   3.6576237253490753`*^9, 3.657623727860446*^9}, {3.6576238791888514`*^9, 
   3.657623879632429*^9}, {3.657623932536004*^9, 3.657623956016858*^9}, {
   3.657624524761847*^9, 3.6576245264711723`*^9}, {3.657626253048098*^9, 
   3.657626302074377*^9}, {3.657628913391755*^9, 3.6576289246541023`*^9}, {
   3.6576290106661997`*^9, 3.65762903047983*^9}, {3.657629104792798*^9, 
   3.657629105826082*^9}, {3.657629144337721*^9, 3.657629176368065*^9}, 
   3.657629604833003*^9, {3.6576297567876053`*^9, 3.657629770304974*^9}, {
   3.657630023866562*^9, 3.657630024201427*^9}, 3.6576309005906353`*^9, {
   3.657631194272128*^9, 3.657631194502781*^9}, {3.6576312843652163`*^9, 
   3.657631309782547*^9}, 3.657703231951659*^9, {3.6577068523289623`*^9, 
   3.657706852775579*^9}, {3.657708432868101*^9, 3.6577084371302013`*^9}, {
   3.657709860232398*^9, 3.6577099117236032`*^9}, 3.657710089591283*^9, {
   3.657805531419079*^9, 3.6578055315708323`*^9}, {3.6580477360929537`*^9, 
   3.658047737715549*^9}, {3.658129453633456*^9, 3.658129460295076*^9}, {
   3.719125349105253*^9, 3.7191253567887278`*^9}, {3.7191262847845097`*^9, 
   3.719126291180995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
    "Do", " ", "a", " ", "convolution", " ", "test", " ", "before", " ", 
     "changing", " ", "the", " ", "impulse", " ", "function"}], ";"}], 
   "Subsubsection"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"max\[Omega]", "=", "20."}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"N\[Omega]", "=", " ", "21"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"         ", 
  RowBox[{
   RowBox[{"rng\[Omega]Fourier", "=", " ", 
    RowBox[{"rng\[Omega]FourierOffset", "[", 
     RowBox[{"max\[Omega]", ",", "N\[Omega]"}], "]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"b1", "[", "\[Tau]_", "]"}], "=", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Tau]", "-", "1"}], ")"}], "2"]}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "impulses", " ", "should", " ", "be", " ", "centred", " ", "around", " ", 
     "t"}], "=", 
    RowBox[{
    "0", " ", "for", " ", "the", " ", "multiple", " ", "scattering", " ", 
     "code"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{"ConvolutionTest", "[", 
   RowBox[{"b1", ",", " ", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"N\[Omega]", "/", "max\[Omega]"}]}], " ", ",", 
    "rng\[Omega]Fourier"}], "]"}], "\[IndentingNewLine]", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Explanation", ":", "\[IndentingNewLine]", 
     RowBox[{"Frequency", " ", 
      RowBox[{"sampled", ":", " ", 
       RowBox[{
       "first", " ", "estimates", " ", "the", " ", "frequency", " ", "of", 
        " ", "b1"}]}]}]}], ",", " ", 
    RowBox[{
    "then", " ", "does", " ", "a", " ", "convolution", " ", "in", " ", 
     "frequency", " ", "space", " ", "with", " ", "the", " ", "2", "D", " ", 
     RowBox[{"Green", "'"}], "s", " ", "function"}], ",", " ", 
    RowBox[{"then", " ", 
     RowBox[{"inverts", ".", "\[IndentingNewLine]", 
      RowBox[{"Analytic", ":", " ", 
       RowBox[{
       "does", " ", "a", " ", "convolution", " ", "in", " ", "time", " ", 
        "with", " ", "b1", " ", "and", " ", "with", " ", "the", " ", "2", "D",
         " ", 
        RowBox[{"green", "'"}], "s", " ", "function", " ", "in", " ", 
        RowBox[{"time", "."}]}]}]}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.662743880451305*^9}, 3.7191291441014557`*^9, {3.719130517621346*^9, 
   3.7191309069223843`*^9}, {3.719130970240593*^9, 3.719130998130855*^9}, {
   3.7191310374720907`*^9, 3.71913104212739*^9}, {3.7191312497637167`*^9, 
   3.719131289962954*^9}, {3.719155804899952*^9, 3.719155925177347*^9}, {
   3.719157607064046*^9, 3.719157693773738*^9}, {3.719158393633019*^9, 
   3.7191584176930847`*^9}, {3.719158448648137*^9, 3.719158578114189*^9}, {
   3.719159378469284*^9, 3.7191594072855864`*^9}, {3.719159437350834*^9, 
   3.719159623654559*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the frequency given, we have mesh t \[Element] Range[0, \"\
\>", "\[InvisibleSpace]", "6.5973445725385655`", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", 
   "0.15342661796601315`", "\[InvisibleSpace]", "\<\"]\"\>"}],
  SequenceForm[
  "For the frequency given, we have mesh t \[Element] Range[0, ", 
   6.5973445725385655`, ",", 0.15342661796601315`, "]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.719158579268713*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF13k0VH/4B/BpIWbGcK+ZsZclZaeyfRXPE5ItZUm+IiJLEUVSEkKi1ZIl
2fct2WZCFJXShrQJSUobSV+plHx/8zvn9/O9/9zzOuee53Of930+954r5xFo
57WQQqE4LqBQ/vf8o/rrKk0y2ojyf0ePkd6SwhR3+H9/7u8biUjZN+/fZeU9
/ilR814oknzHMyVx3nEm/CZuKXnzNndto7im1MxbeU/2q+0pbfP+KHNevHfD
o3mPWFxgJpS/+K9ezJZ9574Oz/vGIfGrqT6j807cHBXolfRx3vyGVfH7mBPz
PtU0Hquz/uu8XTbYh4nZTc07alBKPv3c9Lz37mqI+F3yY96liZvOPa+fmbdO
p7md7eff8z49KXrvMmVu3lLJsr+2ylLw/82O0PsovHbBvA96cFe3GC+cd5S1
99Yr7ovmPaER0Vvkt3je/GJ3lF6f5pu3qa3I3y/K+Of9Pqb9zc3aJfPWbinc
+KdHYN6j45/5lF8KznuSvbnI9PV/nsUaY/fR/0ymBkWmf/7PaPjjJ9/cf754
hjI+spQ6b1sN0d4s9//s4nRgX+MuKm5fFLLU4P6UkW/0U8YTXyr2fBQ47GzL
D8FVupe++FPxYBS/ymIHBkQ8S7ei7aci++KIvXMoCScpMx9XhFDxQeNwiLQ3
C1JVnOOND1MxZ9fmB7qS4lAVId1x+BivXuj6dzZiMtBYdtQz9TgVxTowIyJ4
GdzsHVpQm0BFV4nGMYdhWehfkW/0IYmKn69cHft7qQIs6VZsdCygYrbtp5Vz
R1cCORPnGFRCxWfBvcIB55VgqcKHb2cqqLjSwPr0tkpl0A6tWNVRR8WMb0GF
aoOq4LFMs3LNTSoe0mcfc1bWgtZA/RyRt1RsOSjc/dcbbRh2nQs9/oGK3xUE
laUTdWCh9S3bX+NUVLDwDvECXTBT2sL3dpqKDqJ8arHFetA17ON/ZQkNM3xl
GvSSDWCyS91MjU7DrStk92Y5rAWydWpZvggNr6YOsGmS68DxQuTjkxI0LOja
u9au2hCGbNMNdqjScM/NLactIxEo6Mp8rEnD4rL8RVWfEeQ1FCY2atPwqN8L
s5eu68Gbejl/lSEN9wstt31iYgwTN24L8G2m4fBGrUCJlaYwt+b7s8ogXn1V
0S4ze3OQlW+pkQ2lodl2zSnhN+ZgLBJ9MvUIDYU1z71cH2IBceNCRpGxNJwQ
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
NYugT8/un8k8NrKZFfo7VIrAQV1x1cJCNtZrsa/7KxaBlfj96uWlbIx+vOFN
ilQRGEywK3ZfZqOCQJIIVaAIxDKr86aus/GR5u+tya8LoffryzNLXrPxWvi9
F9/TCmFj/jpfTQUxjCjTGDanFsKSmOSEkjoxHCKlfpn8yocZd+m+NH1xHDM/
eENHJh/mfEpER6+KI+uJ29p/XPKg72vnVWdLCUxrjnU32ZALb0OXJVl0S+CD
jndd6+k5kHZmVOHiIwlkxGtkCC/JAYvCSu74YwmkLIXEVwtyoLpLb/BcnwSK
XDnEH/cjGw4rbln57LUE7trW/2p8JBsYj6NaPb5JYJvS7BfZ5mzQ1xj5eERC
EqciiOXie7Lhk0lZ+EMpSXRpXDGo5JUN2X8HCC9bKok1IR9S1rpnw8Ljv7Rv
yEti/NyXWW/HbHg4QEYJqEni7duPzj41zgaPBBN2qpEkXo93jxWRzgZWrmD5
O5REH4dX51EsGzobutfqm0ji6pq8c0FkNqgPb985sFESb3hcMxoUyIafugeq
5GwlUSo42O32dBZUWBtAsL0kysbRcvi+ZoGrB6X31lZJzNl5qcVsPAtunDn9
w8dZEjVSBVO7RrIgpNDuZJOLJEonmFqzhrJAqUlchuYmiTJhJ4dcX2RBf9fQ
ZZedkujZlGNZ9iQLzrwtMq72lMS+uxvOfevOgv8BueHiEg==
          
          "]]}}}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          PointSize[Large]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQDQN9LeuZvzZ37lf6a3+wevFh+1TR/5pV6zqg/Mv2
W1hYFr971b5/8+/7Cy1L79pPvvPUXN+0HSr/2D7SvXmXe2/b/qw//Rujel7Y
b2zucZ/3vhWq/q19Vz2vl2xs6/66v+KePPof7b+nH3wecqkFqv+zfUOqXdPT
gJb9x/6kW74W/2a/n8NJ0/1qM9S8H/asB1R0Tyc27+f/s13zFMNve/t/St1T
PjVBzf9r/6bt7Yb9XU37w3+zS618+d/++C8pm3OqTVD7GB3cI/8efnu8cX/A
X21Wl0wmh8yM4MqG7Eao/cwOF+/m82aINe7/8ie4dvNdFoe+uCjDKwcaoO5h
c+jxK0pVKmnYP+NP9VelIHYH5jxH1u1KDVD3cTh84dK+uP1o/X7bP4tzJx3j
dCj5KLaoeWMd1L3cDpbNbEdPT63e//D36aeM1jwOiyeWWgTNL4K6n9fBRL55
6dZlQfatvz/HFq7nc5A6GZlR6ddlD/EPv4PAk6N+bIoL7Kf+5c3+MFHA4aTn
khz/jtX2EP8JOnhpNjHv79tkn/5XUV3jjKCDEdfK6zdPbrGH+FfIYb8T/9FU
4y32ln9NH8ezCTvwKZ5mL72/0R7if2EHlxbfSVPD1tlz//WcP91BxCHAw+Uf
z7GV9pDwEHFYfLX/YVbKMvu7f2Kjz1eJOqTpC4VNfb/YHhI+Yg4v7p5ffUx0
kf36P4Xi7FvFHF4xuFfHzVtgDwkvcQfR4tB3EZfn2Tf+ab1s917cQXXi1Zu8
J+fYQ8JPwmGz0anmaeyz7UP+zOwv05R00LgdlJtZN9MeEp6SDrpdnDd9lGfY
AwAuAE4E
          "]]}, {}}}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Convolution of Impluse b(t) with 2D Green's function.\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"analytic w[t]\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Frequency sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\"", 
           "\"Time sampled \\!\\(\\*SubsuperscriptBox[\\(w\\), \\(N\\), \
\\(n\\)]\\)\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.719158581306972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Xs", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2.0", ",", "0."}], "}"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"radius", "=", "1.0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"N0", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"options", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ImpulseFunction\>\"", "\[Rule]", 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["#", "2"]}]], "&"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<ImpulsePosition\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1."}], ",", "0."}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<MaxFrequencySamples\>\"", "\[Rule]", " ", "45"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PrintChecks\>\"", "\[Rule]", " ", "False"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<MaxFrequency\>\"", "\[Rule]", " ", 
        RowBox[{"10.", "/", "radius"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<MaxTime\>\"", "\[Rule]", " ", "10"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<MeshSize\>\"", "\[Rule]", 
        RowBox[{"radius", "/", "3"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Dirichlet\>\""}], 
       ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "\"\<BoundaryCondition\>\"", "\[Rule]", " ", "\"\<Neumann\>\""}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<MaxTimeSamples\>\"", "\[Rule]", " ", "2"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"\"\<MaxRadius\>\"", "\[Rule]", "3"}]}], "*)"}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x0", ",", "x1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}], ",", "listWaves"}], 
      "}"}], "=", " ", 
     RowBox[{"ListWavesDueToImpulse", "[", 
      RowBox[{"Xs", ",", " ", "radius", ",", "N0", ",", "options"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.662743880451305*^9}, 3.7191291441014557`*^9, {3.719130517621346*^9, 
   3.7191309069223843`*^9}, {3.719130970240593*^9, 3.719130998130855*^9}, {
   3.7191310374720907`*^9, 3.71913104212739*^9}, {3.7191312497637167`*^9, 
   3.719131289962954*^9}, {3.719155804899952*^9, 3.719155925177347*^9}, {
   3.719157607064046*^9, 3.719157693773738*^9}, {3.719158393633019*^9, 
   3.7191584176930847`*^9}, {3.719158448648137*^9, 3.719158578114189*^9}, 
   3.719158610944929*^9, {3.719158664099771*^9, 3.719158686776422*^9}, {
   3.719158748517715*^9, 3.719158793185062*^9}, {3.71915891248901*^9, 
   3.719159009613105*^9}, {3.71915907981958*^9, 3.7191590907061443`*^9}, 
   3.719159193881247*^9, 3.719159660133671*^9, {3.719159703531776*^9, 
   3.7191597038047953`*^9}, {3.719159749655136*^9, 3.719159749829108*^9}, {
   3.7191647203947763`*^9, 3.719164720619741*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the frequency given, we have mesh t \[Element] Range[0, \"\
\>", "\[InvisibleSpace]", "28.274333882308138`", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", 
   "0.3107069657396499`", "\[InvisibleSpace]", "\<\"]\"\>"}],
  SequenceForm[
  "For the frequency given, we have mesh t \[Element] Range[0, ", 
   28.274333882308138`, ",", 0.3107069657396499, "]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.719158688041027*^9, 3.719158805974375*^9, 
  3.719158926791204*^9, 3.71915897037986*^9, 3.719159010581048*^9, 
  3.719159091529519*^9, 3.719159202975217*^9, 3.719159707757296*^9, 
  3.719159751148114*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.719159653883116*^9, 3.7191597300682507`*^9, 
  3.7191634709285307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotSequence", "=", " ", 
   RowBox[{"ListPlotSequence", "[", 
    RowBox[{"listWaves", ",", "options"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listplots", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Show", "@@", "#"}], ")"}], "&"}], "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"plotSequence", ",", 
       RowBox[{"DrawScatterers", "[", 
        RowBox[{"Xs", ",", "radius"}], "]"}]}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<OneBigScatterer.gif\>\""}], ",", "listplots"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6581293221919603`*^9, 3.658129332714596*^9}, {
   3.660463919696763*^9, 3.660463926297003*^9}, {3.662743876417746*^9, 
   3.662743880451305*^9}, 3.7191291441014557`*^9, {3.719130517621346*^9, 
   3.7191309069223843`*^9}, {3.719130970240593*^9, 3.719130998130855*^9}, {
   3.7191310374720907`*^9, 3.71913104212739*^9}, {3.7191312497637167`*^9, 
   3.719131289962954*^9}, {3.719155804899952*^9, 3.719155925177347*^9}, {
   3.719157607064046*^9, 3.719157693773738*^9}, {3.719158393633019*^9, 
   3.7191584176930847`*^9}, {3.719158448648137*^9, 3.719158578114189*^9}, 
   3.719158610944929*^9, {3.719158664099771*^9, 3.719158667276082*^9}, {
   3.7191587026712418`*^9, 3.719158738916196*^9}, {3.719158829006968*^9, 
   3.719158831873375*^9}, {3.719159095413691*^9, 3.719159155832397*^9}, 
   3.7191597121004057`*^9}],

Cell[BoxData["\<\"/home/art/uom/study/Scattering/ScatterCylinder/v3/examples/\
OneBigScatterer.gif\"\>"], "Output",
 CellChangeTimes->{3.7191591301008053`*^9, 3.719159167849195*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2216, 33, 77, "Input"],
Cell[CellGroupData[{
Cell[2799, 57, 1782, 24, 97, "Section"],
Cell[CellGroupData[{
Cell[4606, 85, 3187, 75, 423, "Input"],
Cell[7796, 162, 496, 10, 34, "Print"],
Cell[8295, 174, 21094, 407, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29426, 586, 3557, 83, 670, "Input"],
Cell[32986, 671, 677, 13, 34, "Print"],
Cell[33666, 686, 128, 2, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33831, 693, 1626, 36, 167, "Input"],
Cell[35460, 731, 181, 2, 68, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

